var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AnswerComponent.html",[0,0.27,1,0.746]],["body/components/AnswerComponent.html",[0,0.393,1,1.18,2,1.255,3,0.281,4,0.281,5,0.975,6,0.975,7,0.975,8,0.975,9,0.238,10,2.18,11,1.139,12,1.323,13,3.092,14,0.975,15,1.731,16,1.569,17,2.888,18,1.139,19,4.352,20,1.139,21,3.745,22,0.281,23,0.842,24,2.661,25,3.365,26,1.44,27,5,28,4.736,29,1.869,30,2.718,31,4.127,32,1.869,33,3.336,34,0.699,35,0.892,36,3.745,37,0.585,38,0.039,39,1.139,40,2.64,41,2.661,42,3.035,43,1.53,44,2.64,45,2.661,46,1.246,47,2.131,48,2.082,49,1.246,50,3.745,51,2.661,52,2.718,53,2.64,54,3.091,55,1.686,56,0.842,57,0.856,58,0.842,59,1.318,60,1.124,61,1.44,62,2.64,63,2.64,64,3.745,65,2.64,66,3.745,67,4.352,68,3.878,69,2.64,70,2.082,71,3.745,72,3.745,73,2.661,74,1.458,75,1.383,76,3.745,77,3.745,78,2.339,79,0.879,80,1.525,81,3.745,82,0.601,83,2.172,84,1.686,85,0.477,86,2.18,87,1.649,88,2.64,89,2.18,90,1.076,91,0.281,92,0.016,93,1.255,94,0.885,95,3.745,96,2.64,97,1.52,98,4.736,99,2.64,100,4.352,101,3.745,102,2.64,103,0.885,104,2.64,105,2.64,106,1.587,107,2.64,108,2.64,109,2.64,110,2.18,111,3.745,112,3.745,113,1.188,114,2.18,115,1.649,116,1.649,117,1.525,118,2.131,119,2.42,120,1.869,121,1.525,122,2.037,123,1.773,124,1.869,125,2.64,126,2.18,127,2.18,128,1.318,129,1.876,130,2.64,131,0.803,132,1.383,133,0.975,134,0.975,135,0.975,136,0.594,137,0.975,138,0.658,139,0.975,140,0.658,141,0.975,142,0.975,143,0.594,144,0.975,145,0.658,146,0.975,147,0.975,148,0.594,149,0.975,150,0.975,151,0.975,152,0.05,153,0.07,154,0.05]],["title/components/AppComponent.html",[0,0.27,136,0.673]],["body/components/AppComponent.html",[0,0.308,1,0.353,2,0.778,3,0.151,4,0.151,5,0.523,6,0.523,7,0.523,8,0.523,9,0.128,11,0.706,12,0.897,14,0.523,15,1.481,16,1.342,17,1.291,18,0.706,20,0.706,22,0.151,23,0.522,26,1.038,34,0.474,35,0.871,37,0.552,38,0.038,39,1.231,42,1.898,43,1.452,46,0.353,49,0.353,56,0.319,57,0.533,58,0.319,59,1.159,60,0.961,61,1.3,68,1.65,73,1.007,74,1.356,75,0.858,79,0.961,80,0.946,82,0.474,85,0.256,91,0.247,92,0.009,93,0.989,97,1.038,103,1.766,106,0.778,117,2.093,118,2.237,119,0.788,120,2.372,121,1.882,122,2.025,123,1.817,124,1.703,128,2.43,131,0.431,132,0.858,133,0.523,134,0.523,135,0.523,136,0.768,137,0.523,138,0.353,139,0.523,140,0.353,141,0.523,142,0.523,143,0.319,144,0.523,145,0.353,146,0.523,147,0.523,148,0.319,149,1.09,150,0.523,151,0.523,152,0.027,153,0.044,154,0.027,155,1.007,156,1.65,157,2.436,158,1.917,159,0.42,160,3.11,161,1.536,162,2.421,163,2.436,164,2.436,165,2.436,166,3.292,167,2.353,168,2.436,169,2.677,170,3.11,171,2.818,172,2.818,173,3.341,174,2.818,175,1.291,176,3.11,177,1.417,178,1.417,179,3.924,180,3.17,181,3.94,182,2.569,183,1.417,184,1.417,185,1.833,186,1.417,187,1.917,188,2.67,189,1.917,190,1.417,191,2.132,192,1.917,193,3.341,194,2.818,195,1.451,196,0.989,197,1.417,198,0.946,199,1.291,200,1.417,201,1.898,202,1.936,203,1.968,204,1.417,205,1.917,206,1.917,207,1.917,208,1.817,209,1.417,210,2.528,211,3.341,212,1.417,213,3.528,214,1.917,215,1.328,216,1.917,217,2.818,218,1.917,219,1.417,220,1.65,221,2.818,222,2.425,223,1.417,224,1.65,225,1.917,226,1.451,227,2.818,228,1.917,229,1.417,230,2.876,231,2.876,232,1.417,233,1.417,234,2.818,235,1.917,236,1.917,237,1.917,238,1.417,239,1.417,240,1.65,241,1.917,242,2.876,243,1.144,244,1.703,245,2.02,246,1.417,247,1.169,248,1.007,249,0.885,250,1.291,251,1.169,252,0.788,253,1.007,254,0.788,255,1.169,256,1.917,257,1.169,258,1.169,259,1.169,260,1.169,261,1.169,262,1.169,263,1.169,264,2.436,265,1.917,266,2.436,267,1.007,268,1.169,269,1.169,270,2.322,271,2.322,272,2.322,273,2.322,274,2.322,275,3.768,276,2.322,277,1.045,278,2.425,279,3.11,280,2.322,281,2.132,282,3.414,283,1.65,284,4.462,285,2.818,286,2.322,287,2.322,288,2.322,289,2.322,290,2.322,291,1.917,292,2.322,293,2.818,294,2.02,295,2.322,296,3.683,297,1.65,298,1.65,299,2.322,300,1.917,301,2.322,302,1.65,303,1.917,304,1.917,305,2.322,306,2.322,307,2.322,308,2.322,309,1.451,310,2.322,311,2.322,312,2.818,313,2.322,314,2.322,315,1.65,316,2.322,317,1.65,318,1.898,319,2.425,320,2.322,321,1.65,322,1.65,323,1.917,324,2.322,325,2.322,326,2.322,327,1.65,328,1.451,329,1.917,330,0.946,331,2.322,332,1.917,333,1.65,334,2.322,335,1.417,336,1.88,337,1.473,338,1.007,339,1.451,340,3.282,341,1.417,342,0.885,343,2.885,344,2.322,345,1.917,346,1.417,347,1.417,348,2.132,349,2.097,350,1.169,351,0.638,352,2.528,353,1.007,354,1.007,355,1.417,356,1.451,357,1.917,358,2.951,359,2.481,360,3.042,361,2.226,362,1.417,363,2.436,364,1.65,365,1.417,366,1.417,367,1.417,368,1.417,369,2.67,370,2.322,371,1.898,372,1.641,373,2.818,374,2.322,375,1.65,376,1.917,377,1.417,378,1.917,379,1.65,380,1.65,381,2.097,382,1.917,383,2.322,384,1.417,385,1.417,386,1.169,387,2.322,388,1.169,389,2.322,390,1.451,391,1.417,392,1.169,393,1.417,394,1.417,395,1.007,396,1.417,397,1.417,398,2.322]],["title/modules/AppModule.html",[399,1.868,400,1.868]],["body/modules/AppModule.html",[1,1.377,3,0.344,4,0.344,9,0.291,16,0.89,38,0.039,46,1.377,49,1.377,82,0.977,85,0.583,91,0.344,92,0.02,131,0.982,136,1.337,138,1.377,140,1.377,143,1.242,145,1.377,148,1.242,152,0.061,153,0.081,154,0.061,330,1.315,399,2.016,400,3.889,401,1.795,402,2.016,403,3.992,404,3.992,405,3.992,406,2.294,407,2.665,408,2.665,409,2.665,410,2.665,411,2.665,412,3.071,413,2.756,414,2.756,415,3.55,416,1.795,417,3.228,418,3.55,419,4.3,420,3.55,421,2.016,422,4.3,423,2.294,424,4.3,425,2.665,426,3.55,427,3.228,428,3.228,429,2.665,430,3.228,431,3.228,432,3.228,433,3.228,434,3.228,435,2.665,436,2.665,437,2.665,438,4.3,439,3.228,440,3.228]],["title/classes/AppPage.html",[92,0.018,441,2.125]],["body/classes/AppPage.html",[3,0.467,4,0.467,9,0.396,22,0.467,23,1.173,35,0.838,38,0.038,60,1.173,82,0.704,91,0.467,92,0.027,106,1.47,113,2.349,121,1.787,152,0.083,153,0.098,154,0.083,156,3.116,421,2.74,441,3.707,442,1.974,443,3.621,444,5.764,445,5.764,446,4.386,447,5.973,448,4.386,449,4.386,450,4.386,451,4.386,452,4.386]],["title/modules/AppRoutingModule.html",[399,1.868,412,1.663]],["body/modules/AppRoutingModule.html",[3,0.485,4,0.485,9,0.411,38,0.038,82,0.857,85,0.823,91,0.485,92,0.028,152,0.086,153,0.1,154,0.086,401,2.532,406,3.236,412,2.967,418,3.759,426,4.404,453,4.554,454,4.554,455,4.02,456,5.335,457,3.759,458,3.759,459,4.554]],["title/classes/Bullet.html",[92,0.018,460,1.663]],["body/classes/Bullet.html",[3,0.298,4,0.298,9,0.252,22,0.298,23,0.877,34,0.449,35,0.903,37,0.346,38,0.039,56,1.01,57,0.811,58,1.01,60,0.877,61,1.186,80,1.139,91,0.298,92,0.017,97,1.186,103,1.856,152,0.053,153,0.073,154,0.053,159,0.705,182,1.555,185,0.937,208,1.589,226,2.436,294,2.241,309,1.747,312,3.219,350,2.309,361,1.396,371,3.019,416,1.555,442,1.259,460,3.019,461,2.309,462,5.109,463,4.49,464,5.538,465,4.49,466,4.49,467,2.771,468,2.805,469,3.9,470,3.934,471,3.934,472,3.759,473,3.9,474,3.9,475,2.797,476,2.797,477,2.797,478,2.797,479,2.797,480,3.9,481,3.19,482,2.797,483,2.797,484,3.219,485,4.367,486,2.797,487,1.987,488,2.797,489,2.797,490,2.797,491,2.169,492,2.309,493,2.797,494,2.797,495,4.49,496,1.987,497,2.797,498,4.858,499,2.797,500,1.987,501,4.858,502,2.797,503,5.109,504,5.109,505,3.9,506,4.858,507,4.858,508,4.858,509,3.63,510,2.797,511,3.9,512,2.436,513,2.309,514,2.797,515,1.987,516,2.797,517,2.797,518,3.9,519,3.9,520,2.797,521,2.797,522,1.396,523,2.169,524,2.797,525,3.451,526,3.9,527,3.9,528,3.9,529,3.9,530,3.9,531,3.9,532,2.797,533,3.9,534,2.797,535,2.797,536,2.797,537,2.797,538,2.797,539,3.9,540,2.169,541,2.797,542,1.987,543,1.987,544,1.747,545,1.987,546,1.747,547,2.797,548,2.797,549,2.797,550,2.797]],["title/components/GameComponent.html",[0,0.27,138,0.746]],["body/components/GameComponent.html",[0,0.361,1,0.568,2,1.128,3,0.243,4,0.243,5,0.842,6,0.842,7,0.842,8,0.842,9,0.206,11,1.023,12,1.217,14,0.842,15,1.679,16,1.522,17,2.458,18,1.023,20,1.023,22,0.243,23,0.757,24,2.392,26,1.344,29,1.68,30,2.5,32,1.68,33,1.423,34,0.643,35,0.915,37,0.673,38,0.038,42,2.458,43,1.218,45,2.392,46,0.568,47,1.99,48,1.872,49,0.839,51,1.619,52,2.103,54,2.779,55,1.026,56,0.9,57,0.852,58,0.9,59,1.68,60,1.11,61,1.501,73,1.619,74,0.764,75,1.478,79,1.032,82,0.643,83,1.68,84,1.515,85,0.412,90,1.63,91,0.243,92,0.014,93,1.341,94,0.764,97,1.434,103,0.764,106,1.128,110,3.649,115,1.423,117,1.63,118,2.123,120,1.997,121,1.801,122,1.63,123,0.928,124,1.137,128,2.206,129,1.619,131,0.693,132,1.243,133,0.842,134,0.842,135,0.842,136,1.06,137,0.842,138,1.102,139,0.842,140,0.568,141,0.842,142,0.842,143,0.757,144,0.842,145,0.568,146,0.842,147,0.842,148,1.11,149,1.243,150,0.842,151,0.842,152,0.043,153,0.063,154,0.043,159,0.608,161,1.802,162,2.222,175,1.872,185,1.825,188,2.5,195,1.423,196,1.873,198,1.63,201,1.267,224,3.351,243,1.794,248,1.619,249,1.423,278,1.619,285,3.304,293,2.779,294,2.354,296,3.304,300,1.881,302,1.619,303,1.881,304,1.881,318,1.267,328,1.423,329,1.881,330,1.63,336,1.997,337,1.997,338,1.619,339,2.5,340,2.844,342,1.423,343,2.103,345,1.881,348,1.423,351,1.515,352,2.103,353,2.392,356,1.423,363,1.881,369,1.423,371,1.267,372,1.267,381,3.351,429,1.881,468,2.103,485,1.881,522,2.463,523,1.872,546,2.761,551,1.881,552,4.003,553,3.366,554,3.304,555,4.003,556,4.003,557,3.366,558,4.421,559,2.5,560,3.366,561,2.279,562,2.279,563,3.366,564,2.279,565,2.279,566,4.421,567,2.279,568,2.279,569,3.366,570,2.279,571,2.279,572,2.279,573,2.279,574,2.279,575,2.279,576,2.279,577,5.107,578,3.366,579,3.366,580,2.279,581,2.279,582,1.881,583,3.366,584,4.421,585,2.279,586,2.392,587,3.366,588,2.279,589,3.366,590,3.366,591,4.421,592,2.279,593,2.279,594,4.003,595,3.366,596,1.881,597,0.928,598,1.619,599,1.881,600,4.003,601,2.279,602,2.279,603,2.279,604,2.279,605,2.279,606,2.279,607,2.279,608,2.279,609,2.279,610,2.279,611,1.619,612,2.279]],["title/injectables/GameService.html",[413,1.493,613,1.663]],["body/injectables/GameService.html",[3,0.427,4,0.427,9,0.362,22,0.427,23,1.11,34,0.643,35,0.86,37,0.662,38,0.039,39,1.218,55,1.803,56,1.11,57,0.892,58,1.11,60,0.901,79,0.809,80,1.632,82,0.86,85,0.724,91,0.427,92,0.025,113,1.803,152,0.075,153,0.093,154,0.075,159,0.892,162,2.223,191,2.502,196,1.794,202,1.632,203,1.479,413,2.464,423,2.846,613,2.746,614,2.846,615,3.307,616,3.345,617,4.077,618,3.307,619,4.614,620,4.939,621,3.509,622,4.939,623,4.006,624,4.006,625,4.006,626,3.307,627,3.307,628,2.846,629,1.999,630,2.502,631,3.307,632,2.502,633,3.307,634,4.006,635,4.006,636,4.006,637,4.006]],["title/components/LeaderboardComponent.html",[0,0.27,140,0.746]],["body/components/LeaderboardComponent.html",[0,0.366,1,0.581,2,1.148,3,0.249,4,0.249,5,0.862,6,0.862,7,0.862,8,0.862,9,0.211,11,1.041,12,1.234,14,0.862,15,1.688,16,1.529,18,1.041,20,1.041,22,0.249,23,0.77,26,1.359,29,1.709,34,0.375,35,0.879,37,0.615,38,0.038,46,0.581,49,0.581,52,3.11,56,0.524,57,0.733,58,0.524,60,0.912,61,1.359,74,1.148,78,2.139,82,0.652,83,2.231,85,0.422,91,0.249,92,0.014,94,1.148,97,1.564,103,1.724,106,1.148,116,1.457,117,1.821,118,2.143,120,2.025,121,1.395,122,1.94,123,1.94,124,2.025,128,2.484,131,0.709,132,1.265,133,0.862,134,0.862,135,0.862,136,0.524,137,0.862,138,0.581,139,0.862,140,1.114,141,0.862,142,0.862,143,0.524,144,0.862,145,0.581,146,0.862,147,0.862,148,0.524,149,1.265,150,0.862,151,0.862,152,0.044,153,0.064,154,0.044,159,0.619,161,1.826,169,2.883,180,2.433,181,2.433,182,1.904,185,1.498,196,1.148,198,1.395,202,0.95,203,0.862,208,0.95,210,3.11,222,2.433,242,2.433,243,1.991,244,1.709,245,1.709,253,2.433,254,2.256,267,1.657,336,2.025,337,2.025,338,1.657,339,2.535,340,2.883,342,1.457,343,3.11,349,1.657,351,2.241,352,2.535,353,2.433,356,2.535,357,1.926,359,2.256,360,2.793,361,2.231,369,2.975,371,1.297,372,1.297,373,1.926,375,1.657,376,1.926,378,1.926,381,3.656,386,1.926,388,4.582,390,1.457,392,2.827,414,2.484,436,1.926,522,2.484,597,0.95,611,1.657,616,2.139,629,2.484,632,1.457,638,1.926,639,4.058,640,3.425,641,4.058,642,4.762,643,4.762,644,4.471,645,4.471,646,2.333,647,3.425,648,2.333,649,2.333,650,2.333,651,5.145,652,3.75,653,2.333,654,2.333,655,3.425,656,2.333,657,3.425,658,3.425,659,2.333,660,2.333,661,2.827,662,3.425,663,3.425,664,3.425,665,2.433,666,1.926,667,2.333,668,3.425,669,3.425,670,3.425,671,1.926,672,1.926,673,1.926,674,1.926,675,1.926,676,2.333,677,2.333,678,2.333,679,2.333,680,2.333,681,2.333,682,3.425,683,3.425,684,3.425,685,3.425,686,1.926,687,2.333,688,2.333,689,3.425,690,2.333,691,1.657,692,2.827,693,2.333]],["title/interfaces/Level.html",[162,1.346,250,1.663]],["body/interfaces/Level.html",[0,0.41,3,0.304,4,0.304,9,0.258,11,0.869,12,1.203,15,0.869,16,0.787,18,0.869,20,0.869,22,0.304,26,0.869,34,0.459,37,0.489,38,0.039,39,1.565,43,1.351,59,1.426,68,2.03,74,1.522,75,1.055,79,0.8,82,0.729,85,0.516,91,0.422,92,0.018,93,1.522,103,1.326,117,1.85,136,0.642,152,0.054,153,0.074,154,0.054,155,2.03,156,2.03,157,2.359,158,2.359,159,0.715,160,3.267,161,1.286,162,2.575,163,2.359,164,2.359,165,2.359,166,3.216,167,2.837,168,2.359,169,2.03,170,2.359,171,2.359,172,2.359,173,3.267,174,2.359,176,2.359,179,4.25,180,3.483,181,4.107,182,2.726,185,1.83,187,2.359,188,3.216,189,2.359,191,2.472,192,2.359,193,3.749,194,3.267,195,1.785,196,0.958,198,1.164,199,1.589,201,2.525,202,1.164,203,2.135,205,2.359,206,2.359,207,2.359,208,2.169,210,2.837,211,3.749,213,4.508,214,2.359,215,1.286,216,2.359,217,2.359,218,2.359,220,2.03,221,4.25,222,3.658,224,2.03,225,2.359,226,1.785,227,3.267,228,2.359,230,2.812,231,2.812,234,3.267,235,2.359,236,2.359,237,2.359,240,2.03,241,2.359,242,2.03,243,0.958,244,1.426,245,2.569,247,2.359,248,2.03,249,1.785,250,2.525,251,3.267,252,2.201,253,2.812,254,1.589,255,2.359,256,3.267,257,2.359,258,2.359,259,2.359,260,2.359,261,2.359,262,2.359,263,2.359,264,3.749,265,3.267,266,3.749,267,2.03,268,2.359,269,2.359,277,1.286,694,2.857]],["title/classes/Movie.html",[43,0.824,92,0.018]],["body/classes/Movie.html",[3,0.442,4,0.442,9,0.374,22,0.442,34,0.666,35,0.908,37,0.699,38,0.038,39,1.888,41,4.24,43,1.498,56,0.932,57,0.749,58,0.932,70,2.305,79,0.838,90,1.688,91,0.442,92,0.026,152,0.078,153,0.095,154,0.078,159,0.911,166,3.727,277,1.866,442,1.866,695,3.422,696,4.145,697,2.068,698,5.797,699,5.043,700,5.043,701,4.145,702,4.145,703,4.145,704,4.145,705,4.145]],["title/components/OptionComponent.html",[0,0.27,49,0.746]],["body/components/OptionComponent.html",[0,0.461,1,1.273,2,1.307,3,0.298,4,0.298,5,1.033,6,1.033,7,1.033,8,1.033,9,0.252,11,1.186,12,1.365,13,3.19,14,1.033,15,1.75,16,1.586,17,2.841,18,1.186,20,1.186,22,0.298,23,0.877,25,3.451,26,1.477,29,1.946,30,2.805,32,1.946,33,3.391,34,0.721,35,0.889,37,0.6,38,0.038,39,1.365,41,3.63,42,3.079,43,1.613,46,0.697,47,2.186,48,2.169,49,1.319,55,1.755,57,0.705,60,1.01,61,1.365,70,2.701,75,1.44,79,0.907,82,0.626,83,2.241,84,1.755,85,0.505,86,2.309,91,0.298,92,0.028,93,1.505,94,0.937,97,1.477,106,1.307,115,1.747,116,3.305,117,1.139,118,2.021,119,2.169,120,1.396,121,1.139,122,1.589,123,1.139,124,1.396,127,3.219,131,0.85,132,1.44,133,1.033,134,1.033,135,1.033,136,0.629,137,1.033,138,0.697,139,1.033,140,0.697,141,1.033,142,1.033,143,0.629,144,1.033,145,0.697,146,1.033,147,1.033,148,0.629,149,1.033,150,1.033,151,1.033,152,0.053,153,0.073,154,0.053,159,0.705,166,2.436,202,1.139,203,1.033,302,2.771,323,2.309,336,1.946,337,1.946,339,2.436,342,2.436,360,1.747,369,2.436,371,1.555,372,1.555,379,1.987,380,1.987,540,2.169,597,1.589,661,2.309,697,1.946,706,2.309,707,4.49,708,3.9,709,5.109,710,4.858,711,3.9,712,2.797,713,2.797,714,3.9,715,2.797,716,3.9,717,2.797,718,2.797,719,2.797,720,3.9,721,3.9,722,3.219,723,3.9,724,3.9,725,3.9,726,2.309,727,2.797,728,4.49,729,2.797,730,2.797,731,2.797,732,2.797,733,3.9,734,3.9,735,3.9,736,3.9]],["title/components/PhaserComponent.html",[0,0.27,143,0.673]],["body/components/PhaserComponent.html",[0,0.267,1,0.355,2,0.781,3,0.152,4,0.152,5,0.526,6,0.526,7,0.526,8,0.526,9,0.128,11,0.709,12,0.9,14,0.526,15,1.483,16,1.344,18,0.709,20,0.709,22,0.152,23,0.524,26,1.041,32,1.163,34,0.475,35,0.718,37,0.467,38,0.039,46,0.355,47,1.54,49,0.355,55,0.64,56,0.32,57,0.535,58,0.32,60,0.666,61,1.041,74,0.992,75,1.264,78,1.849,79,0.471,80,0.58,82,0.55,84,1.049,85,0.257,90,0.949,91,0.152,92,0.014,93,0.477,94,0.781,97,1.483,103,1.804,106,0.781,113,0.64,122,0.58,123,0.58,131,0.433,132,0.861,133,0.526,134,0.526,135,0.526,136,0.32,137,0.526,138,0.355,139,0.526,140,0.355,141,0.526,142,0.526,143,0.77,144,0.526,145,0.355,146,0.526,147,0.526,148,0.666,149,0.526,150,0.526,151,0.526,152,0.027,153,0.044,154,0.027,159,0.421,161,1.332,175,1.296,185,1.9,196,1.266,198,0.949,199,2.485,201,1.646,203,0.526,208,2.095,215,1.049,243,1.595,244,1.708,245,2.829,252,0.791,254,0.791,281,0.889,283,1.656,294,2.309,298,1.011,309,2.89,315,1.656,317,1.011,318,1.646,319,2.432,321,1.656,322,1.011,327,2.432,328,2.359,330,1.206,333,1.656,336,0.71,337,0.71,351,0.64,354,1.656,359,1.646,361,0.71,364,1.011,390,0.889,395,1.011,416,1.296,460,2.767,467,2.103,468,1.456,470,1.011,471,2.103,472,1.011,481,1.011,487,1.011,491,1.903,496,2.683,500,2.103,509,2.432,512,0.889,515,1.011,522,2.71,523,2.767,525,1.011,540,0.791,542,1.656,543,2.882,544,1.849,545,1.011,546,0.889,559,2.138,586,1.011,597,0.58,598,2.882,630,0.889,665,1.656,691,2.103,737,1.011,738,2.444,739,1.924,740,2.675,741,2.444,742,2.331,743,1.924,744,1.423,745,1.924,746,1.423,747,1.423,748,1.656,749,1.924,750,1.924,751,1.423,752,1.924,753,1.924,754,1.924,755,1.423,756,1.423,757,1.924,758,1.175,759,1.175,760,1.175,761,1.456,762,1.175,763,1.175,764,1.175,765,1.175,766,1.175,767,1.175,768,1.175,769,3.689,770,1.175,771,1.175,772,1.175,773,1.175,774,1.175,775,1.924,776,1.924,777,1.175,778,1.175,779,1.175,780,1.175,781,1.175,782,1.175,783,1.175,784,1.175,785,1.175,786,1.175,787,1.175,788,1.175,789,1.175,790,1.175,791,1.175,792,1.175,793,1.175,794,1.175,795,1.175,796,1.175,797,1.175,798,1.924,799,1.924,800,1.175,801,1.175,802,1.175,803,1.175,804,1.175,805,1.175,806,1.175,807,1.175,808,1.175,809,1.175,810,3.348,811,1.924,812,2.825,813,1.924,814,1.924,815,1.924,816,1.924,817,1.175,818,1.924,819,1.924,820,1.924,821,3.535,822,2.444,823,1.924,824,2.444,825,1.175,826,1.175,827,1.175,828,1.175,829,1.924,830,1.175,831,1.175,832,1.175,833,1.175,834,1.175,835,1.924,836,1.175,837,1.175,838,1.924,839,2.444,840,1.924,841,1.924,842,1.175,843,1.924,844,1.175,845,1.175,846,1.924,847,1.924,848,1.011,849,2.444,850,1.175,851,1.175,852,1.175,853,1.175,854,3.535,855,1.175,856,1.175,857,2.444,858,1.924,859,1.175,860,1.924,861,1.175,862,1.175,863,1.924,864,1.175,865,1.175,866,1.175,867,1.175,868,1.175,869,1.175,870,1.175,871,1.175,872,1.011,873,1.175,874,1.175,875,1.175,876,1.175,877,1.175,878,1.175,879,1.175,880,1.175,881,1.924,882,2.825,883,2.825,884,2.825,885,2.444,886,1.175,887,3.348,888,1.011,889,1.175,890,1.924,891,1.924,892,1.924,893,1.924,894,1.175,895,1.175,896,1.924,897,1.924,898,1.924,899,1.175,900,1.924,901,2.444,902,2.825,903,1.175,904,1.175,905,1.175,906,1.924,907,2.444,908,1.924,909,1.175,910,1.924,911,1.175,912,1.924,913,1.175,914,1.924,915,1.175,916,1.175,917,1.924,918,1.175,919,1.175,920,1.924,921,1.175,922,1.175,923,1.175,924,1.175,925,1.175,926,1.011,927,1.175,928,1.924,929,1.175,930,1.175,931,1.924,932,1.011,933,1.175,934,1.175,935,1.175,936,1.175,937,1.175,938,1.175,939,1.175,940,1.924,941,1.924,942,1.924,943,1.924,944,1.175,945,1.175,946,1.175,947,1.175,948,1.924,949,1.924,950,1.175,951,1.175,952,1.175,953,1.175,954,1.175,955,1.175,956,2.444,957,2.444,958,1.175,959,1.175,960,1.175,961,1.175,962,1.175,963,1.175,964,1.175,965,1.175,966,1.175,967,1.175,968,1.175,969,1.924,970,2.444,971,1.924,972,1.924,973,1.924,974,1.924,975,1.924,976,1.175,977,1.924,978,1.175,979,1.924,980,1.175,981,1.175,982,1.924,983,1.175,984,1.175,985,1.175,986,1.175,987,1.175,988,1.175,989,1.175,990,1.175,991,1.175,992,1.175,993,1.175,994,1.175,995,1.175]],["title/components/QuestionComponent.html",[0,0.27,145,0.746]],["body/components/QuestionComponent.html",[0,0.403,1,0.965,2,1.297,3,0.295,4,0.295,5,1.022,6,1.022,7,1.022,8,1.022,9,0.25,11,1.177,12,1.357,13,3.171,14,1.022,15,1.747,16,1.583,18,1.177,20,1.177,22,0.295,23,0.87,25,3.435,26,1.47,29,1.931,34,0.717,35,0.869,37,0.552,38,0.038,39,1.603,43,1.23,45,2.75,46,0.69,49,0.69,57,0.699,60,1.004,61,1.357,74,0.927,75,1.429,82,0.444,83,1.931,85,0.5,87,1.728,90,1.969,91,0.295,92,0.017,93,1.297,97,1.603,106,1.297,115,1.728,116,1.728,117,1.576,118,2.373,119,2.482,120,2.227,121,1.576,122,1.818,123,1.818,124,1.931,126,2.284,128,1.931,131,0.841,132,1.429,133,1.022,134,1.022,135,1.022,136,0.622,137,1.022,138,1.113,139,1.022,140,0.69,141,1.022,142,1.022,143,0.622,144,1.022,145,1.205,146,1.022,147,1.022,148,0.622,149,1.022,150,1.022,151,1.022,152,0.052,153,0.073,154,0.052,159,0.699,277,2.647,278,1.965,279,2.284,318,1.538,343,3.02,348,1.728,351,1.742,352,2.417,356,2.417,359,1.538,360,2.417,361,1.38,372,1.538,375,1.965,379,1.965,380,1.965,540,2.152,597,1.969,611,3.615,722,3.991,872,3.746,888,3.746,996,2.284,997,3.195,998,4.464,999,3.87,1000,5.088,1001,5.088,1002,4.834,1003,3.87,1004,2.766,1005,2.766,1006,2.766,1007,2.766,1008,3.87,1009,5.272,1010,3.87,1011,2.766,1012,4.834,1013,4.834,1014,4.834,1015,3.87,1016,2.766,1017,3.87,1018,2.766,1019,2.766,1020,2.766,1021,2.766,1022,2.766,1023,2.766,1024,3.87,1025,2.766,1026,2.766,1027,3.87,1028,2.766,1029,2.766,1030,2.284,1031,3.87,1032,2.766,1033,2.766,1034,2.766,1035,2.284,1036,2.766]],["title/classes/Quiz.html",[79,0.604,92,0.018]],["body/classes/Quiz.html",[3,0.434,4,0.434,9,0.368,22,0.434,30,3.715,31,4.643,34,0.655,35,0.903,37,0.695,38,0.038,39,1.851,43,1.639,56,0.917,57,0.737,58,0.917,70,2.777,79,1.187,82,0.655,87,3.119,89,4.455,91,0.434,92,0.025,152,0.077,153,0.094,154,0.077,159,0.902,277,2.643,442,1.835,599,3.366,629,2.492,697,2.492,1030,3.366,1037,3.366,1038,4.993,1039,4.993,1040,4.078,1041,4.078,1042,4.078]],["title/components/QuizComponent.html",[0,0.27,46,0.746]],["body/components/QuizComponent.html",[0,0.429,1,0.663,2,1.592,3,0.283,4,0.283,5,0.982,6,0.982,7,0.982,8,0.982,9,0.24,11,1.144,12,1.328,14,0.982,15,1.734,16,1.571,17,2.429,18,1.144,20,1.144,22,0.283,23,0.846,24,2.674,26,1.444,29,1.878,32,1.878,33,2.729,34,0.427,35,0.878,37,0.62,38,0.039,42,2.093,43,1.204,46,1.184,47,2.138,48,2.093,49,0.663,51,2.674,52,2.967,56,0.982,57,0.906,58,0.982,59,1.327,60,1.068,61,1.328,74,1.261,75,1.39,79,1.201,82,0.702,83,1.878,84,1.694,85,0.48,90,1.083,91,0.283,92,0.016,93,0.891,94,1.261,97,1.691,106,1.261,113,1.966,114,2.195,117,1.083,118,2.138,119,2.093,131,0.808,132,1.39,133,0.982,134,0.982,135,0.982,136,0.598,137,0.982,138,1.089,139,0.982,140,0.663,141,0.982,142,0.982,143,0.598,144,0.982,145,0.663,146,0.982,147,0.982,148,0.598,149,0.982,150,0.982,151,0.982,152,0.05,153,0.071,154,0.05,159,0.68,162,2.257,182,2.093,185,1.464,188,2.351,196,1.261,198,1.533,208,1.533,215,1.694,226,2.351,291,3.921,297,2.674,332,2.195,413,2.597,435,2.195,522,2.37,544,1.661,597,1.083,616,3.132,617,3.921,621,1.889,628,1.889,629,1.878,632,1.661,671,2.195,672,2.195,673,2.195,674,2.195,675,2.195,697,2.37,997,3.606,1035,3.107,1043,2.195,1044,4.369,1045,3.764,1046,3.764,1047,2.659,1048,3.764,1049,2.659,1050,2.659,1051,3.764,1052,3.764,1053,2.659,1054,3.764,1055,2.659,1056,3.107,1057,3.764,1058,3.764,1059,3.764,1060,2.659,1061,2.659,1062,3.764,1063,3.764,1064,2.659,1065,3.764,1066,4.369,1067,2.659,1068,2.659,1069,2.659,1070,2.659,1071,2.659,1072,2.659,1073,2.659,1074,2.659,1075,2.659,1076,2.659,1077,2.659,1078,2.659,1079,2.659,1080,2.659,1081,2.659,1082,2.659,1083,2.659,1084,2.659]],["title/classes/Score.html",[92,0.018,243,1.002]],["body/classes/Score.html",[3,0.456,4,0.456,9,0.386,22,0.456,34,0.687,35,0.885,37,0.681,38,0.038,39,1.778,56,0.962,57,0.773,58,0.962,70,2.379,87,2.672,91,0.456,92,0.026,152,0.08,153,0.097,154,0.08,159,0.929,196,1.96,243,1.847,277,1.926,442,1.926,629,2.135,652,4.22,697,2.135,1085,3.532,1086,4.278,1087,6.006,1088,5.141,1089,5.141,1090,4.278,1091,4.278,1092,4.278]],["title/components/SpaceComponent.html",[0,0.27,148,0.673]],["body/components/SpaceComponent.html",[0,0.428,1,0.775,2,1.405,3,0.331,4,0.331,5,1.148,6,1.148,7,1.148,8,1.148,9,0.281,11,1.275,12,1.443,14,1.148,15,1.784,16,1.617,18,1.275,20,1.275,22,0.331,23,0.943,26,1.544,32,2.092,34,0.762,35,0.877,37,0.586,38,0.038,46,1.183,47,2.286,48,2.331,49,0.775,56,0.699,57,0.857,58,0.699,59,1.551,60,1.067,61,1.443,79,0.847,82,0.673,84,1.887,85,0.562,90,1.933,91,0.331,92,0.019,93,1.59,94,1.042,97,1.661,106,1.405,131,0.945,132,1.548,133,1.148,134,1.148,135,1.148,136,0.699,137,1.148,138,1.183,139,1.148,140,0.775,141,1.148,142,1.148,143,1.228,144,1.148,145,0.775,146,1.148,147,1.148,148,1.142,149,1.752,150,1.148,151,1.148,159,0.758,161,2.135,175,2.331,185,1.928,195,2.619,196,1.59,198,2.069,199,2.331,244,2.092,252,2.331,294,2.092,330,1.708,437,2.566,523,3.2,554,3.916,559,3.172,582,2.566,596,2.566,597,1.266,726,3.461,748,2.979,926,3.608,932,2.979,1093,2.566,1094,4.744,1095,4.193,1096,4.193,1097,3.108,1098,3.108,1099,3.108,1100,3.108,1101,4.193,1102,3.461,1103,4.193,1104,4.193,1105,4.193,1106,3.108,1107,3.108,1108,4.193]],["title/classes/SpaceScene.html",[92,0.018,761,1.868]],["body/classes/SpaceScene.html",[0,0.196,3,0.139,4,0.139,9,0.118,11,0.397,12,0.66,15,0.397,16,0.36,18,0.397,20,0.397,22,0.139,23,0.488,26,0.397,34,0.21,35,0.935,37,0.51,38,0.039,39,0.397,47,1.254,55,0.977,56,1.008,57,0.81,58,1.008,60,1.13,61,1.528,74,0.934,75,0.802,78,1.741,79,0.264,80,0.884,82,0.521,84,0.977,85,0.236,90,0.532,91,0.139,92,0.013,93,0.438,94,0.728,97,1.254,103,1.843,113,0.588,122,0.532,123,0.532,143,0.294,148,0.294,152,0.025,153,0.041,154,0.025,159,0.392,161,0.588,175,1.55,185,1.788,196,0.728,198,0.532,199,2.401,201,2.401,202,1.758,203,1.655,208,2.078,215,0.977,243,1.502,244,1.083,245,2.791,252,0.726,254,0.726,277,0.588,281,0.815,283,1.542,294,2.367,298,0.928,309,2.963,315,1.542,317,0.928,318,1.55,319,2.764,321,1.542,322,1.98,327,2.764,328,1.741,330,0.884,333,1.542,336,0.651,337,0.651,351,0.588,354,1.542,359,1.55,361,0.651,364,0.928,390,0.815,395,0.928,416,1.207,442,0.588,460,2.837,467,1.98,468,2.028,470,0.928,471,1.98,472,0.928,481,0.928,484,1.078,487,0.928,491,1.55,496,2.561,500,1.98,509,2.307,512,0.815,515,0.928,522,2.685,523,2.401,525,0.928,540,0.726,542,1.542,543,2.764,544,1.356,545,0.928,546,0.815,559,0.815,586,0.928,597,0.532,598,2.764,630,1.356,665,1.542,691,1.98,737,0.928,738,1.078,739,1.078,740,2.575,741,1.078,743,1.078,745,1.078,748,0.928,749,1.078,750,1.078,752,1.078,753,1.078,754,1.078,757,1.078,758,1.078,759,1.078,760,1.078,761,1.741,762,1.078,763,1.078,764,1.078,765,1.078,766,1.078,767,1.078,768,1.078,769,3.699,770,1.792,771,1.078,772,2.3,773,2.3,774,2.3,775,2.68,776,2.68,777,2.3,778,2.3,779,2.3,780,2.3,781,2.3,782,2.3,783,2.3,784,2.3,785,2.3,786,2.3,787,2.3,788,2.3,789,2.68,790,1.078,791,1.078,792,1.078,793,1.078,794,1.078,795,1.078,796,1.078,797,1.078,798,1.792,799,1.792,800,1.078,801,1.078,802,1.078,803,1.078,804,1.078,805,1.078,806,1.078,807,1.078,808,1.078,809,1.078,810,3.699,811,1.792,812,2.68,813,1.792,814,1.792,815,1.792,816,1.792,817,1.078,818,1.792,819,1.792,820,1.792,821,3.403,822,2.3,823,1.792,824,2.3,825,1.078,826,1.078,827,1.078,828,1.078,829,1.792,830,1.078,831,1.078,832,1.078,833,1.078,834,1.078,835,1.792,836,1.078,837,1.078,838,1.792,839,2.3,840,1.792,841,1.792,842,1.078,843,1.792,844,1.078,845,1.078,846,1.792,847,1.792,848,0.928,849,2.3,850,1.078,851,1.078,852,1.078,853,1.078,854,3.403,855,1.078,856,1.078,857,2.3,858,1.792,859,1.078,860,1.792,861,1.078,862,1.078,863,1.792,864,1.078,865,1.078,866,1.078,867,1.078,868,1.078,869,1.078,870,1.078,871,1.078,872,0.928,873,1.078,874,1.078,875,1.078,876,1.078,877,2.68,878,1.078,879,1.078,880,1.078,881,1.792,882,2.68,883,2.68,884,2.68,885,2.3,886,1.078,887,3.211,888,0.928,889,1.078,890,1.792,891,1.792,892,1.792,893,1.792,894,1.078,895,1.078,896,1.792,897,1.792,898,1.792,899,1.078,900,1.792,901,2.3,902,3.915,903,2.3,904,1.078,905,1.078,906,1.792,907,2.3,908,1.792,909,1.078,910,1.792,911,1.078,912,1.792,913,1.078,914,1.792,915,1.078,916,1.078,917,1.792,918,1.078,919,1.078,920,1.792,921,1.078,922,1.078,923,1.078,924,1.078,925,1.078,926,0.928,927,1.078,928,1.792,929,1.078,930,1.792,931,1.792,932,0.928,933,1.078,934,1.078,935,1.078,936,1.078,937,1.078,938,1.078,939,1.078,940,1.792,941,1.792,942,1.792,943,1.792,944,1.078,945,1.078,946,1.078,947,1.078,948,1.792,949,1.792,950,1.078,951,1.078,952,1.078,953,1.078,954,1.078,955,1.078,956,2.3,957,2.3,958,1.078,959,1.078,960,1.078,961,1.078,962,1.078,963,1.078,964,1.078,965,1.078,966,1.078,967,1.078,968,1.792,969,1.792,970,2.3,971,1.792,972,1.792,973,1.792,974,1.792,975,1.792,976,1.078,977,1.792,978,1.078,979,1.792,980,1.078,981,1.078,982,1.792,983,1.078,984,1.078,985,1.078,986,1.078,987,2.3,988,1.078,989,1.078,990,1.078,991,1.078,992,1.078,993,1.078,994,1.078,995,1.078,1109,2.171,1110,2.171,1111,2.171,1112,2.171,1113,2.171,1114,2.171,1115,2.787,1116,1.306,1117,1.306,1118,1.306,1119,1.306,1120,1.306,1121,1.306,1122,1.306,1123,1.306,1124,1.306,1125,1.306,1126,1.306,1127,1.306,1128,1.306,1129,1.306,1130,1.306,1131,1.306,1132,1.306,1133,1.306,1134,1.306,1135,1.306,1136,1.306,1137,1.306,1138,1.306,1139,1.306,1140,1.306,1141,1.306,1142,1.306,1143,1.306,1144,1.306,1145,1.306,1146,1.306,1147,1.306,1148,1.306,1149,1.306,1150,1.306,1151,1.306,1152,1.306,1153,1.306,1154,1.306,1155,1.306,1156,1.306,1157,1.306,1158,1.306,1159,1.306,1160,1.306]],["title/injectables/UserService.html",[414,1.493,613,1.663]],["body/injectables/UserService.html",[3,0.406,4,0.406,9,0.344,22,0.406,23,1.076,34,0.612,35,0.882,37,0.679,38,0.039,39,1.158,55,1.715,56,1.076,57,0.865,58,1.076,60,1.076,80,1.552,82,0.841,85,0.688,91,0.406,92,0.023,94,1.277,113,2.155,121,1.552,152,0.072,153,0.09,154,0.072,159,0.865,191,2.38,202,1.552,203,1.407,243,1.84,414,2.389,423,2.707,458,3.952,613,2.662,614,2.707,616,3.27,618,3.145,619,4.533,621,3.401,626,3.145,627,3.145,628,2.707,629,1.901,630,2.38,631,3.145,632,2.38,633,3.145,652,2.707,666,3.145,1161,3.145,1162,5.492,1163,4.787,1164,4.787,1165,3.81,1166,4.787,1167,3.81,1168,3.81,1169,4.787,1170,4.787,1171,3.81,1172,4.787,1173,3.81,1174,4.787,1175,3.81,1176,3.81,1177,3.81,1178,3.81]],["title/coverage.html",[1179,3.372]],["body/coverage.html",[0,0.535,1,0.903,9,0.327,10,2.989,37,0.448,38,0.039,43,0.998,46,0.903,49,0.903,79,0.732,92,0.035,94,1.213,103,2.015,129,2.573,136,0.814,138,0.903,140,0.903,143,0.814,145,0.903,148,0.814,152,0.068,153,0.087,154,0.068,155,3.293,162,1.63,167,2.895,215,1.63,240,4.117,243,1.213,250,2.013,281,2.895,349,3.293,351,1.63,382,2.989,413,1.807,414,1.807,441,2.573,443,2.989,460,2.013,461,2.989,551,2.989,613,2.577,615,2.989,638,2.989,686,2.989,692,2.989,695,2.989,706,2.989,737,3.293,740,2.262,761,2.262,996,2.989,1037,2.989,1043,2.989,1085,2.989,1093,2.989,1161,2.989,1179,2.989,1180,3.621,1181,3.621,1182,3.621,1183,2.989,1184,2.989,1185,2.989,1186,2.989,1187,5.795,1188,3.621,1189,3.621,1190,3.621,1191,3.621,1192,3.621,1193,3.621,1194,3.621,1195,4.635,1196,3.621,1197,3.621,1198,3.621,1199,3.621,1200,2.989,1201,4.635,1202,4.635,1203,3.621,1204,3.621,1205,3.621,1206,3.621,1207,3.621,1208,3.621,1209,2.989,1210,2.989,1211,3.826,1212,2.989,1213,3.826,1214,2.989,1215,2.989,1216,3.621]],["title/dependencies.html",[402,2.248,1217,2.497]],["body/dependencies.html",[38,0.039,85,0.797,152,0.083,153,0.099,154,0.083,249,2.756,402,2.756,420,4.322,421,3.271,425,3.642,457,3.642,491,2.453,1218,3.642,1219,4.412,1220,4.412,1221,4.412,1222,4.412,1223,4.412,1224,5.236,1225,4.412,1226,6.042,1227,4.412,1228,4.412,1229,4.412,1230,4.412,1231,4.412,1232,4.412,1233,4.412,1234,4.412,1235,4.412]],["title/index.html",[22,0.266,297,1.774,1236,2.497]],["body/index.html",[38,0.032,43,1.213,79,0.89,80,1.794,152,0.083,153,0.098,154,0.083,210,2.75,230,3.129,231,3.129,330,1.794,492,4.317,1056,3.635,1102,4.317,1218,4.605,1237,4.403,1238,5.23,1239,4.403,1240,5.579,1241,4.403,1242,4.403,1243,4.403,1244,5.23,1245,5.579,1246,4.403,1247,4.403,1248,4.403,1249,4.403,1250,5.894,1251,4.403,1252,4.403,1253,4.403,1254,4.403,1255,4.403,1256,3.635,1257,4.403,1258,5.579,1259,4.403,1260,4.403]],["title/modules.html",[401,2.271]],["body/modules.html",[38,0.034,152,0.09,153,0.103,154,0.09,220,3.4,400,2.989,401,2.661,412,2.661,421,2.989,1261,4.785,1262,4.785,1263,5.49,1264,4.785]],["title/overview.html",[1265,3.372]],["body/overview.html",[1,1.328,2,1.328,38,0.038,46,1.328,49,1.328,74,1.328,103,1.328,131,1.205,136,1.329,138,1.328,140,1.328,143,1.198,145,1.328,148,1.198,152,0.075,153,0.092,154,0.075,215,2.208,250,2.204,330,1.614,399,2.476,400,3.931,401,2.204,402,2.476,403,3.272,404,3.272,405,3.272,406,2.816,407,3.272,408,3.272,409,3.272,410,3.272,411,3.272,412,2.964,413,2.659,414,2.659,415,4.05,416,2.204,442,1.784,512,2.476,513,3.272,614,2.816,1265,3.272]],["title/routes.html",[455,2.902]],["body/routes.html",[38,0.034,152,0.092,153,0.104,154,0.092,455,3.466]],["title/miscellaneous/variables.html",[1266,2.061,1267,2.97]],["body/miscellaneous/variables.html",[22,0.362,37,0.716,38,0.038,128,1.696,152,0.064,153,0.084,154,0.064,167,3.287,185,1.139,202,2.325,203,2.069,208,1.384,245,2.22,348,2.122,491,1.889,697,2.475,740,2.779,848,2.414,1183,2.805,1184,2.805,1185,2.805,1186,2.805,1200,2.805,1209,2.805,1210,2.805,1211,4.343,1212,2.805,1213,2.805,1214,3.672,1215,3.672,1256,3.672,1266,2.805,1267,2.805,1268,3.398,1269,4.448,1270,3.398,1271,3.398,1272,3.398,1273,3.398,1274,3.398,1275,3.398,1276,3.398,1277,3.398,1278,3.398,1279,3.398,1280,3.398,1281,3.398,1282,3.398,1283,3.398,1284,4.448,1285,4.448,1286,4.448,1287,4.448,1288,4.448,1289,4.448,1290,4.448,1291,5.262,1292,4.448,1293,4.448,1294,4.448,1295,4.448,1296,4.448,1297,4.448,1298,4.448,1299,4.448,1300,4.448,1301,4.448,1302,4.448,1303,4.448,1304,4.448,1305,4.448,1306,4.448,1307,4.448,1308,4.448,1309,4.448,1310,4.448,1311,4.448,1312,4.448,1313,4.448,1314,4.448,1315,4.448,1316,4.448,1317,4.448,1318,4.448,1319,4.448,1320,4.448,1321,4.448,1322,4.448,1323,4.448,1324,4.448,1325,4.448,1326,4.448,1327,4.448,1328,5.262,1329,4.448,1330,4.448,1331,4.448]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":103,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"overview.html":{}}}],["0.1",{"_index":499,"title":{},"body":{"classes/Bullet.html":{}}}],["0.10.3",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":605,"title":{},"body":{"components/GameComponent.html":{}}}],["0.5",{"_index":854,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["0.8",{"_index":937,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["0/1",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["00ec0c",{"_index":735,"title":{},"body":{"components/OptionComponent.html":{}}}],["0px",{"_index":611,"title":{},"body":{"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{}}}],["0x303030",{"_index":936,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["1",{"_index":74,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{},"overview.html":{}}}],["1.10.0",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["1/38",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":819,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["100",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["1000",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["100px",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{}}}],["10s",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["12/15",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["128",{"_index":805,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["15",{"_index":824,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["150px",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["15px",{"_index":1031,"title":{},"body":{"components/QuestionComponent.html":{}}}],["16",{"_index":825,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["16/20",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"overview.html":{}}}],["2,000",{"_index":927,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["20",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["200",{"_index":1082,"title":{},"body":{"components/QuizComponent.html":{}}}],["2000",{"_index":929,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["2048",{"_index":835,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["20pt",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{}}}],["210",{"_index":845,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["222222",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["25pt",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["25px",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["2px",{"_index":608,"title":{},"body":{"components/GameComponent.html":{}}}],["3",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["3.22.0",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["30pt",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["30px",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["32",{"_index":798,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["35",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["350px",{"_index":1034,"title":{},"body":{"components/QuestionComponent.html":{}}}],["36",{"_index":514,"title":{},"body":{"classes/Bullet.html":{}}}],["4,000",{"_index":919,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["4/7",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["400",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["4000",{"_index":921,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["40pt",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["40px",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["450",{"_index":1021,"title":{},"body":{"components/QuestionComponent.html":{}}}],["5",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["5,000",{"_index":541,"title":{},"body":{"classes/Bullet.html":{}}}],["5/9",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":129,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"coverage.html":{}}}],["500",{"_index":851,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["5000",{"_index":548,"title":{},"body":{"classes/Bullet.html":{}}}],["50pt",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["50px",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["55",{"_index":692,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["57",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{}}}],["6",{"_index":513,"title":{},"body":{"classes/Bullet.html":{},"overview.html":{}}}],["6.5.5",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["600",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60pt",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["60px",{"_index":689,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["66",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["70px",{"_index":688,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["72",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["800",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8080",{"_index":634,"title":{},"body":{"injectables/GameService.html":{}}}],["8081",{"_index":1170,"title":{},"body":{"injectables/UserService.html":{}}}],["8px",{"_index":1032,"title":{},"body":{"components/QuestionComponent.html":{}}}],["9",{"_index":512,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"overview.html":{}}}],["9.0.4",{"_index":1242,"title":{},"body":{"index.html":{}}}],["9.1.1",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["9.1.2",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["9.1.4",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{}}}],["95",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["achieved",{"_index":757,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["activate",{"_index":883,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["active",{"_index":989,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["actual",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["actual_component",{"_index":151,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["add",{"_index":847,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["additional",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["addtime",{"_index":557,"title":{},"body":{"components/GameComponent.html":{}}}],["addtime(delta",{"_index":564,"title":{},"body":{"components/GameComponent.html":{}}}],["again",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["against",{"_index":533,"title":{},"body":{"classes/Bullet.html":{}}}],["algorithm",{"_index":66,"title":{},"body":{"components/AnswerComponent.html":{}}}],["alien",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["alien.active",{"_index":910,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["alien.setactive",{"_index":980,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["alien.x",{"_index":976,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["alien.y",{"_index":978,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["aliens",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["align",{"_index":123,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["alive",{"_index":907,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["along",{"_index":505,"title":{},"body":{"classes/Bullet.html":{}}}],["always",{"_index":72,"title":{},"body":{"components/AnswerComponent.html":{}}}],["amount",{"_index":569,"title":{},"body":{"components/GameComponent.html":{}}}],["angles",{"_index":894,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["angular",{"_index":1218,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":85,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["animation",{"_index":812,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["another",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["answer",{"_index":17,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/QuizComponent.html":{}}}],["answer'},{'name",{"_index":135,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["answer.component.html",{"_index":21,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.component.sass",{"_index":19,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer/answer.component",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["answercomponent",{"_index":1,"title":{"components/AnswerComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["answercomponent.movies",{"_index":71,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answered",{"_index":566,"title":{},"body":{"components/GameComponent.html":{}}}],["answerquiz",{"_index":727,"title":{},"body":{"components/OptionComponent.html":{}}}],["answerquizcomponent",{"_index":716,"title":{},"body":{"components/OptionComponent.html":{}}}],["answers",{"_index":89,"title":{},"body":{"components/AnswerComponent.html":{},"classes/Quiz.html":{}}}],["anymore",{"_index":547,"title":{},"body":{"classes/Bullet.html":{}}}],["api/quizzes/quiz?level",{"_index":635,"title":{},"body":{"injectables/GameService.html":{}}}],["api/scores",{"_index":1171,"title":{},"body":{"injectables/UserService.html":{}}}],["api/scores/score",{"_index":1178,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["app.component",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["app.component.sass",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["appcomponent",{"_index":136,"title":{"components/AppComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcomponent.level",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["appcomponent.titles",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["appcomponent.titlesrc",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["application/json",{"_index":1176,"title":{},"body":{"injectables/UserService.html":{}}}],["applied",{"_index":724,"title":{},"body":{"components/OptionComponent.html":{}}}],["appmodule",{"_index":400,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":441,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":412,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arcade",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arial",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["array",{"_index":68,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["array.length",{"_index":99,"title":{},"body":{"components/AnswerComponent.html":{}}}],["array[currentindex",{"_index":111,"title":{},"body":{"components/AnswerComponent.html":{}}}],["array[randomindex",{"_index":112,"title":{},"body":{"components/AnswerComponent.html":{}}}],["artifacts",{"_index":1251,"title":{},"body":{"index.html":{}}}],["ase",{"_index":1185,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["assets/invaders/background2.png",{"_index":809,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/bullet.png",{"_index":791,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/enemy",{"_index":793,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/explode.png",{"_index":803,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/invader32x32x4.png",{"_index":796,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/player.png",{"_index":801,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/starfield.png",{"_index":807,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/title_different_fonts",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["assign",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["assuming",{"_index":521,"title":{},"body":{"classes/Bullet.html":{}}}],["attribute",{"_index":722,"title":{},"body":{"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["auto",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["available",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"modules.html":{}}}],["award",{"_index":984,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["awarded",{"_index":567,"title":{},"body":{"components/GameComponent.html":{}}}],["away",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["axis",{"_index":506,"title":{},"body":{"classes/Bullet.html":{}}}],["back",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["background",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["backgroundcolor",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backtostart",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["base",{"_index":497,"title":{},"body":{"classes/Bullet.html":{}}}],["based",{"_index":510,"title":{},"body":{"classes/Bullet.html":{}}}],["between",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["black",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{}}}],["bodystring",{"_index":1172,"title":{},"body":{"injectables/UserService.html":{}}}],["bold",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["bonus",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["bootstrap",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{}}}],["bored",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["born",{"_index":462,"title":{},"body":{"classes/Bullet.html":{}}}],["both",{"_index":988,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["bottom",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/QuestionComponent.html":{}}}],["boy",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":1263,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":450,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1250,"title":{},"body":{"index.html":{}}}],["bullet",{"_index":460,"title":{"classes/Bullet.html":{}},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["bullet's",{"_index":504,"title":{},"body":{"classes/Bullet.html":{}}}],["bullet.active",{"_index":969,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["bullet.png",{"_index":794,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["bullet.setactive",{"_index":971,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["bullets",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["bullettime",{"_index":772,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["button",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["buttons",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["calculate",{"_index":525,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["calls",{"_index":628,"title":{},"body":{"injectables/GameService.html":{},"components/QuizComponent.html":{},"injectables/UserService.html":{}}}],["case",{"_index":658,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["catch",{"_index":1083,"title":{},"body":{"components/QuizComponent.html":{}}}],["center",{"_index":122,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["challenging",{"_index":81,"title":{},"body":{"components/AnswerComponent.html":{}}}],["check",{"_index":1056,"title":{},"body":{"components/QuizComponent.html":{},"index.html":{}}}],["child",{"_index":1063,"title":{},"body":{"components/QuizComponent.html":{}}}],["childcomp",{"_index":554,"title":{},"body":{"components/GameComponent.html":{},"components/SpaceComponent.html":{}}}],["childcomponent",{"_index":726,"title":{},"body":{"components/OptionComponent.html":{},"components/SpaceComponent.html":{}}}],["choose",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["chooses",{"_index":1051,"title":{},"body":{"components/QuizComponent.html":{}}}],["chosen",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/QuizComponent.html":{}}}],["class",{"_index":92,"title":{"classes/AppPage.html":{},"classes/Bullet.html":{},"classes/Movie.html":{},"classes/Quiz.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":442,"title":{},"body":{"classes/AppPage.html":{},"classes/Bullet.html":{},"classes/Movie.html":{},"classes/Quiz.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"overview.html":{}}}],["cli",{"_index":1240,"title":{},"body":{"index.html":{}}}],["click",{"_index":952,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["clicked",{"_index":33,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/QuizComponent.html":{}}}],["clicks",{"_index":1052,"title":{},"body":{"components/QuizComponent.html":{}}}],["cluster_appmodule",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":41,"title":{},"body":{"components/AnswerComponent.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{}}}],["collection",{"_index":916,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["collections",{"_index":861,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["collision",{"_index":896,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["color",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["column",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["columns",{"_index":1014,"title":{},"body":{"components/QuestionComponent.html":{}}}],["com/:8080/api",{"_index":1071,"title":{},"body":{"components/QuizComponent.html":{}}}],["componenet",{"_index":758,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["component",{"_index":0,"title":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["component_template",{"_index":134,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"overview.html":{}}}],["condition",{"_index":956,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["config",{"_index":740,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":753,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["consecutively",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["const",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":34,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["constructor(description",{"_index":1038,"title":{},"body":{"classes/Quiz.html":{}}}],["constructor(gameservice",{"_index":1047,"title":{},"body":{"components/QuizComponent.html":{}}}],["constructor(http",{"_index":618,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["constructor(poster",{"_index":699,"title":{},"body":{"classes/Movie.html":{}}}],["constructor(private",{"_index":632,"title":{},"body":{"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{},"injectables/UserService.html":{}}}],["constructor(scene",{"_index":469,"title":{},"body":{"classes/Bullet.html":{}}}],["constructor(user",{"_index":1088,"title":{},"body":{"classes/Score.html":{}}}],["constructor(userservice",{"_index":646,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["contained",{"_index":50,"title":{},"body":{"components/AnswerComponent.html":{}}}],["containing",{"_index":1105,"title":{},"body":{"components/SpaceComponent.html":{}}}],["contains",{"_index":597,"title":{},"body":{"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["content",{"_index":121,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"injectables/UserService.html":{}}}],["context",{"_index":1214,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coordinate",{"_index":539,"title":{},"body":{"classes/Bullet.html":{}}}],["coordinates",{"_index":515,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["correct",{"_index":42,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/QuizComponent.html":{}}}],["correctanswer",{"_index":30,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"classes/Quiz.html":{}}}],["correctly",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["counter",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["coverage",{"_index":1179,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":810,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["createaliens",{"_index":877,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["createbullets",{"_index":1109,"title":{},"body":{"classes/SpaceScene.html":{}}}],["createbullets(imagename",{"_index":1141,"title":{},"body":{"classes/SpaceScene.html":{}}}],["creategameovermodal",{"_index":1110,"title":{},"body":{"classes/SpaceScene.html":{}}}],["creategameovermodal(sceneref",{"_index":930,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["createplayerlives",{"_index":1111,"title":{},"body":{"classes/SpaceScene.html":{}}}],["createplayerlives(sceneref",{"_index":1145,"title":{},"body":{"classes/SpaceScene.html":{}}}],["css",{"_index":725,"title":{},"body":{"components/OptionComponent.html":{}}}],["current",{"_index":110,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{}}}],["currentindex",{"_index":98,"title":{},"body":{"components/AnswerComponent.html":{}}}],["cursors",{"_index":773,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["deactivate",{"_index":970,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["declarations",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":582,"title":{},"body":{"components/GameComponent.html":{},"components/SpaceComponent.html":{}}}],["default",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultkey",{"_index":472,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["defend",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["delta",{"_index":485,"title":{},"body":{"classes/Bullet.html":{},"components/GameComponent.html":{}}}],["dependencies",{"_index":402,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":570,"title":{},"body":{"components/GameComponent.html":{}}}],["description",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{}}}],["description1",{"_index":1000,"title":{},"body":{"components/QuestionComponent.html":{}}}],["description2",{"_index":1001,"title":{},"body":{"components/QuestionComponent.html":{}}}],["dev",{"_index":1247,"title":{},"body":{"index.html":{}}}],["development",{"_index":1243,"title":{},"body":{"index.html":{}}}],["devkit/schematics",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["didplayerwin",{"_index":1154,"title":{},"body":{"classes/SpaceScene.html":{}}}],["died",{"_index":878,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["different",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["difficulty",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/QuizComponent.html":{}}}],["direction",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{}}}],["directive",{"_index":133,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["directives",{"_index":150,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["directory",{"_index":1254,"title":{},"body":{"index.html":{}}}],["display",{"_index":117,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["displayed",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["dist",{"_index":1253,"title":{},"body":{"index.html":{}}}],["dist/.../title_different_fonts.ts",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/org",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["div",{"_index":115,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["div.game",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["div.wrapper",{"_index":1084,"title":{},"body":{"components/QuizComponent.html":{}}}],["document.getelementsbytagname(\"select\")[0].value",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["documentation",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":545,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["don't",{"_index":892,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["dropdown",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["during",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":443,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":448,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":446,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["earth",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["easy",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["element",{"_index":106,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["element(by.css('app",{"_index":451,"title":{},"body":{"classes/AppPage.html":{}}}],["elements",{"_index":67,"title":{},"body":{"components/AnswerComponent.html":{}}}],["emits",{"_index":743,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["end",{"_index":665,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["ended",{"_index":563,"title":{},"body":{"components/GameComponent.html":{}}}],["ending",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["enemies",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["enemy",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{}}}],["enemybullet",{"_index":496,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["enemybullet.fire",{"_index":924,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["enemybullets",{"_index":779,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["environment",{"_index":1211,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["evaluates",{"_index":721,"title":{},"body":{"components/OptionComponent.html":{}}}],["evaluating",{"_index":590,"title":{},"body":{"components/GameComponent.html":{}}}],["eventemitter",{"_index":47,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["everything",{"_index":958,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explode",{"_index":822,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosion",{"_index":821,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosion.play",{"_index":979,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosion.setorigin",{"_index":974,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosion.x",{"_index":975,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosion.y",{"_index":977,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosions",{"_index":775,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["export",{"_index":91,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":487,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["false",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["ffffffbd",{"_index":693,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["find",{"_index":905,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["finished",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["fire",{"_index":467,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["fire(shooter",{"_index":480,"title":{},"body":{"classes/Bullet.html":{}}}],["firebutton",{"_index":774,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["fired",{"_index":500,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["fireenemybullet",{"_index":903,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["fireenemybullet(player",{"_index":1147,"title":{},"body":{"classes/SpaceScene.html":{}}}],["fireplayerbullet",{"_index":1112,"title":{},"body":{"classes/SpaceScene.html":{}}}],["fireplayerbullet(sceneref",{"_index":1149,"title":{},"body":{"classes/SpaceScene.html":{}}}],["firing",{"_index":873,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["firingtimer",{"_index":780,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["first",{"_index":882,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["flag",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"index.html":{}}}],["flex",{"_index":118,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["followed",{"_index":966,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["font",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["fonts",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["fontsize",{"_index":840,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["form",{"_index":690,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["formsmodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["forwards",{"_index":48,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["frameheight",{"_index":799,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["framerate",{"_index":818,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["frames",{"_index":815,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["framewidth",{"_index":797,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["framewidth:128",{"_index":804,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["frontend",{"_index":1237,"title":{},"body":{"index.html":{}}}],["frontend/assets/title_different_fonts.ts",{"_index":1186,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["funtion",{"_index":1101,"title":{},"body":{"components/SpaceComponent.html":{}}}],["further",{"_index":1257,"title":{},"body":{"index.html":{}}}],["game",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"miscellaneous/variables.html":{}}}],["game'},{'name",{"_index":139,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["game.component.html",{"_index":553,"title":{},"body":{"components/GameComponent.html":{}}}],["game.component.sass",{"_index":552,"title":{},"body":{"components/GameComponent.html":{}}}],["game/game.component",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["gamecomponent",{"_index":138,"title":{"components/GameComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamecomponent.correctanswer",{"_index":573,"title":{},"body":{"components/GameComponent.html":{}}}],["gamecomponent.level",{"_index":571,"title":{},"body":{"components/GameComponent.html":{}}}],["gamecomponent.timer",{"_index":581,"title":{},"body":{"components/GameComponent.html":{}}}],["gameover",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["gameovermodal",{"_index":787,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["gameovertext",{"_index":788,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["gameservice",{"_index":413,"title":{"injectables/GameService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GameService.html":{},"components/QuizComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamne",{"_index":1103,"title":{},"body":{"components/SpaceComponent.html":{}}}],["generated",{"_index":1239,"title":{},"body":{"index.html":{}}}],["geteventfromoption",{"_index":24,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/QuizComponent.html":{}}}],["geteventfromoption(valueemitted",{"_index":51,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/QuizComponent.html":{}}}],["getleaders",{"_index":644,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["getquiz",{"_index":617,"title":{},"body":{"injectables/GameService.html":{},"components/QuizComponent.html":{}}}],["getquiz(level",{"_index":622,"title":{},"body":{"injectables/GameService.html":{}}}],["getscores",{"_index":1162,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":297,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/QuizComponent.html":{}}}],["gettitletext",{"_index":444,"title":{},"body":{"classes/AppPage.html":{}}}],["given",{"_index":1057,"title":{},"body":{"components/QuizComponent.html":{}}}],["global",{"_index":926,"title":{},"body":{"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["go",{"_index":1259,"title":{},"body":{"index.html":{}}}],["grab",{"_index":881,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["grants",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":1264,"title":{},"body":{"modules.html":{}}}],["group",{"_index":691,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["grow",{"_index":1035,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["guess",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["guessed",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["guessing",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["h1",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["h2",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{}}}],["half",{"_index":1022,"title":{},"body":{"components/QuestionComponent.html":{}}}],["half).join",{"_index":1026,"title":{},"body":{"components/QuestionComponent.html":{}}}],["handle",{"_index":949,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["handleenemycollision",{"_index":1113,"title":{},"body":{"classes/SpaceScene.html":{}}}],["handleenemycollision(bullet",{"_index":968,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["handlegameover",{"_index":1114,"title":{},"body":{"classes/SpaceScene.html":{}}}],["handlegameover(didplayerwin",{"_index":1152,"title":{},"body":{"classes/SpaceScene.html":{}}}],["handleplayercollision",{"_index":987,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["handleplayercollision(player",{"_index":1155,"title":{},"body":{"classes/SpaceScene.html":{}}}],["handling",{"_index":897,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["hard",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["harder",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["hasn't",{"_index":918,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["headers",{"_index":1175,"title":{},"body":{"injectables/UserService.html":{}}}],["height",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/QuestionComponent.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":1258,"title":{},"body":{"index.html":{}}}],["helps",{"_index":589,"title":{},"body":{"components/GameComponent.html":{}}}],["hidde",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["hide",{"_index":965,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["hideoncomplete",{"_index":826,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["hit",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["hold",{"_index":856,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["holds",{"_index":723,"title":{},"body":{"components/OptionComponent.html":{}}}],["hover",{"_index":811,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["html",{"_index":132,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["http",{"_index":621,"title":{},"body":{"injectables/GameService.html":{},"components/QuizComponent.html":{},"injectables/UserService.html":{}}}],["http.open('head",{"_index":1079,"title":{},"body":{"components/QuizComponent.html":{}}}],["http.send",{"_index":1080,"title":{},"body":{"components/QuizComponent.html":{}}}],["http.status",{"_index":1081,"title":{},"body":{"components/QuizComponent.html":{}}}],["http://localhost:4200",{"_index":1249,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":619,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1169,"title":{},"body":{"injectables/UserService.html":{}}}],["httpoptions",{"_index":1174,"title":{},"body":{"injectables/UserService.html":{}}}],["https://app.swaggerhub.com/apis/ltoedt/ase/0.1",{"_index":631,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["https://fontmeme.com/permalink/200502/0110e662d342513460c0b27db029f92d.png",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/03cd29494dc96b7c325287a47fc194c4.png",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/0548c6ac6e9e71476a6def5f848ed46a.png",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/0c2cf8e9e6f360c42c12b15622c95657.png",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/13510182228aaf8bfd0080b9b07aa847.png",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/25ea63f82bc378310bb4f73097eaa398.png",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/2b6543751702e1acdae3fea32ecf8787.png",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/2b747f4817c73b774deac3ea79982d0f.png",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/2ca5220b6be7929fd523c3d91e9648c5.png",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/3641c1af46d1215a823278b366c28fc3.png",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/41bdb4608e93f26053a725424d295e15.png",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/436d381ae30b32efebc53b88718b5cbf.png",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/45fd7e599d32e4cfdb58e9377010b576.png",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/513cd0cecbbfaa4a7c0c95a07e08e5e1.png",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/58432f1e3afbf5a3e8ed93b96d8ccecd.png",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/5f9fe2982c84efdab49ac9750e669df2.png",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/60316d1e125cc7a68459989fadcec0a7.png",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/61d59ef0a950e1e4a4fc0eba3140c782.png",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/666a2d5f6d813bd7d5b9abd04e2d24e5.png",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/8b02e5dd705dab160fa15443bc796bf0.png",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/91420d4541314a1e31b2d2cff5033c8f.png",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/9642e6bba3e4283aa02026d7bde77b61.png",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/9bd35ed7a3803b4672e44235cbe7e1c5.png",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/9c2ca934a98ec57c6890f3ecd1b68510.png",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/9e3f0501fc68019142d7af77efe0699d.png",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/a4354e21bfbf3e0505ca35f4e0f910cd.png",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/ac898a46eb9e0781db38bd2cccd34d5c.png",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/af8abeabf1d9740c4dc466a29ab666bb.png",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/b497ddc60697cc683e4d2351793e1bf6.png",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/c103175208bd4b37a973b3299a053117.png",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/c1b4689d5a203532e8c91e70574aa239.png",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/c229afcc0f0c1ed5a22fe741494be355.png",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/c63d389110d441c7a781f436e808026b.png",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/cdda963cf2ce109583f3e12cb468fe76.png",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/d5a4b59d652482242996e0d4cece7d7d.png",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/d97dbd2d8aee97d92b567b7626370f51.png",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/db10fddba18a6f6974628101313dd99e.png",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/dd2f8a5dfdb277ac2cc24ed69b21585a.png",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/ddf911905cdf2a2d890244a5cdd2ef9b.png",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/e0a48641192dd5da576842bfed0ae5ba.png",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/e1b3cee591331d2549177a7f74410989.png",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/f2ab02732835c99192b13d83d731ffd5.png",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/f81b906854b10639d2b3ce7088adc18a.png",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/f942bcee948945d316eaa6aa7c5ac164.png",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/f9873a948acd1311370868fdd30c32d9.png",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/fad440f388348a1215fdf8bc57f250f3.png",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/fc80be6eb65d38b20b64936f18b95d2c.png",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/fe2db9f7d19ad03280cbc1e34ad09359.png",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://phaser.io/phaser3",{"_index":770,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["identifier",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["if(!this.imageexists(el.poster",{"_index":1076,"title":{},"body":{"components/QuizComponent.html":{}}}],["if(this.correctanswer",{"_index":729,"title":{},"body":{"components/OptionComponent.html":{}}}],["if(this.description.length",{"_index":1020,"title":{},"body":{"components/QuestionComponent.html":{}}}],["if(this.timer",{"_index":606,"title":{},"body":{"components/GameComponent.html":{}}}],["if(tmp.length",{"_index":1067,"title":{},"body":{"components/QuizComponent.html":{}}}],["ii",{"_index":1015,"title":{},"body":{"components/QuestionComponent.html":{}}}],["image",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"interfaces/Level.html":{},"components/QuizComponent.html":{}}}],["image_url",{"_index":1059,"title":{},"body":{"components/QuizComponent.html":{}}}],["imageexists",{"_index":1046,"title":{},"body":{"components/QuizComponent.html":{}}}],["imageexists(image_url",{"_index":1054,"title":{},"body":{"components/QuizComponent.html":{}}}],["imagename",{"_index":1143,"title":{},"body":{"classes/SpaceScene.html":{}}}],["img",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["increment",{"_index":981,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":663,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["information",{"_index":55,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":613,"title":{"injectables/GameService.html":{},"injectables/UserService.html":{}},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":614,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":83,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["inputs",{"_index":29,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["instance",{"_index":911,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["instructions",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["integer",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["interface",{"_index":250,"title":{"interfaces/Level.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":694,"title":{},"body":{"interfaces/Level.html":{}}}],["interval",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{}}}],["interval(10000",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["interval(50",{"_index":602,"title":{},"body":{"components/GameComponent.html":{}}}],["invader",{"_index":817,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["invaders",{"_index":857,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["invasion",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["invisible",{"_index":657,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["isenemybullet",{"_index":463,"title":{},"body":{"classes/Bullet.html":{}}}],["isgameover",{"_index":786,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["it's",{"_index":540,"title":{},"body":{"classes/Bullet.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["items",{"_index":124,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["iterate",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["json.stringify(scr",{"_index":1173,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":120,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["kaboom",{"_index":823,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["keeps",{"_index":584,"title":{},"body":{"components/GameComponent.html":{}}}],["key",{"_index":814,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["killed",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["label",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["larger",{"_index":1036,"title":{},"body":{"components/QuestionComponent.html":{}}}],["last",{"_index":901,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["lastalienbullettime",{"_index":783,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["lastfired",{"_index":922,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["lastplayerbullettime",{"_index":784,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["leader.scoreno",{"_index":685,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leader.user",{"_index":684,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["leaderboard'},{'name",{"_index":141,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["leaderboard.component.html",{"_index":640,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard.component.sass",{"_index":639,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard/leaderboard.component",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["leaderboardcomponent",{"_index":140,"title":{"components/LeaderboardComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["leaderboardempty",{"_index":641,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaders",{"_index":642,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["left",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/QuestionComponent.html":{}}}],["left:phaser.input.keyboard.keycodes.a",{"_index":869,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["legend",{"_index":131,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"overview.html":{}}}],["length",{"_index":591,"title":{},"body":{"components/GameComponent.html":{}}}],["less",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["level",{"_index":162,"title":{"interfaces/Level.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Level.html":{},"components/QuizComponent.html":{},"coverage.html":{}}}],["leveldifficulty",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["levels",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["link",{"_index":93,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["list",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["literal",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["lives",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["livingaliens",{"_index":782,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["loc",{"_index":671,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["loc.split",{"_index":674,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["long",{"_index":888,"title":{},"body":{"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["looking",{"_index":1016,"title":{},"body":{"components/QuestionComponent.html":{}}}],["lost",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["lvl.viewvalue",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":78,"title":{},"body":{"components/AnswerComponent.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["making",{"_index":627,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["many",{"_index":586,"title":{},"body":{"components/GameComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["margin",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{}}}],["match",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":153,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.atan",{"_index":532,"title":{},"body":{"classes/Bullet.html":{}}}],["math.cos",{"_index":535,"title":{},"body":{"classes/Bullet.html":{}}}],["math.floor(math.random",{"_index":107,"title":{},"body":{"components/AnswerComponent.html":{}}}],["math.floor(wordlist.length/2",{"_index":1023,"title":{},"body":{"components/QuestionComponent.html":{}}}],["math.sin",{"_index":534,"title":{},"body":{"classes/Bullet.html":{}}}],["max",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["maxsize",{"_index":866,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["mechanism",{"_index":874,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["medium",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["method",{"_index":75,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":629,"title":{},"body":{"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"injectables/UserService.html":{}}}],["milliseconds",{"_index":542,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["min",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":1266,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":931,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["model/movie",{"_index":86,"title":{},"body":{"components/AnswerComponent.html":{},"components/OptionComponent.html":{}}}],["model/quiz",{"_index":1064,"title":{},"body":{"components/QuizComponent.html":{}}}],["model/score",{"_index":666,"title":{},"body":{"components/LeaderboardComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":399,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":401,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":80,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"injectables/GameService.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"index.html":{}}}],["mouse",{"_index":951,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["movie",{"_index":43,"title":{"classes/Movie.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"coverage.html":{},"index.html":{}}}],["movie.code",{"_index":734,"title":{},"body":{"components/OptionComponent.html":{}}}],["movie.title",{"_index":733,"title":{},"body":{"components/OptionComponent.html":{}}}],["movies",{"_index":31,"title":{},"body":{"components/AnswerComponent.html":{},"classes/Quiz.html":{}}}],["name",{"_index":57,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["navigate",{"_index":1248,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":445,"title":{},"body":{"classes/AppPage.html":{}}}],["necessary",{"_index":752,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["need",{"_index":893,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["new",{"_index":94,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ng",{"_index":1245,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":25,"title":{},"body":{"components/AnswerComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["nosonar",{"_index":108,"title":{},"body":{"components/AnswerComponent.html":{}}}],["nowrap",{"_index":126,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["null",{"_index":900,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["number",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["object",{"_index":697,"title":{},"body":{"classes/Movie.html":{},"components/OptionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"miscellaneous/variables.html":{}}}],["obs",{"_index":555,"title":{},"body":{"components/GameComponent.html":{}}}],["observ",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["observable",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{}}}],["onchanges",{"_index":13,"title":{},"body":{"components/AnswerComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["one",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/OptionComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["onsubmit",{"_index":645,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["option",{"_index":127,"title":{},"body":{"components/AnswerComponent.html":{},"components/OptionComponent.html":{}}}],["option'},{'name",{"_index":142,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["option.component.html",{"_index":708,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.component.sass",{"_index":707,"title":{},"body":{"components/OptionComponent.html":{}}}],["option/option.component",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["optional",{"_index":58,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Movie.html":{},"components/PhaserComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["optioncomponent",{"_index":49,"title":{"components/OptionComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["order",{"_index":77,"title":{},"body":{"components/AnswerComponent.html":{}}}],["otherwise",{"_index":1070,"title":{},"body":{"components/QuizComponent.html":{}}}],["out",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":607,"title":{},"body":{"components/GameComponent.html":{}}}],["output",{"_index":84,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["outputs",{"_index":32,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["over",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["overview",{"_index":1265,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1217,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Movie.html":{},"components/PhaserComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["parent",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":90,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"classes/Movie.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["parts",{"_index":1010,"title":{},"body":{"components/QuestionComponent.html":{}}}],["passed",{"_index":1062,"title":{},"body":{"components/QuizComponent.html":{}}}],["path",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["paths",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["percent",{"_index":595,"title":{},"body":{"components/GameComponent.html":{}}}],["phaser",{"_index":491,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["phaser'},{'name",{"_index":144,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["phaser.auto",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phaser.component.html",{"_index":739,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.component.sass",{"_index":738,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.game",{"_index":754,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.game(this.config",{"_index":763,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.gameobjects.image",{"_index":488,"title":{},"body":{"classes/Bullet.html":{}}}],["phaser.gameobjects.image.call",{"_index":494,"title":{},"body":{"classes/Bullet.html":{}}}],["phaser.math.angle.between",{"_index":538,"title":{},"body":{"classes/Bullet.html":{}}}],["phaser.math.rnd.integerinrange",{"_index":915,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.scene",{"_index":771,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.types.core.gameconfig",{"_index":750,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser/phaser.component",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"components/SpaceComponent.html":{}}}],["phasercomponent",{"_index":143,"title":{"components/PhaserComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"overview.html":{}}}],["phasergame",{"_index":741,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["physics",{"_index":848,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":104,"title":{},"body":{"components/AnswerComponent.html":{}}}],["picture",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["pictures",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["pipe",{"_index":636,"title":{},"body":{"injectables/GameService.html":{}}}],["place",{"_index":973,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["play",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["player",{"_index":522,"title":{},"body":{"classes/Bullet.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{}}}],["player's",{"_index":841,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["player.active",{"_index":990,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["player.x",{"_index":991,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["player.y",{"_index":992,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["playerbullet",{"_index":885,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["playerbullet.fire",{"_index":895,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["playerlives",{"_index":785,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["pointer",{"_index":955,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["pointerdown",{"_index":954,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["points",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["popcorn",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":73,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["possible",{"_index":88,"title":{},"body":{"components/AnswerComponent.html":{}}}],["poster",{"_index":698,"title":{},"body":{"classes/Movie.html":{}}}],["postscore",{"_index":1163,"title":{},"body":{"injectables/UserService.html":{}}}],["postscore(scr",{"_index":1166,"title":{},"body":{"injectables/UserService.html":{}}}],["potential",{"_index":661,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{}}}],["preload",{"_index":789,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["preloaded",{"_index":493,"title":{},"body":{"classes/Bullet.html":{}}}],["processing",{"_index":879,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["prod",{"_index":1255,"title":{},"body":{"index.html":{}}}],["production",{"_index":1256,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1238,"title":{},"body":{"index.html":{}}}],["promise",{"_index":447,"title":{},"body":{"classes/AppPage.html":{}}}],["properly",{"_index":832,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["properties",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":449,"title":{},"body":{"classes/AppPage.html":{}}}],["provided",{"_index":45,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/QuestionComponent.html":{}}}],["providers",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["question",{"_index":997,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["question'},{'name",{"_index":146,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["question.component.html",{"_index":999,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.component.sass",{"_index":998,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question/question.component",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["questioncomponent",{"_index":145,"title":{"components/QuestionComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questions",{"_index":572,"title":{},"body":{"components/GameComponent.html":{}}}],["quiz",{"_index":79,"title":{"classes/Quiz.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"index.html":{}}}],["quiz'},{'name",{"_index":147,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["quiz.component.html",{"_index":1045,"title":{},"body":{"components/QuizComponent.html":{}}}],["quiz.component.sass",{"_index":1044,"title":{},"body":{"components/QuizComponent.html":{}}}],["quiz/quiz.component",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["quizcomponent",{"_index":46,"title":{"components/QuizComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizdescription",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["quizzes",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{}}}],["ran",{"_index":749,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["random",{"_index":913,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["randomalien",{"_index":917,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["randomalien.lastfired",{"_index":920,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["randomaliennumber",{"_index":914,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["randomindex",{"_index":101,"title":{},"body":{"components/AnswerComponent.html":{}}}],["reachable",{"_index":1058,"title":{},"body":{"components/QuizComponent.html":{}}}],["read",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["readme",{"_index":1260,"title":{},"body":{"index.html":{}}}],["ready",{"_index":944,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["receive",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["received",{"_index":70,"title":{},"body":{"components/AnswerComponent.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"classes/Quiz.html":{},"classes/Score.html":{}}}],["receives",{"_index":54,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{}}}],["red",{"_index":736,"title":{},"body":{"components/OptionComponent.html":{}}}],["regular",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":609,"title":{},"body":{"components/GameComponent.html":{}}}],["relaxing",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["remain",{"_index":102,"title":{},"body":{"components/AnswerComponent.html":{}}}],["remaining",{"_index":105,"title":{},"body":{"components/AnswerComponent.html":{}}}],["remove",{"_index":544,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{}}}],["removelife",{"_index":1115,"title":{},"body":{"classes/SpaceScene.html":{}}}],["repeat",{"_index":820,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["representatin",{"_index":696,"title":{},"body":{"classes/Movie.html":{}}}],["representation",{"_index":87,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"classes/Score.html":{}}}],["represented",{"_index":714,"title":{},"body":{"components/OptionComponent.html":{}}}],["represents",{"_index":594,"title":{},"body":{"components/GameComponent.html":{}}}],["require",{"_index":1215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"overview.html":{}}}],["response",{"_index":1066,"title":{},"body":{"components/QuizComponent.html":{}}}],["response).answers",{"_index":1075,"title":{},"body":{"components/QuizComponent.html":{}}}],["response).description.length",{"_index":1074,"title":{},"body":{"components/QuizComponent.html":{}}}],["responsible",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"interfaces/Level.html":{},"injectables/UserService.html":{}}}],["restartgame",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["result",{"_index":152,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":154,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":624,"title":{},"body":{"injectables/GameService.html":{}}}],["retry(3",{"_index":637,"title":{},"body":{"injectables/GameService.html":{}}}],["return",{"_index":113,"title":{},"body":{"components/AnswerComponent.html":{},"classes/AppPage.html":{},"injectables/GameService.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["right",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["right:phaser.input.keyboard.keycodes.d",{"_index":870,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["root",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/Level.html":{}}}],["root'},{'name",{"_index":137,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["rotation",{"_index":536,"title":{},"body":{"classes/Bullet.html":{}}}],["routermodule",{"_index":456,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":459,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":455,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1033,"title":{},"body":{"components/QuestionComponent.html":{}}}],["run",{"_index":1102,"title":{},"body":{"components/SpaceComponent.html":{},"index.html":{}}}],["running",{"_index":579,"title":{},"body":{"components/GameComponent.html":{}}}],["runs",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["rxjs",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":625,"title":{},"body":{"injectables/GameService.html":{}}}],["same",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["scaled",{"_index":831,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["scene",{"_index":474,"title":{},"body":{"classes/Bullet.html":{}}}],["sceneref",{"_index":902,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.add.graphics",{"_index":934,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.add.text",{"_index":946,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.input.on",{"_index":953,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.physics.add.collider",{"_index":898,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.sys.canvas.height",{"_index":941,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.sys.canvas.width",{"_index":940,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.time.now",{"_index":890,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["score",{"_index":243,"title":{"classes/Score.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["scoreno",{"_index":1087,"title":{},"body":{"classes/Score.html":{}}}],["scoreprefix",{"_index":777,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["scores",{"_index":651,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["scoretext",{"_index":778,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["scr",{"_index":1168,"title":{},"body":{"injectables/UserService.html":{}}}],["screen",{"_index":543,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["seconds",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["see",{"_index":630,"title":{},"body":{"injectables/GameService.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["select",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["selected",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["self",{"_index":130,"title":{},"body":{"components/AnswerComponent.html":{}}}],["sent",{"_index":1086,"title":{},"body":{"classes/Score.html":{}}}],["serve",{"_index":1246,"title":{},"body":{"index.html":{}}}],["server",{"_index":1244,"title":{},"body":{"index.html":{}}}],["service",{"_index":626,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["services/game.service",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"components/QuizComponent.html":{}}}],["services/user.service",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"components/LeaderboardComponent.html":{}}}],["set",{"_index":509,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["setdifferentmovietitle",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["setgameover",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["setgameover(score",{"_index":745,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["setgameover(valueemitted",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/SpaceComponent.html":{}}}],["settime",{"_index":558,"title":{},"body":{"components/GameComponent.html":{}}}],["setup",{"_index":769,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["setvisible",{"_index":887,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["shadow",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["shape",{"_index":938,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["ship",{"_index":852,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["shoot",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["shooter",{"_index":483,"title":{},"body":{"classes/Bullet.html":{}}}],["shooter's",{"_index":516,"title":{},"body":{"classes/Bullet.html":{}}}],["shooter.x",{"_index":518,"title":{},"body":{"classes/Bullet.html":{}}}],["shooter.y",{"_index":519,"title":{},"body":{"classes/Bullet.html":{}}}],["shooting",{"_index":523,"title":{},"body":{"classes/Bullet.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["shouldn't",{"_index":942,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["shuffle",{"_index":27,"title":{},"body":{"components/AnswerComponent.html":{}}}],["shuffle(array",{"_index":64,"title":{},"body":{"components/AnswerComponent.html":{}}}],["shufflemovies",{"_index":28,"title":{},"body":{"components/AnswerComponent.html":{}}}],["shuffles",{"_index":76,"title":{},"body":{"components/AnswerComponent.html":{}}}],["simulate",{"_index":578,"title":{},"body":{"components/GameComponent.html":{}}}],["size",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["solid",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["space",{"_index":149,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["space.component.html",{"_index":1095,"title":{},"body":{"components/SpaceComponent.html":{}}}],["space.component.sass",{"_index":1094,"title":{},"body":{"components/SpaceComponent.html":{}}}],["space/space.component",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{}}}],["spacecomponent",{"_index":148,"title":{"components/SpaceComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"overview.html":{}}}],["spacescene",{"_index":761,"title":{"classes/SpaceScene.html":{}},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["span')).gettext",{"_index":452,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":464,"title":{},"body":{"classes/Bullet.html":{}}}],["split",{"_index":1013,"title":{},"body":{"components/QuestionComponent.html":{}}}],["splits",{"_index":1008,"title":{},"body":{"components/QuestionComponent.html":{}}}],["sprite",{"_index":829,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["src/.../config.ts",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../title_different_fonts.ts",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/answer/answer.component.ts",{"_index":10,"title":{},"body":{"components/AnswerComponent.html":{},"coverage.html":{}}}],["src/app/answer/answer.component.ts:13",{"_index":44,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:15",{"_index":40,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:17",{"_index":36,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:21",{"_index":63,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:25",{"_index":62,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:30",{"_index":69,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:35",{"_index":65,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:55",{"_index":53,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/app",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"coverage.html":{}}}],["src/app/app.component.ts:104",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:90",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:98",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/game/game.component.ts",{"_index":551,"title":{},"body":{"components/GameComponent.html":{},"coverage.html":{}}}],["src/app/game/game.component.ts:13",{"_index":592,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:15",{"_index":585,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:17",{"_index":593,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:19",{"_index":588,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:21",{"_index":561,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:23",{"_index":562,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:25",{"_index":560,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:29",{"_index":574,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:38",{"_index":576,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:47",{"_index":565,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:56",{"_index":568,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:68",{"_index":575,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:73",{"_index":580,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts",{"_index":638,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:13",{"_index":659,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:15",{"_index":656,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:17",{"_index":649,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:19",{"_index":648,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:21",{"_index":660,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:23",{"_index":647,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:27",{"_index":653,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:34",{"_index":650,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:48",{"_index":654,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/model/movie.ts",{"_index":695,"title":{},"body":{"classes/Movie.html":{},"coverage.html":{}}}],["src/app/model/movie.ts:3",{"_index":701,"title":{},"body":{"classes/Movie.html":{}}}],["src/app/model/movie.ts:4",{"_index":702,"title":{},"body":{"classes/Movie.html":{}}}],["src/app/model/movie.ts:5",{"_index":700,"title":{},"body":{"classes/Movie.html":{}}}],["src/app/model/quiz.ts",{"_index":1037,"title":{},"body":{"classes/Quiz.html":{},"coverage.html":{}}}],["src/app/model/quiz.ts:5",{"_index":1041,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/model/quiz.ts:6",{"_index":1040,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/model/quiz.ts:7",{"_index":1039,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/model/score.ts",{"_index":1085,"title":{},"body":{"classes/Score.html":{},"coverage.html":{}}}],["src/app/model/score.ts:3",{"_index":1090,"title":{},"body":{"classes/Score.html":{}}}],["src/app/model/score.ts:4",{"_index":1089,"title":{},"body":{"classes/Score.html":{}}}],["src/app/option/option.component.ts",{"_index":706,"title":{},"body":{"components/OptionComponent.html":{},"coverage.html":{}}}],["src/app/option/option.component.ts:13",{"_index":713,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:15",{"_index":712,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:17",{"_index":715,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:19",{"_index":711,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:23",{"_index":718,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:26",{"_index":717,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:31",{"_index":719,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/phaser/bullet.ts",{"_index":461,"title":{},"body":{"classes/Bullet.html":{},"coverage.html":{}}}],["src/app/phaser/bullet.ts:2",{"_index":477,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:3",{"_index":478,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:4",{"_index":475,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:40",{"_index":482,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:5",{"_index":476,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:6",{"_index":479,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:7",{"_index":473,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:74",{"_index":486,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/config.ts",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/phaser/phaser.component.ts",{"_index":737,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["src/app/phaser/phaser.component.ts:15",{"_index":755,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:154",{"_index":1140,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:17",{"_index":751,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:173",{"_index":1142,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:181",{"_index":1150,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:19",{"_index":756,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:207",{"_index":1148,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:21",{"_index":742,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:245",{"_index":1144,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:28",{"_index":744,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:305",{"_index":1151,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:34",{"_index":746,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:340",{"_index":1156,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:366",{"_index":1158,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:374",{"_index":1146,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:393",{"_index":1153,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:40",{"_index":747,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:426",{"_index":1159,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:432",{"_index":1160,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:47",{"_index":1132,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:48",{"_index":1116,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:49",{"_index":1117,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:50",{"_index":1118,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:51",{"_index":1120,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:52",{"_index":1123,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:53",{"_index":1122,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:54",{"_index":1137,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:55",{"_index":1134,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:56",{"_index":1135,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:57",{"_index":1136,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:58",{"_index":1130,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:59",{"_index":1121,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:60",{"_index":1124,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:61",{"_index":1138,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:62",{"_index":1131,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:63",{"_index":1128,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:64",{"_index":1129,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:65",{"_index":1133,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:66",{"_index":1127,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:67",{"_index":1125,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:68",{"_index":1126,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:69",{"_index":1119,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:71",{"_index":1157,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:81",{"_index":1139,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/question/question.component.ts",{"_index":996,"title":{},"body":{"components/QuestionComponent.html":{},"coverage.html":{}}}],["src/app/question/question.component.ts:12",{"_index":1004,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/question/question.component.ts:14",{"_index":1011,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/question/question.component.ts:16",{"_index":1003,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/question/question.component.ts:20",{"_index":1006,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/question/question.component.ts:23",{"_index":1005,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/question/question.component.ts:28",{"_index":1007,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/quiz/quiz.component.ts",{"_index":1043,"title":{},"body":{"components/QuizComponent.html":{},"coverage.html":{}}}],["src/app/quiz/quiz.component.ts:13",{"_index":1061,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:15",{"_index":1049,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:17",{"_index":1048,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:21",{"_index":1060,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:26",{"_index":1053,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:55",{"_index":1050,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:60",{"_index":1055,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/services/game.service.ts",{"_index":615,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/app/services/game.service.ts:12",{"_index":623,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:8",{"_index":620,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/user.service.ts",{"_index":1161,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:12",{"_index":1165,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:16",{"_index":1167,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:8",{"_index":1164,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/space/space.component.ts",{"_index":1093,"title":{},"body":{"components/SpaceComponent.html":{},"coverage.html":{}}}],["src/app/space/space.component.ts:12",{"_index":1097,"title":{},"body":{"components/SpaceComponent.html":{}}}],["src/app/space/space.component.ts:14",{"_index":1096,"title":{},"body":{"components/SpaceComponent.html":{}}}],["src/app/space/space.component.ts:18",{"_index":1098,"title":{},"body":{"components/SpaceComponent.html":{}}}],["src/app/space/space.component.ts:22",{"_index":1099,"title":{},"body":{"components/SpaceComponent.html":{}}}],["src/app/space/space.component.ts:27",{"_index":1100,"title":{},"body":{"components/SpaceComponent.html":{}}}],["src/assets/title_different_fonts.ts",{"_index":1209,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1210,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1212,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1213,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["starfield",{"_index":776,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["starfield's",{"_index":827,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["start",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["started",{"_index":1236,"title":{"index.html":{}},"body":{}}],["startedgame",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["startgame",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["starting",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/QuizComponent.html":{}}}],["state",{"_index":967,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["statements",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["statetext",{"_index":781,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sticky",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["still",{"_index":906,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["stopgame",{"_index":559,"title":{},"body":{"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["stops",{"_index":748,"title":{},"body":{"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["store",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["stored",{"_index":1252,"title":{},"body":{"index.html":{}}}],["stressful",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"index.html":{}}}],["stressfulmoviequiz",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":39,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"injectables/GameService.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["style",{"_index":709,"title":{},"body":{"components/OptionComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["submit",{"_index":683,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["submitleader",{"_index":687,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["submits",{"_index":655,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["submitted",{"_index":643,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["subtracted",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["super(scene",{"_index":489,"title":{},"body":{"classes/Bullet.html":{}}}],["support",{"_index":1261,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":830,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["svg",{"_index":1262,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":109,"title":{},"body":{"components/AnswerComponent.html":{}}}],["switch",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["switching",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["table",{"_index":686,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["taken",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["target",{"_index":481,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["target.x",{"_index":527,"title":{},"body":{"classes/Bullet.html":{}}}],["target.y",{"_index":530,"title":{},"body":{"classes/Bullet.html":{}}}],["tell",{"_index":490,"title":{},"body":{"classes/Bullet.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["temporaryvalue",{"_index":100,"title":{},"body":{"components/AnswerComponent.html":{}}}],["text",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["things",{"_index":520,"title":{},"body":{"classes/Bullet.html":{}}}],["this.add.group",{"_index":843,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.add.text",{"_index":838,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.add.tilesprite",{"_index":834,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.aliens",{"_index":858,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.aliens.clear",{"_index":962,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.aliens.countactive",{"_index":983,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.aliens.getchildren().filter",{"_index":909,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.anims.create",{"_index":813,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.anims.generateframenumbers",{"_index":816,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.answers",{"_index":1042,"title":{},"body":{"classes/Quiz.html":{}}}],["this.born",{"_index":501,"title":{},"body":{"classes/Bullet.html":{}}}],["this.bullets",{"_index":862,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.bullets.clear",{"_index":959,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.bullets.get().setactive",{"_index":886,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.childcomp.stopgame",{"_index":1107,"title":{},"body":{"components/SpaceComponent.html":{}}}],["this.clicked.emit(false",{"_index":732,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.clicked.emit(true",{"_index":731,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.clicked.emit(valueemitted",{"_index":114,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuizComponent.html":{}}}],["this.code",{"_index":705,"title":{},"body":{"classes/Movie.html":{}}}],["this.config",{"_index":759,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.config.scene",{"_index":760,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.correctanswer",{"_index":599,"title":{},"body":{"components/GameComponent.html":{},"classes/Quiz.html":{}}}],["this.counter",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.counter+1)%this.titles.length",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.createaliens",{"_index":860,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.createbullets",{"_index":863,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.creategameovermodal",{"_index":876,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.createplayerlives",{"_index":846,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.cursors",{"_index":867,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.description",{"_index":1030,"title":{},"body":{"components/QuestionComponent.html":{},"classes/Quiz.html":{}}}],["this.description.split",{"_index":1019,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.description1",{"_index":1024,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.description2",{"_index":1027,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.direction",{"_index":503,"title":{},"body":{"classes/Bullet.html":{}}}],["this.enemybullets",{"_index":864,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.enemybullets.clear",{"_index":960,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.enemybullets.get().setactive",{"_index":904,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.explosions",{"_index":865,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.explosions.clear",{"_index":961,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.explosions.get().setactive",{"_index":972,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.fireenemybullet",{"_index":995,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.fireplayerbullet",{"_index":875,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameover",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.gameover.emit(score",{"_index":765,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameover.emit(valueemitted",{"_index":1106,"title":{},"body":{"components/SpaceComponent.html":{}}}],["this.gameovermodal",{"_index":933,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovermodal.fillrect",{"_index":939,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovermodal.fillstyle",{"_index":935,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovermodal.visible",{"_index":943,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovertext",{"_index":945,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovertext.setorigin",{"_index":947,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovertext.visible",{"_index":948,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameservice.getquiz(this.level).subscribe",{"_index":1073,"title":{},"body":{"components/QuizComponent.html":{}}}],["this.gameservice.url",{"_index":1072,"title":{},"body":{"components/QuizComponent.html":{}}}],["this.getleaders",{"_index":670,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.getquiz",{"_index":1065,"title":{},"body":{"components/QuizComponent.html":{}}}],["this.handleenemycollision",{"_index":899,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.handlegameover",{"_index":986,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.handleplayercollision",{"_index":925,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.http.get(this.url",{"_index":633,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["this.http.post(this.url",{"_index":1177,"title":{},"body":{"injectables/UserService.html":{}}}],["this.input.keyboard.addkeys",{"_index":868,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.isenemybullet",{"_index":495,"title":{},"body":{"classes/Bullet.html":{}}}],["this.isgameover",{"_index":957,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.lastalienbullettime",{"_index":928,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.lastplayerbullettime",{"_index":891,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.leaderboardempty",{"_index":668,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.leaders",{"_index":678,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.leaders.length",{"_index":679,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.level",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.livingaliens",{"_index":908,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.livingaliens.length",{"_index":912,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.image('background",{"_index":808,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.image('bullet",{"_index":790,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.image('enemybullet",{"_index":792,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.image('ship",{"_index":800,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.image('starfield",{"_index":806,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.spritesheet('invader",{"_index":795,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.spritesheet('kaboom",{"_index":802,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.movie.code",{"_index":730,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.obs",{"_index":601,"title":{},"body":{"components/GameComponent.html":{}}}],["this.obs.subscribe",{"_index":603,"title":{},"body":{"components/GameComponent.html":{}}}],["this.observ",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.observ.subscribe",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.phasergame",{"_index":762,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.phasergame.destroy(true",{"_index":766,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.phasergame.scene.scenes[0].score",{"_index":767,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.physics.add.group",{"_index":859,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.physics.add.sprite",{"_index":850,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.player",{"_index":849,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.player.active",{"_index":880,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.player.setactive",{"_index":964,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.player.setcollideworldbounds",{"_index":855,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.player.setorigin",{"_index":853,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.playerlives",{"_index":842,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.playerlives.clear",{"_index":963,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.playerlives.countactive",{"_index":994,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.poster",{"_index":703,"title":{},"body":{"classes/Movie.html":{}}}],["this.quiz",{"_index":1077,"title":{},"body":{"components/QuizComponent.html":{}}}],["this.removelife",{"_index":993,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.rotation",{"_index":537,"title":{},"body":{"classes/Bullet.html":{}}}],["this.score",{"_index":598,"title":{},"body":{"components/GameComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.score.scoreno",{"_index":680,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.scoreno",{"_index":1092,"title":{},"body":{"classes/Score.html":{}}}],["this.scoreprefix",{"_index":839,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.scoretext",{"_index":837,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.scoretext.settext",{"_index":982,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.setactive",{"_index":549,"title":{},"body":{"classes/Bullet.html":{}}}],["this.setdifferentmovietitle",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.setgameover(this.score",{"_index":768,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.setposition",{"_index":517,"title":{},"body":{"classes/Bullet.html":{}}}],["this.setsize",{"_index":511,"title":{},"body":{"classes/Bullet.html":{}}}],["this.settime",{"_index":604,"title":{},"body":{"components/GameComponent.html":{}}}],["this.setvisible",{"_index":550,"title":{},"body":{"classes/Bullet.html":{}}}],["this.shuffle(this.movies",{"_index":96,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.shufflemovies",{"_index":95,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.speed",{"_index":498,"title":{},"body":{"classes/Bullet.html":{}}}],["this.starfield",{"_index":833,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.starfield.setscale",{"_index":836,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.startedgame",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.style",{"_index":728,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.submitted",{"_index":669,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.sys.canvas.width",{"_index":844,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.timer",{"_index":600,"title":{},"body":{"components/GameComponent.html":{}}}],["this.title",{"_index":704,"title":{},"body":{"classes/Movie.html":{}}}],["this.titles",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.titles[this.counter",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.titlesrc",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.totalscore",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["this.updatedescriptions",{"_index":1017,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.user",{"_index":1091,"title":{},"body":{"classes/Score.html":{}}}],["this.userservice.getscores().subscribe",{"_index":677,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.userservice.postscore(this.score).subscribe",{"_index":681,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.userservice.url",{"_index":676,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.welcome",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.x",{"_index":528,"title":{},"body":{"classes/Bullet.html":{}}}],["this.xspeed",{"_index":507,"title":{},"body":{"classes/Bullet.html":{}}}],["this.y",{"_index":531,"title":{},"body":{"classes/Bullet.html":{}}}],["this.yspeed",{"_index":508,"title":{},"body":{"classes/Bullet.html":{}}}],["those",{"_index":524,"title":{},"body":{"classes/Bullet.html":{}}}],["through",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["thus",{"_index":1012,"title":{},"body":{"components/QuestionComponent.html":{}}}],["tile",{"_index":828,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["time",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["timebar",{"_index":577,"title":{},"body":{"components/GameComponent.html":{}}}],["timer",{"_index":556,"title":{},"body":{"components/GameComponent.html":{}}}],["timerbar",{"_index":610,"title":{},"body":{"components/GameComponent.html":{}}}],["timerbar::before",{"_index":612,"title":{},"body":{"components/GameComponent.html":{}}}],["times",{"_index":587,"title":{},"body":{"components/GameComponent.html":{}}}],["title",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{}}}],["titles",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["titlesrc",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["tmp",{"_index":673,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["tmp.slice(0,2).join",{"_index":675,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["top",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["total",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["totalscore",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["track",{"_index":546,"title":{},"body":{"classes/Bullet.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["trailing",{"_index":1069,"title":{},"body":{"components/QuizComponent.html":{}}}],["transmitted",{"_index":662,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["traveling",{"_index":502,"title":{},"body":{"classes/Bullet.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["triggered",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["triggers",{"_index":720,"title":{},"body":{"components/OptionComponent.html":{}}}],["true",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/QuizComponent.html":{}}}],["trying",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["tslib",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1009,"title":{},"body":{"components/QuestionComponent.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":1108,"title":{},"body":{"components/SpaceComponent.html":{}}}],["up",{"_index":872,"title":{},"body":{"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["update",{"_index":468,"title":{},"body":{"classes/Bullet.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["update(time",{"_index":484,"title":{},"body":{"classes/Bullet.html":{},"classes/SpaceScene.html":{}}}],["updatedescriptions",{"_index":1002,"title":{},"body":{"components/QuestionComponent.html":{}}}],["url",{"_index":616,"title":{},"body":{"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{},"injectables/UserService.html":{}}}],["url.slice(0",{"_index":1068,"title":{},"body":{"components/QuizComponent.html":{}}}],["use",{"_index":492,"title":{},"body":{"classes/Bullet.html":{},"index.html":{}}}],["used",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["user",{"_index":652,"title":{},"body":{"components/LeaderboardComponent.html":{},"classes/Score.html":{},"injectables/UserService.html":{}}}],["username",{"_index":682,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["users",{"_index":667,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["userservice",{"_index":414,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/LeaderboardComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uzh",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":889,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["validate",{"_index":710,"title":{},"body":{"components/OptionComponent.html":{}}}],["value",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["valueemitted",{"_index":59,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["var",{"_index":97,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["variable",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"coverage.html":{}}}],["variables",{"_index":1267,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1241,"title":{},"body":{"index.html":{}}}],["very",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"index.html":{}}}],["view",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["viewchild",{"_index":596,"title":{},"body":{"components/GameComponent.html":{},"components/SpaceComponent.html":{}}}],["viewchild(phasercomponent",{"_index":1104,"title":{},"body":{"components/SpaceComponent.html":{}}}],["viewchild(spacecomponent",{"_index":583,"title":{},"body":{"components/GameComponent.html":{}}}],["viewvalue",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["visible",{"_index":884,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["void",{"_index":61,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["wanting",{"_index":950,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["weight",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["welcome",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["whether",{"_index":664,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["white",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{}}}],["width",{"_index":128,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{},"miscellaneous/variables.html":{}}}],["window",{"_index":932,"title":{},"body":{"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["window.location.href",{"_index":672,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["window[\"angularlink",{"_index":764,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["winning",{"_index":985,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["wire",{"_index":871,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["wordlist",{"_index":1018,"title":{},"body":{"components/QuestionComponent.html":{}}}],["wordlist.length).join",{"_index":1029,"title":{},"body":{"components/QuestionComponent.html":{}}}],["wordlist.slice(0",{"_index":1025,"title":{},"body":{"components/QuestionComponent.html":{}}}],["wordlist.slice(half",{"_index":1028,"title":{},"body":{"components/QuestionComponent.html":{}}}],["wrap",{"_index":119,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["wrapper",{"_index":116,"title":{},"body":{"components/AnswerComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["wrapper2",{"_index":125,"title":{},"body":{"components/AnswerComponent.html":{}}}],["wrong",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{}}}],["x",{"_index":470,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["xdifference",{"_index":526,"title":{},"body":{"classes/Bullet.html":{}}}],["xmlhttprequest",{"_index":1078,"title":{},"body":{"components/QuizComponent.html":{}}}],["xspeed",{"_index":465,"title":{},"body":{"classes/Bullet.html":{}}}],["y",{"_index":471,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["ydifference",{"_index":529,"title":{},"body":{"classes/Bullet.html":{}}}],["you'll",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["you\\'ll",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["yspeed",{"_index":466,"title":{},"body":{"classes/Bullet.html":{}}}],["ze",{"_index":923,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["zone.js",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AnswerComponent.html":{"url":"components/AnswerComponent.html","title":"component - AnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/answer/answer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-answer\n            \n\n            \n                styleUrls\n                ./answer.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventFromOption\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                shuffle\n                            \n                            \n                                shuffleMovies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                correctAnswer\n                            \n                            \n                                movies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/answer/answer.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        correctAnswer\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:15\n                            \n                        \n                \n                    \n                        The code of the correct movie \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        movies\n                    \n                \n                \n                    \n                        Type :         Movie[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:13\n                            \n                        \n                \n                    \n                        Movies provided by the QuizComponent \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:17\n                            \n                        \n                \n                    \n                        Forwards to the QuizComponent if the clicked OptionComponent contained the correct answer or not\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventFromOption\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventFromOption(valueEmitted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/answer/answer.component.ts:55\n                \n            \n\n\n            \n                \n                    Receives the information if the clicked OptionComponent was the correct answer or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/answer/answer.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/answer/answer.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffle\n                        \n                        \n                    \n                \n            \n            \n                \nshuffle(array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/answer/answer.component.ts:35\n                \n            \n\n\n            \n                \n                    Algorithm to shuffle the elements of an array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffleMovies\n                        \n                        \n                    \n                \n            \n            \n                \nshuffleMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/answer/answer.component.ts:30\n                \n            \n\n\n            \n                \n                    In the received movie array (AnswerComponent.movies), the correct movie is always at position 1. This method shuffles the array in order to make the quiz more challenging.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport {Movie} from '../model/movie';\n\n@Component({\n  selector: 'app-answer',\n  templateUrl: './answer.component.html',\n  styleUrls: ['./answer.component.sass']\n})\n/**Representation of the possible Answers to the Quiz Part */\nexport class AnswerComponent implements OnInit, OnChanges {\n\n  /**Movies provided by the QuizComponent */\n  @Input() movies: Movie[];\n  /**The code of the correct movie */\n  @Input() correctAnswer: string;\n  /**Forwards to the {@link QuizComponent} if the clicked OptionComponent contained the correct answer or not*/\n  @Output() clicked: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    this.shuffleMovies();\n  }\n\n  ngOnChanges(){\n    this.shuffleMovies();\n  }\n\n  /**In the received movie array ({@link AnswerComponent.movies}), the correct movie is always at position 1. This method shuffles the array in order to make the quiz more challenging.*/\n  shuffleMovies(){\n    this.shuffle(this.movies);\n  }\n\n  /**Algorithm to shuffle the elements of an array.*/\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex); // nosonar\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n\n  /**Receives the information if the clicked OptionComponent was the correct answer or not.*/\n  getEventFromOption(valueEmitted: boolean){\n    this.clicked.emit(valueEmitted);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./answer.component.sass\n                \n                div\n    .wrapper\n        display: flex\n        flex-wrap: wrap\n        justify-content: center\n        align-items: center\n    .wrapper2\n        display: flex\n        flex-wrap: nowrap\n        justify-content: center\n        align-items: center\n    .option\n        width: 50%\n        align-self: center\n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                counter\n                            \n                            \n                                gameover\n                            \n                            \n                                level\n                            \n                            \n                                levels\n                            \n                            \n                                observ\n                            \n                            \n                                startedGame\n                            \n                            \n                                title\n                            \n                            \n                                titles\n                            \n                            \n                                titlesrc\n                            \n                            \n                                totalScore\n                            \n                            \n                                welcome\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToStart\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                restartGame\n                            \n                            \n                                selected\n                            \n                            \n                                setDifferentMovieTitle\n                            \n                            \n                                setGameOver\n                            \n                            \n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:50\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backToStart\n                        \n                        \n                    \n                \n            \n            \n                \nbackToStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:98\n                \n            \n\n\n            \n                \n                    Switching from the ending view to the starting view.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restartGame\n                        \n                        \n                    \n                \n            \n            \n                \nrestartGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:90\n                \n            \n\n\n            \n                \n                    Switching from the ending view to the game view.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:104\n                \n            \n\n\n            \n                \n                    Assign the selected level of difficulty to AppComponent.level \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDifferentMovieTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetDifferentMovieTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:65\n                \n            \n\n\n            \n                \n                    Method responsible for switching the title pictures with different movie fonts.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOver(valueEmitted: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:81\n                \n            \n\n\n            \n                \n                    Switching from the game view to the ending view. Triggered when the game is over.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startGame\n                        \n                        \n                    \n                \n            \n            \n                \nstartGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:73\n                \n            \n\n\n            \n                \n                    Switching from the starting view to the game view.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                        Counter to iterate through AppComponent.titles\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameover\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        Flag to display or hidde ending view \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:43\n                            \n                        \n\n                \n                    \n                        Level of difficulty. Default = 1 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            levels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Level[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {value: 1, viewValue: 'Easy'},\n    {value: 2, viewValue: 'Medium'},\n    {value: 3, viewValue: 'Hard'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:46\n                            \n                        \n\n                \n                    \n                        Available Level of Difficulty in the dropdown list when starting the game \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observ\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                        Observable responsible to switch title image path every 10s\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startedGame\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n                \n                    \n                        Flag to display or hidde game view \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'The Very Stressful Movie Quiz'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n                \n                    \n                        Array of the different title picture paths used for AppComponent.titlesrc\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titlesrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n                \n                    \n                        Path to the title picture \"The Very Stressful Movie Quiz\" in different movie fonts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n                \n                    \n                        Variable to store total score after game has finished \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            welcome\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                        Flag to display or hidde starting view \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { titles } from '../assets/title_different_fonts';\nimport { interval } from 'rxjs';\n\n/**\n * Interface for the Dropdown list to choose the Level of Difficulty\n */\nexport interface Level {\n  /**Actual value*/\n  value: number;\n  /**Value displayed in the dropdown list*/\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\n\n/** \n *Top Level Component\n */\nexport class AppComponent implements OnInit{\n  title = 'The Very Stressful Movie Quiz';\n  /**Flag to display or hidde starting view */\n  welcome = true;\n  /**Flag to display or hidde game view */\n  startedGame = false;\n  /**Flag to display or hidde ending view */\n  gameover = false;\n  /**Variable to store total score after game has finished */\n  totalScore = 0;\n  /**Path to the title picture \"The Very Stressful Movie Quiz\" in different movie fonts */\n  titlesrc: string;\n  /**Array of the different title picture paths used for {@link AppComponent.titlesrc}*/\n  titles: string[];\n  /**Counter to iterate through {@link AppComponent.titles}*/\n  counter = 0;\n  /** Observable responsible to switch title image path every 10s*/\n  observ;\n  /**Level of difficulty. Default = 1 */\n  level = 1;\n\n  /**Available Level of Difficulty in the dropdown list when starting the game */\n  levels: Level[] = [\n    {value: 1, viewValue: 'Easy'},\n    {value: 2, viewValue: 'Medium'},\n    {value: 3, viewValue: 'Hard'}\n  ]\n\n  constructor(){\n  }\n\n  ngOnInit(){\n    this.titles = titles;\n    this.setDifferentMovieTitle();\n    this.observ = interval(10000);\n    this.observ.subscribe(() => this.setDifferentMovieTitle());\n  }\n\n  /**\n   * Method responsible for switching the title pictures with different movie fonts.\n   */\n  setDifferentMovieTitle(){\n    this.titlesrc = this.titles[this.counter];\n    this.counter = (this.counter+1)%this.titles.length;\n  }\n\n  /**\n   * Switching from the starting view to the game view.\n   */\n  startGame(){\n    this.startedGame = true\n    this.welcome = false\n  }\n\n /**\n   * Switching from the game view to the ending view. Triggered when the game is over.\n   */\n  setGameOver(valueEmitted: integer){\n    this.gameover = true;\n    this.startedGame = false;\n    this.totalScore = valueEmitted;\n  }\n\n  /**\n   * Switching from the ending view to the game view.\n   */\n  restartGame(){\n    this.startedGame = true;\n    this.gameover = false;\n  }\n\n  /**\n   * Switching from the ending view to the starting view.\n   */\n  backToStart(){\n    this.welcome = true;\n    this.gameover = false;  \n  }\n\n  /**Assign the selected level of difficulty to {@link AppComponent.level} */\n  selected(){\n    this.level = +document.getElementsByTagName(\"select\")[0].value;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n  {{title}}\n\n\n  \n    \n    \n    \n  \n\n  \n    Welcome to the Very Stressful Movie Quiz!\n\n  Ever got bored during regular quizzes? Boy do I have a game for you! \n\n    Instructions\n     \n      \n        \n      \n      \n        Read the description on the bottom left and match it to the correct movie title.\n        \n        You get 20 seconds to play the quiz. Each correctly guessed movie grants you another few seconds. The harder the chosen level the less additional time.\n        \n        For each correct answer you'll get points and you are getting a bonus for guessing correctly consecutively. Guess wrong and 5 points are subtracted\n        \n        But a movie quiz is too relaxing. This is why you are trying to defend Earth from an Alien Invasion at the same time. \n        \n        For each enemy you shoot you'll receive +20 points and an additional 1000 points if all enemies were killed.\n        \n        You start with a total of 3 lives. For each hit you take from the enemy bullets, one live will be taken away. \n        \n        The game is finished if there are no more aliens left, if you lost all your lives or if the time runs out.\n        \n      \n    \n\n    \n      Start the game!\n      \n      \n        Level:\n        \n          {{lvl.viewValue}}\n        \n      \n    \n    \n    \n      \n    \n  \n\n  \n    \n  \n  \n    Your Total Score is {{totalScore}}\n    \n    \n      Try again\n      Back to Instructions  \n    \n\n    \n      \n    \n  \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.sass\n                \n                div.game\n    background-color: black\n    border: white 1px solid\n    margin: 0 auto\n    max-width: 95%\n    min-height: 80%\n    max-height: 90%\n    height: 100%\n    padding: 2%\n    border-radius: 25px\n    position: sticky\n    bottom: 10px\n\n.title\n    display: flex\n    justify-content: center\n    background-color: white\n    padding: 30px\n    margin-bottom: 100px\n    text-align: center\n    font-size: 50pt\n\n    h1 \n        margin-left: 100px\n        margin-right: 100px\n    .popcorn\n        width: 150px\n        height: auto\n\n.stressfulmoviequiz\n    width: 70%\n    margin: 5px 50px\n\n.starting\n    display: flex\n    flex-direction: column\n    justify-content: center\n    align-items: center\n    h1 \n        text-shadow: 0 0 5px white\n        font-size: 60pt\n\n    h2 \n        text-shadow: 0 0 5px white\n        font-size: 40pt\n\n    .quizdescription\n        font-size: 25pt\n        font-weight: bold\n        text-align: justify\n        background: white\n        padding: 20px\n    .instructions\n        display: flex\n        justify-content: center\n        align-items: center\n        width: 60%\n        margin: 20px 0\n\n        .text\n            width: 35%\n            font-size: 25pt\n            font-weight: bold\n            text-align: justify\n            background: white\n            padding: 20px\n        \n        img \n            width: 80%\n\n.gameover\n    display: flex\n    flex-direction: column\n    justify-content: center\n    align-items: center\n    \n    h1 \n        text-shadow: 0 0 5px white\n        font-size: 60pt\n    \n    h2 \n        text-shadow: 0 0 5px white\n        font-size: 40pt\n    \n    .buttons\n        display: flex\n        flex-direction: wrap\n        justify-content: center\n\n        button\n            margin: 10px 40px\n\n.leaderboard\n    width: 80%\n    display: flex\n    flex-direction: column\n    align-content: center\n    justify-content: center\n\n.startgame\n    display: flex\n    width: 40%\n    justify-content: space-between\n    margin: 50px 0 30px 0\n\n.leveldifficulty\n    display: flex\n    justify-content: space-between\n    align-items: center\n    width: 40%\n    font-size: 30pt\n    background-color: white\n    padding: 5px\n\n    label \n        width: 35%\n        margin-right: 40px\n    select\n        width: 60%\n        font: 400 20pt Arial\n        padding: 5px\n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}                      Welcome to the Very Stressful Movie Quiz!  Ever got bored during regular quizzes? Boy do I have a game for you!     Instructions                                       Read the description on the bottom left and match it to the correct movie title.                You get 20 seconds to play the quiz. Each correctly guessed movie grants you another few seconds. The harder the chosen level the less additional time.                For each correct answer you\\'ll get points and you are getting a bonus for guessing correctly consecutively. Guess wrong and 5 points are subtracted                But a movie quiz is too relaxing. This is why you are trying to defend Earth from an Alien Invasion at the same time.                 For each enemy you shoot you\\'ll receive +20 points and an additional 1000 points if all enemies were killed.                You start with a total of 3 lives. For each hit you take from the enemy bullets, one live will be taken away.                 The game is finished if there are no more aliens left, if you lost all your lives or if the time runs out.                            Start the game!                    Level:                  {{lvl.viewValue}}                                                    Your Total Score is {{totalScore}}              Try again      Back to Instructions                        '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAnswerComponent\n\nAnswerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnswerComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nLeaderboardComponent\n\nLeaderboardComponent\n\nAppModule -->\n\nLeaderboardComponent->AppModule\n\n\n\n\n\nOptionComponent\n\nOptionComponent\n\nAppModule -->\n\nOptionComponent->AppModule\n\n\n\n\n\nPhaserComponent\n\nPhaserComponent\n\nAppModule -->\n\nPhaserComponent->AppModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\nAppModule -->\n\nQuestionComponent->AppModule\n\n\n\n\n\nQuizComponent\n\nQuizComponent\n\nAppModule -->\n\nQuizComponent->AppModule\n\n\n\n\n\nSpaceComponent\n\nSpaceComponent\n\nAppModule -->\n\nSpaceComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGameService\n\nGameService\n\nAppModule -->\n\nGameService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AnswerComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            GameComponent\n                        \n                        \n                            LeaderboardComponent\n                        \n                        \n                            OptionComponent\n                        \n                        \n                            PhaserComponent\n                        \n                        \n                            QuestionComponent\n                        \n                        \n                            QuizComponent\n                        \n                        \n                            SpaceComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule }   from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SpaceComponent } from './space/space.component';\nimport { QuizComponent } from './quiz/quiz.component';\nimport { AnswerComponent } from './answer/answer.component';\nimport { QuestionComponent } from './question/question.component';\nimport { GameComponent } from './game/game.component';\nimport { OptionComponent } from './option/option.component';\nimport { GameService } from './services/game.service';\nimport { UserService} from './services/user.service';\nimport { PhaserComponent } from './phaser/phaser.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SpaceComponent,\n    QuizComponent,\n    AnswerComponent,\n    QuestionComponent,\n    GameComponent,\n    OptionComponent,\n    PhaserComponent,\n    LeaderboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule\n  ],\n  providers: [GameService, UserService],\n  bootstrap: [AppComponent]\n  \n})\nexport class AppModule { \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bullet.html":{"url":"classes/Bullet.html","title":"class - Bullet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bullet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/phaser/Bullet.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                born\n                            \n                            \n                                direction\n                            \n                            \n                                isEnemyBullet\n                            \n                            \n                                speed\n                            \n                            \n                                xSpeed\n                            \n                            \n                                ySpeed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fire\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene, x, y, defaultKey)\n                    \n                \n                        \n                            \n                                Defined in src/app/phaser/Bullet.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultKey\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            born\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            direction\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnemyBullet\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            speed\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xSpeed\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ySpeed\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fire\n                        \n                        \n                    \n                \n            \n            \n                \nfire(shooter, target)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/Bullet.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shooter\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(time, delta)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/Bullet.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delta\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Bullet extends Phaser.GameObjects.Image {\n    isEnemyBullet;\n    speed;\n    born;\n    direction;\n    xSpeed;\n    ySpeed;\n\n    constructor(scene, x, y, defaultKey){\n        super(scene, x, y, defaultKey);\n        // Tell Phaser to use our preloaded image.\n        Phaser.GameObjects.Image.call( this, scene, 0, 0, defaultKey );\n\n        // Is this a bullet for the enemy?\n        this.isEnemyBullet = ( defaultKey === 'enemyBullet' );\n\n        // This is our base speed.\n        this.speed = 0.1;\n\n        // This is the time when the bullet was \"born\" (fired).\n        this.born = 0;\n\n        // This is the direction the bullet is traveling.\n        this.direction = 0;\n\n        // This is the bullet's speed along the x-axis.\n        this.xSpeed = 0;\n\n        // This is the bullet's speed along the y-axis.\n        this.ySpeed = 0;\n\n        // Set the image size based on the type of bullet.\n        if ( this.isEnemyBullet ) {\n            this.setSize( 9, 9 );\n        } else {\n            this.setSize( 6, 36 );\n        }\n    }\n\n    fire(shooter, target){\n        // Set the starting x- and y-coordinates to the shooter's.\n        this.setPosition( shooter.x, shooter.y );\n\n        // Set things assuming that the player is shooting.\n        this.direction = 90;\n        this.xSpeed = 0;\n        this.ySpeed = -this.speed;\n        this.born = 0;\n\n        // But if an alien is shooting, reset those.\n        if ( this.isEnemyBullet ) {\n\n            // Calculate the direction.\n            var xDifference = target.x - this.x;\n            var yDifference = target.y - this.y;\n            this.direction = Math.atan( xDifference / yDifference );\n\n            // Calculate the x-axis speed against the direction.\n            this.xSpeed = this.speed * Math.sin( this.direction );\n\n            // Calculate the y-axis speed against the direction.\n            this.ySpeed = this.speed * Math.cos( this.direction );\n\n            // Calculate a rotation for an enemy bullet.\n            this.rotation = Phaser.Math.Angle.Between(\n                shooter.x,\n                shooter.y,\n                target.x,\n                target.y\n            );\n        }\n    }\n\n    update(time, delta){\n       // Set this bullet's x-coordinate.\n       this.x += this.xSpeed * delta;\n\n       // Set this bullet's y-coordinate.\n       this.y += this.ySpeed * delta;\n\n       // Update this bullet's born time.\n       this.born += delta;\n\n       // If it's more than 5,000 milliseconds, it's off the screen.\n       // Remove it from the game, so Phaser doesn't have to track it anymore.\n       if ( this.born > 5000 ) {\n           this.setActive( false );\n           this.setVisible( false );\n       } \n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponent.html":{"url":"components/GameComponent.html","title":"component - GameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/game.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game\n            \n\n            \n                styleUrls\n                ./game.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childcomp\n                            \n                            \n                                correctAnswer\n                            \n                            \n                                obs\n                            \n                            \n                                score\n                            \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTime\n                            \n                            \n                                getEventFromOption\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setGameOver\n                            \n                            \n                                setTime\n                            \n                            \n                                stopGame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameover\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/game/game.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :     integer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:21\n                            \n                        \n                \n                    \n                        Level of difficulty provided by the AppComponent.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        gameover\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:23\n                            \n                        \n                \n                    \n                        Forwards to the AppComponent when the game has ended.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTime\n                        \n                        \n                    \n                \n            \n            \n                \naddTime(delta: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:47\n                \n            \n\n\n            \n                \n                    This method is triggered when the player answered the quiz correctly. \nThe player then is awarded additional time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delta\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventFromOption\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventFromOption(valueEmitted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:56\n                \n            \n\n\n            \n                \n                    Receives the information if the clicked OptionComponent was the correct answer or not.\nThe player receives points on a correct answer and 5 points are subtracted on a wrong answer.\nOn a correct answer, the amount of additional time depends on the level of difficulty (GameComponent.level and \nthe amount of points on the number of consecutively correct answered questions (GameComponent.correctAnswer).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOver(valueEmitted: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:68\n                \n            \n\n\n            \n                \n                    Triggered when the player lost in the shooting game part of the game (PhaserComponent).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTime\n                        \n                        \n                    \n                \n            \n            \n                \nsetTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:38\n                \n            \n\n\n            \n                \n                    Method to update timebar to simulate time running out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopGame\n                        \n                        \n                    \n                \n            \n            \n                \nstopGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:73\n                \n            \n\n\n            \n                \n                    Triggered when time runs out on the timebar (GameComponent.timer) \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childcomp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpaceComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SpaceComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:25\n                            \n                        \n\n                \n                    \n                        Keeps track of SpaceComponent.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            correctAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     integer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:15\n                            \n                        \n\n                \n                    \n                        Keeps track of how many times the player answered correctly to the movie quiz.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:19\n                            \n                        \n\n                \n                    \n                        Observable which helps evaluating the current length of the timebar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     integer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:13\n                            \n                        \n\n                \n                    \n                        Current score to the Movie Quiz part of the game. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     integer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:17\n                            \n                        \n\n                \n                    \n                        Represents the length of the timebar in percent.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, ViewChild, Input } from '@angular/core';\nimport {Observable, interval} from 'rxjs';\nimport { SpaceComponent } from '../space/space.component';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.sass']\n})\n/**Represents the game and contains the quiz and shooting game.  */\nexport class GameComponent implements OnInit {\n  /**Current score to the Movie Quiz part of the game. */\n  score: integer;\n  /**Keeps track of how many times the player answered correctly to the movie quiz.*/\n  correctAnswer: integer;\n  /**Represents the length of the timebar in percent.*/\n  timer: integer;\n  /**Observable which helps evaluating the current length of the timebar.*/\n  obs: Observable;\n  /**Level of difficulty provided by the {@link AppComponent}.*/\n  @Input() level: integer;\n  /**Forwards to the {@link AppComponent} when the game has ended.*/\n  @Output() gameover: EventEmitter = new EventEmitter();\n  /**Keeps track of {@link SpaceComponent}.*/ \n  @ViewChild(SpaceComponent) childcomp: SpaceComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.score = 0;\n    this.correctAnswer = 1;\n    this.timer = 100;\n    this.obs = interval(50);\n    this.obs.subscribe(() => this.setTime())\n  }\n\n  /**Method to update timebar to simulate time running out.*/\n  setTime(){\n    this.timer = this.timer - 0.25;\n    if(this.timer \n    \n\n    \n        \n    \n        Score: {{score}}\n        \n        \n    \n    \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./game.component.sass\n                \n                div\n    display: flex\n    justify-content: center\n    padding: 10px\n    background-color: white\n\nh1 \n    margin-bottom: 20px\n    \n.outer\n    border: white 2px solid\n    \n.quiz\n    width: 50%\n    padding: 5px\n    flex-direction: column\n    position: relative\n\n.space\n    display: flex\n    justify-content: center\n    align-items: center\n\n.timerbar\n    display: flex\n    justify-content: flex-start\n    height: 20px\n    background-color: black\n    border-radius: 20px\n    margin: 20px 0px\n\n.timerbar::before\n    content: ''\n    background-color: white\n    border-radius: 20px\n    max-width: 100%\n    width: var(--width)\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Score: {{score}}                                    '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/game.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getQuiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/game.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuiz\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuiz(level: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/game.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { retry } from 'rxjs/operators';\n\n@Injectable()\n/**Service responsible for making calls to the Quiz Microservice. For more information see https://app.swaggerhub.com/apis/ltoedt/ASE/0.1*/\nexport class GameService {\n  url = \"\"\n\n  constructor(private http: HttpClient) { }\n\n  getQuiz(level: integer){\n    return this.http.get(this.url + \":8080\" + \"/api/quizzes/quiz?level=\" + level)\n    .pipe(\n      retry(3)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeaderboardComponent.html":{"url":"components/LeaderboardComponent.html","title":"component - LeaderboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LeaderboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/leaderboard/leaderboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-leaderboard\n            \n\n            \n                styleUrls\n                ./leaderboard.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./leaderboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leaderboardEmpty\n                            \n                            \n                                leaders\n                            \n                            \n                                score\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLeaders\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameover\n                            \n                            \n                                totalScore\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/leaderboard/leaderboard.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        gameover\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:19\n                            \n                        \n                \n                    \n                        Flag if the leaderboard is displayed at the starting or ending view.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalScore\n                    \n                \n                \n                    \n                        Type :     integer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:17\n                            \n                        \n                \n                    \n                        Total score of a player after the game has finished.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLeaders\n                        \n                        \n                    \n                \n            \n            \n                \ngetLeaders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:34\n                \n            \n\n\n            \n                \n                    Get Top 100 scores from the User Microservice.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:48\n                \n            \n\n\n            \n                \n                    Triggered when the player submits her score to the User Microservice.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leaderboardEmpty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:15\n                            \n                        \n\n                \n                    \n                        Flag to make leaderboard invisible in case there are no scores.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Score[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:13\n                            \n                        \n\n                \n                    \n                        List of leaders. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Score('', 0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:21\n                            \n                        \n\n                \n                    \n                        Potential score transmitted to the User Microservice.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:23\n                            \n                        \n\n                \n                    \n                        Flag to indicate whether the player has submitted her score at the end of the game.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport {UserService} from '../services/user.service';\nimport {Score} from '../model/score';\n\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.sass']\n})\n/**Contains the top 100 users with their scores.*/\nexport class LeaderboardComponent implements OnInit {\n  /**List of leaders. */\n  leaders: Score[];\n  /**Flag to make leaderboard invisible in case there are no scores.*/\n  leaderboardEmpty: boolean;\n  /**Total score of a player after the game has finished.*/\n  @Input() totalScore: integer;\n  /** Flag if the leaderboard is displayed at the starting or ending view.*/\n  @Input() gameover: boolean;\n  /**Potential score transmitted to the User Microservice.*/\n  score = new Score('', 0);\n  /**Flag to indicate whether the player has submitted her score at the end of the game.*/\n  submitted: boolean;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.leaderboardEmpty = true;\n    this.submitted = false;\n    this.getLeaders();\n  }\n\n  /**Get Top 100 scores from the User Microservice.*/\n  getLeaders(){\n    var loc = window.location.href;\n    var tmp = loc.split(\":\");\n    var url = tmp.slice(0,2).join(\":\");\n    this.userService.url = url;\n    \n    this.userService.getScores().subscribe(\n      scores => {\n        this.leaders = scores as Score[];\n        this.leaderboardEmpty = this.leaders.length == 0;\n      })\n  }\n  \n  /**Triggered when the player submits her score to the User Microservice.*/\n  onSubmit(){\n    this.score.scoreNo = this.totalScore;\n    this.userService.postScore(this.score).subscribe(() => this.getLeaders());\n    this.submitted = true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Username: \n      \n    \n\n    Submit your Score\n  \n\nLeaderboard\n\n\n    \n      Leaderboard\n        \n          \n          User\n          Score\n        \n        \n            {{i + 1}}\n            {{leader.user}}\n            {{leader.scoreNo}}\n         \n    \n\n \n\n    \n\n    \n                \n                    ./leaderboard.component.sass\n                \n                .wrapper \n    display: flex\n    flex-direction: column\n    align-items: center\n    width: 100%\n\n.leaderboard\n    display: flex\n    text-align: justify\n    margin: 20px\n    width: 80%\n    background-color: white\n    border-radius: 20px\n    \n    table \n        width: 100%\n        padding: 20px\n        margin: 20px\n        font-size: 30pt\n        border: 5px solid black\n        border-radius: 20px\n\nh2 \n    text-shadow: 0 0 5px white\n    font-size: 40pt\n    text-align: center\n\n \n.submitLeader\n    width: 100%\n    display: flex\n    justify-content: center\n    align-items: center\n    margin: 70px 10px 10px 10px\n\n    .button\n        margin: 20px 0px 60px 0       \n\n.form-group\n    display: flex\n    width: 55%\n    justify-content: space-between\n    align-items: center\n    font-size: 30pt\n    background-color: white\n    padding: 5px\n    margin: 20px 30px 60px 0\n\n    input\n        width: 55%\n        background-color: #ffffffbd\n        font-size: 25pt\n        margin: 5px\n        padding: 5px\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Username:               Submit your Score  Leaderboard          Leaderboard                            User          Score                            {{i + 1}}            {{leader.user}}            {{leader.scoreNo}}              '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeaderboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Level.html":{"url":"interfaces/Level.html","title":"interface - Level","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Level\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the Dropdown list to choose the Level of Difficulty\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Actual value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Value displayed in the dropdown list\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { titles } from '../assets/title_different_fonts';\nimport { interval } from 'rxjs';\n\n/**\n * Interface for the Dropdown list to choose the Level of Difficulty\n */\nexport interface Level {\n  /**Actual value*/\n  value: number;\n  /**Value displayed in the dropdown list*/\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\n\n/** \n *Top Level Component\n */\nexport class AppComponent implements OnInit{\n  title = 'The Very Stressful Movie Quiz';\n  /**Flag to display or hidde starting view */\n  welcome = true;\n  /**Flag to display or hidde game view */\n  startedGame = false;\n  /**Flag to display or hidde ending view */\n  gameover = false;\n  /**Variable to store total score after game has finished */\n  totalScore = 0;\n  /**Path to the title picture \"The Very Stressful Movie Quiz\" in different movie fonts */\n  titlesrc: string;\n  /**Array of the different title picture paths used for {@link AppComponent.titlesrc}*/\n  titles: string[];\n  /**Counter to iterate through {@link AppComponent.titles}*/\n  counter = 0;\n  /** Observable responsible to switch title image path every 10s*/\n  observ;\n  /**Level of difficulty. Default = 1 */\n  level = 1;\n\n  /**Available Level of Difficulty in the dropdown list when starting the game */\n  levels: Level[] = [\n    {value: 1, viewValue: 'Easy'},\n    {value: 2, viewValue: 'Medium'},\n    {value: 3, viewValue: 'Hard'}\n  ]\n\n  constructor(){\n  }\n\n  ngOnInit(){\n    this.titles = titles;\n    this.setDifferentMovieTitle();\n    this.observ = interval(10000);\n    this.observ.subscribe(() => this.setDifferentMovieTitle());\n  }\n\n  /**\n   * Method responsible for switching the title pictures with different movie fonts.\n   */\n  setDifferentMovieTitle(){\n    this.titlesrc = this.titles[this.counter];\n    this.counter = (this.counter+1)%this.titles.length;\n  }\n\n  /**\n   * Switching from the starting view to the game view.\n   */\n  startGame(){\n    this.startedGame = true\n    this.welcome = false\n  }\n\n /**\n   * Switching from the game view to the ending view. Triggered when the game is over.\n   */\n  setGameOver(valueEmitted: integer){\n    this.gameover = true;\n    this.startedGame = false;\n    this.totalScore = valueEmitted;\n  }\n\n  /**\n   * Switching from the ending view to the game view.\n   */\n  restartGame(){\n    this.startedGame = true;\n    this.gameover = false;\n  }\n\n  /**\n   * Switching from the ending view to the starting view.\n   */\n  backToStart(){\n    this.welcome = true;\n    this.gameover = false;  \n  }\n\n  /**Assign the selected level of difficulty to {@link AppComponent.level} */\n  selected(){\n    this.level = +document.getElementsByTagName(\"select\")[0].value;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Movie.html":{"url":"classes/Movie.html","title":"class - Movie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Movie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/movie.ts\n        \n\n            \n                Description\n            \n            \n                Representatin of the movie object which is part of the received Quiz.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                poster\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(poster: string, title: string, code: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/movie.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        poster\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/movie.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poster\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/movie.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/movie.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Movie{\n   poster: string;\n   title: string;\n   code: string;\n   \n   constructor(poster: string, title: string, code: string){\n       this.poster = poster;\n       this.title = title;\n       this.code = code;\n   }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionComponent.html":{"url":"components/OptionComponent.html","title":"component - OptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/option/option.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-option\n            \n\n            \n                styleUrls\n                ./option.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                style\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                correctAnswer\n                            \n                            \n                                movie\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/option/option.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        correctAnswer\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/option/option.component.ts:15\n                            \n                        \n                \n                    \n                        The code of the correct movie. Received by the AnswerComponent.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        movie\n                    \n                \n                \n                    \n                        Type :         Movie\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/option/option.component.ts:13\n                            \n                        \n                \n                    \n                        Movie object which is represented by the OptionComponent. Received by the AnswerComponent.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/option/option.component.ts:17\n                            \n                        \n                \n                    \n                        Forwards to the AnswerQuizComponent when it was clicked with the information if it's the correct answer or not.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/option/option.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/option/option.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/option/option.component.ts:31\n                \n            \n\n\n            \n                \n                    This method triggers when the component is clicked and evaluates if it contains the correct answer to the movie quiz or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"wrapper\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/option/option.component.ts:19\n                            \n                        \n\n                \n                    \n                        This attribute holds the applied css style class.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport {Movie} from '../model/movie';\n\n@Component({\n  selector: 'app-option',\n  templateUrl: './option.component.html',\n  styleUrls: ['./option.component.sass']\n})\n/**One potential Answer to the Movie Quiz. ChildComponent of the AnswerQuiz.*/\nexport class OptionComponent implements OnInit, OnChanges {\n\n  /**Movie object which is represented by the OptionComponent. Received by the {@link AnswerComponent}.*/\n  @Input() movie: Movie;\n  /**The code of the correct movie. Received by the {@link AnswerComponent}.*/\n  @Input() correctAnswer: string;\n  /**Forwards to the {@link AnswerQuizComponent} when it was clicked with the information if it's the correct answer or not.*/\n  @Output() clicked: EventEmitter = new EventEmitter();\n  /**This attribute holds the applied css style class.*/\n  style = \"wrapper\";\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(){\n    this.style = \"wrapper\";\n  }\n\n  /**This method triggers when the component is clicked and evaluates if it contains the correct answer to the movie quiz or not.*/\n  validate(){\n    if(this.correctAnswer == this.movie.code){\n      this.style = \"wrapper correct\";\n      this.clicked.emit(true);\n    }else{\n      this.style = \"wrapper wrong\";\n      this.clicked.emit(false);\n    }    \n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        Title: {{movie.title}}\n    \n    \n        Code: {{movie.code}}\n    \n\n\n    \n\n    \n                \n                    ./option.component.sass\n                \n                div \n    align-items: center\n    justify-content: center\n    \n.wrapper\n    display: flex\n    flex-wrap: wrap\n    flex-direction: column\n.code\n    font-weight: bold\n\n.correct\n    border: #00ec0c 5px solid\n    background-color: #00ec0c\n\n.wrong\n    border: red 5px solid\n    background-color: red   \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Title: {{movie.title}}                Code: {{movie.code}}    '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhaserComponent.html":{"url":"components/PhaserComponent.html","title":"component - PhaserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhaserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/phaser/phaser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-phaser\n            \n\n            \n                styleUrls\n                ./phaser.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./phaser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                phaserGame\n                            \n                            \n                                score\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setGameOver\n                            \n                            \n                                stopGame\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameOver\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/phaser/phaser.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        gameOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:21\n                            \n                        \n                \n                    \n                        Emits to the SpaceComponent when the player finished or lost the shooting game.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOver(score: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:34\n                \n            \n\n\n            \n                \n                    Remove the shooting game when the player finished or lost the game.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopGame\n                        \n                        \n                    \n                \n            \n            \n                \nstopGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:40\n                \n            \n\n\n            \n                \n                    This method stops the shooting game. This method is triggered when time on the quiz part of the game ran out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Phaser.Types.Core.GameConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:17\n                            \n                        \n\n                \n                    \n                        Necessary configuration of the game.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phaserGame\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Phaser.Game\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:15\n                            \n                        \n\n                \n                    \n                        The shooting game\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     integer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:19\n                            \n                        \n\n                \n                    \n                        Score achieved by the player in the shooting game.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport * as Phaser from \"phaser\";\nimport {CONFIG} from './CONFIG';\nimport {Bullet} from './Bullet';\n\n\n@Component({\n  selector: 'app-phaser',\n  templateUrl: './phaser.component.html',\n  styleUrls: ['./phaser.component.sass']\n})\n/**This componenet contains the actual shooting game.*/\nexport class PhaserComponent implements OnInit {\n  /**The shooting game*/\n  phaserGame: Phaser.Game;\n  /**Necessary configuration of the game.*/\n  config: Phaser.Types.Core.GameConfig;\n  /**Score achieved by the player in the shooting game.*/\n  score: integer;\n  /**Emits to the {@link SpaceComponent} when the player finished or lost the shooting game.*/\n  @Output() gameOver: EventEmitter = new EventEmitter();\n\n  constructor() {\n    this.config = CONFIG;\n    this.config.scene = [SpaceScene];\n   }\n\n  ngOnInit(): void {\n    this.phaserGame = new Phaser.Game(this.config);\n    window[\"angularLink\"] = this;\n  }\n\n  /**Remove the shooting game when the player finished or lost the game.*/\n  setGameOver(score: integer){\n    this.gameOver.emit(score);\n    this.phaserGame.destroy(true, false);\n  }\n\n  /**This method stops the shooting game. This method is triggered when time on the quiz part of the game ran out.*/\n  stopGame(){\n    this.score = this.phaserGame.scene.scenes[0].score;\n    this.setGameOver(this.score);\n  }\n}\n/**The setup for the shooting game. For more information see https://phaser.io/phaser3*/\nclass SpaceScene extends Phaser.Scene{\n  player;\n  aliens;\n  bullets;\n  bulletTime = 0;\n  cursors;\n  fireButton;\n  explosions;\n  starfield;\n  score = 0;\n  scorePrefix = 'SCORE: ';\n  scoreText;\n  lives;\n  enemyBullets;\n  firingTimer = 0;\n  stateText;\n  livingAliens = [];\n  lastAlienBulletTime = 0;\n  lastPlayerBulletTime = 0;\n  playerLives;\n  isGameOver = false;\n  gameOverModal;\n  gameOverText;\n  config;\n\n  preload(){\n    this.load.image('bullet', '../assets/invaders/bullet.png');\n    this.load.image('enemyBullet', 'assets/invaders/enemy-bullet.png');\n    this.load.spritesheet('invader', 'assets/invaders/invader32x32x4.png', {frameWidth: 32, frameHeight: 32});\n    this.load.image('ship', 'assets/invaders/player.png');\n    this.load.spritesheet('kaboom', 'assets/invaders/explode.png', {frameWidth:128, frameHeight: 128});\n    this.load.image('starfield', 'assets/invaders/starfield.png');\n    this.load.image('background', 'assets/invaders/background2.png');\n  }\n\n  create(){\n    // Setup our aliens' \"hover\" animation.\n    this.anims.create({\n      key: 'hover',\n      frames: this.anims.generateFrameNumbers( 'invader', {\n          start: 0,\n          end: 9\n      }),\n      frameRate: 10,\n      repeat: -1\n  });\n\n  // Setup our explosion animation.\n  this.anims.create({\n      key: 'explode',\n      frames: this.anims.generateFrameNumbers( 'kaboom', {\n          start: 0,\n          end: 15\n      }),\n      frameRate: 16,\n      repeat: 0,\n      hideOnComplete: true\n  });\n\n  // Set starfield's value to be a tile sprite, and make sure it's scaled properly.\n  this.starfield = this.add.tileSprite( 0, 0, 2048, 2048, 'starfield' );\n  this.starfield.setScale( 1 );\n\n  // Setup the score text.\n  this.scoreText = this.add.text( 10, 15, this.scorePrefix + this.score, {'fontSize': '25px'} );\n\n  // Setup the player's lives.\n  this.playerLives = this.add.group();\n  this.add.text(\n      this.sys.canvas.width - 210,    // From the right.\n      15,                             // From the top.\n      'LIVES:',\n      {'fontSize': '25px'}\n  );\n  this.createPlayerLives( this );\n\n  // Add the player as a sprite to the game physics!\n  this.player = this.physics.add.sprite( 400, 500, 'ship' );\n  this.player.setOrigin( 0.5, 0 );\n  this.player.setCollideWorldBounds( true );\n\n  // Create a group to hold our invaders.\n  this.aliens = this.physics.add.group();\n  this.createAliens();\n\n  // Create the player and alien bullet collections.\n  this.bullets = this.createBullets( 'bullet', this );\n  this.enemyBullets = this.createBullets( 'enemyBullet', this );\n\n  // Create some explosions!\n  this.explosions = this.add.group({\n      defaultKey: 'kaboom',\n      maxSize: 100\n  });\n\n  this.cursors = this.input.keyboard.addKeys({\n    left:Phaser.Input.Keyboard.KeyCodes.A,\n    right:Phaser.Input.Keyboard.KeyCodes.D\n  });\n\n  // Wire up the player's firing mechanism.\n  this.firePlayerBullet( this );\n\n  // Setup the game over screen.\n  this.createGameOverModal( this );\n  \n}\n\ncreateAliens () {\n\n  for (var y = 0; y  {\n\n    // If the player died, no processing!\n    if ( this.player.active === false ) {\n        return;\n    }\n\n    // Grab the first bullet in the group, activate it, and make it visible.\n    var playerBullet = this.bullets.get().setActive( true ).setVisible( true );\n\n    // As long as we have a valid bullet, fire it.\n    if ( playerBullet && sceneRef.time.now - this.lastPlayerBulletTime > 1000 ) {\n\n        // We don't need a target, since we don't need to calculate angles.\n        playerBullet.fire( this.player ); \n\n        // Setup collision handling.\n        sceneRef.physics.add.collider( this.aliens, playerBullet, this.handleEnemyCollision, null, this );\n\n        // Update the player last fired time.\n        this.lastPlayerBulletTime = sceneRef.time.now;\n    }\n}, sceneRef );\n}\n\nfireEnemyBullet( player, time, sceneRef ) {\n\n  // Grab the first bullet in the group, activate it, and make it visible.\n  var enemyBullet = this.enemyBullets.get().setActive( true ).setVisible( true );\n\n  // Find out how many alien invaders are still \"alive,\" and track them.\n  this.livingAliens = this.aliens.getChildren().filter( alien => alien.active === true );\n\n  // If we have an instance of enemyBullet, AND there are aliens still alive.\n  if ( enemyBullet && this.livingAliens.length > 0 ) {\n\n      // Get a random number between 0 and the number of aliens alive.\n      var randomAlienNumber = Phaser.Math.RND.integerInRange(\n          0,\n          this.livingAliens.length - 1\n      );\n\n      // Get the alien from the collection with that number.\n      var randomAlien = this.livingAliens[ randomAlienNumber ];\n\n      // If this alien hasn't fired in the last 4,000 milliseconds...\n      if ( time - randomAlien.lastFired > 4000 ) {\n\n          // Set the lastFired, so the alien doesn't fire again for a while.\n          randomAlien.lastFired = time;\n\n          // FIRE ZE BULLET!\n          enemyBullet.fire( randomAlien, player );\n\n          // Setup collision handling.\n          sceneRef.physics.add.collider( player, enemyBullet, this.handlePlayerCollision, null, this );\n\n          // Update the global last fired time, and add 2,000 milliseconds.\n          this.lastAlienBulletTime = time + 2000;\n      }\n  }\n}\n\ncreateGameOverModal(sceneRef){\n  // Create a \"modal\" window.\n  this.gameOverModal = sceneRef.add.graphics();\n\n  // Set its background color.\n  this.gameOverModal.fillStyle( 0x303030, 0.8 );\n\n  // Set its shape, x- and y-coordinates, and size.\n  this.gameOverModal.fillRect(\n      0,\n      0,\n      sceneRef.sys.canvas.width,\n      sceneRef.sys.canvas.height\n  );\n\n  // It shouldn't be visible... yet.\n  this.gameOverModal.visible = false;\n\n  // Get our game over text ready.\n  this.gameOverText = sceneRef.add.text(\n      sceneRef.sys.canvas.width / 2,\n      sceneRef.sys.canvas.height / 2,\n      ' ',\n      {\n          align: 'center'\n      }\n  );\n  this.gameOverText.setOrigin( 0.5, 0.5 );\n\n  // It shouldn't be visible... yet.\n  this.gameOverText.visible = false;\n\n  // Handle the player wanting to start over on mouse click.\n  sceneRef.input.on( 'pointerdown', ( pointer ) => {\n\n      // Only on a Game Over condition.\n      if ( this.isGameOver ) {\n\n          // Reset everything.\n          this.bullets.clear( true, true );\n          this.enemyBullets.clear( true, true );\n          this.explosions.clear( true, true );\n          this.aliens.clear( true, true );\n          this.playerLives.clear( true, true );\n\n          // Create again.\n          this.createAliens();\n          this.createPlayerLives( sceneRef );\n          this.player.setActive( true ).setVisible( true );\n\n          // Hide the text, followed by the modal.\n          this.gameOverText.visible = false;\n          this.gameOverModal.visible = false;            \n\n          // Reset the game over state.\n          this.isGameOver = false;\n      }\n  }, sceneRef );\n}\n\nhandleEnemyCollision(bullet, alien){\n  if ( bullet.active === true && alien.active === true ) {\n\n      // Deactivate the bullet, and take it off the screen.\n      bullet.setActive( false ).setVisible( false );\n\n      // Get the first explosion, and activate it.\n      var explosion = this.explosions.get().setActive( true );\n\n      // Place the explosion on the screen, and play the animation.\n      explosion.setOrigin( 0.5, 0.5 );\n      explosion.x = alien.x;\n      explosion.y = alien.y;\n      explosion.play( 'explode' );\n\n    // Deactivate and remove the alien from the screen.\n    alien.setActive( false ).setVisible( false );\n\n    // Increment the score.\n    this.score += 20;\n    this.scoreText.setText( this.scorePrefix + this.score );\n\n    // Game Over condition: has the player killed all the alien invaders?\n    if ( this.aliens.countActive() === 0 ) {\n\n        // Award a bonus for winning.\n        this.score += 1000;\n        this.scoreText.setText( this.scorePrefix + this.score );\n\n        // Handle Game Over.\n        this.handleGameOver( true );\n    }\n  }\n}\n\nhandlePlayerCollision( player, bullet ) {\n\n  // If both the player and bullet are active...\n  if ( player.active === true && bullet.active === true ) {\n\n      // Deactivate the bullet, and take it off the screen.\n      bullet.setActive( false ).setVisible( false );\n\n      // Get the first explosion, and activate it.\n      var explosion = this.explosions.get().setActive( true );\n\n      // Place the explosion on the screen, and play the animation.\n      explosion.setOrigin( 0.5, 0.5 );\n      explosion.x = player.x;\n      explosion.y = player.y;\n      explosion.play( 'explode' );\n\n      this.removeLife();\n\n      // Game Over condition: has the player lost all their lives?\n      if ( this.playerLives.countActive()  this.lastAlienBulletTime && !this.isGameOver ) {\n      this.fireEnemyBullet( this.player, time, this );\n    }\n}\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./phaser.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhaserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionComponent.html":{"url":"components/QuestionComponent.html","title":"component - QuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/question/question.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                styleUrls\n                ./question.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description1\n                            \n                            \n                                description2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateDescriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/question/question.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/question/question.component.ts:12\n                            \n                        \n                \n                    \n                        Movie description provided by the GameComponent.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/question/question.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/question/question.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDescriptions\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/question/question.component.ts:28\n                \n            \n\n\n            \n                \n                    This method splits up the description into two parts if it's too long.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question/question.component.ts:14\n                            \n                        \n\n                \n                    \n                        Description might be too long and thus is split up into two columns. This attribute contains part I.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question/question.component.ts:16\n                            \n                        \n\n                \n                    \n                        Description might be too long and thus is split up into two columns. This attribute contains part II.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.sass']\n})\n/**Representation of the Description of the movie we are looking for in the {@link AnswerComponent}.*/\nexport class QuestionComponent implements OnInit, OnChanges {\n\n  /**Movie description provided by the {@link GameComponent}.*/\n  @Input() description: string;\n  /**Description might be too long and thus is split up into two columns. This attribute contains part I.*/\n  description1: string;\n  /**Description might be too long and thus is split up into two columns. This attribute contains part II.*/\n  description2: string;\n  \n  constructor() { }\n\n  ngOnInit() {\n    this.updateDescriptions() }\n\n  ngOnChanges(){\n    this.updateDescriptions()\n  }\n\n  /**This method splits up the description into two parts if it's too long.*/\n  updateDescriptions(){\n    var wordlist = this.description.split(\" \");\n    if(this.description.length > 450){\n      var half = Math.floor(wordlist.length/2);\n      this.description1 = wordlist.slice(0, half).join(\" \");\n      this.description2 = wordlist.slice(half, wordlist.length).join(\" \");  \n    }else{\n      this.description1 = this.description;\n      this.description2 = \"\";\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Description\n    \n  \n    {{description1}}\n    {{description2}}\n    \n\n\n    \n\n    \n                \n                    ./question.component.sass\n                \n                div\n    margin: 0px 15px\n\n.wrapper\n    display: flex\n    flex-wrap: wrap\n    justify-content: center\n    align-items: center\n\nh2 \n    font-weight: bold\n    padding-left: 10px\n    margin-bottom: 8px\n    width: 100%\n.row\n    display: flex\n    flex-wrap: nowrap\n    justify-content: center\n    align-items: flex-start\n    margin: 0px\n    width: 100%\n    height: 350px\n    \n.column\n    flex-grow: 1 \n    text-align: justify\n    font-size: larger\n    padding: 10px\n    margin: 0px 0px 15px 0px\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Description          {{description1}}    {{description2}}    '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/quiz.ts\n        \n\n            \n                Description\n            \n            \n                Representation of the quiz object received by the Quiz Microservice.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answers\n                            \n                            \n                                correctAnswer\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, movies: Movie[], correctAnswer: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/quiz.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        movies\n                                                  \n                                                        \n                                                                        Movie[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        correctAnswer\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Movie[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/quiz.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            correctAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/quiz.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/quiz.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Movie} from './movie'\n\n/**Representation of the quiz object received by the Quiz Microservice.*/\nexport class Quiz{\n    description: string;\n    answers: Movie[];\n    correctAnswer: string;\n    \n    constructor(description: string, movies: Movie[], correctAnswer: string){\n        this.description = description;\n        this.answers = movies;\n        this.correctAnswer = correctAnswer;\n    }\n }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizComponent.html":{"url":"components/QuizComponent.html","title":"component - QuizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz/quiz.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz\n            \n\n            \n                styleUrls\n                ./quiz.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./quiz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                quiz\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventFromOption\n                            \n                            \n                                getQuiz\n                            \n                            \n                                imageExists\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz/quiz.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :     integer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz/quiz.component.ts:17\n                            \n                        \n                \n                    \n                        Level of difficulty chosen by the player when starting the game.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz/quiz.component.ts:15\n                            \n                        \n                \n                    \n                        Forwards to the GameComponent if the correct movie was chosen or not.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventFromOption\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventFromOption(valueEmitted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz/quiz.component.ts:55\n                \n            \n\n\n            \n                \n                    This method is triggered when the player chooses (clicks) an answer for the question.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuiz\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz/quiz.component.ts:26\n                \n            \n\n\n            \n                \n                    Getting the quiz object from the Quiz Microservice.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            imageExists\n                        \n                        \n                    \n                \n            \n            \n                \nimageExists(image_url)\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz/quiz.component.ts:60\n                \n            \n\n\n            \n                \n                    Check if a given image url is reachable or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image_url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz/quiz.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quiz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Quiz\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quiz/quiz.component.ts:13\n                            \n                        \n\n                \n                    \n                        The quiz object which will be passed to the child components.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { GameService } from '../services/game.service';\nimport { Quiz } from '../model/quiz';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.sass']\n})\n/**This component contains the Movie Quiz part of the game.*/\nexport class QuizComponent implements OnInit {\n  /**The quiz object which will be passed to the child components.*/\n  quiz: Quiz;\n  /**Forwards to the {@link GameComponent} if the correct movie was chosen or not.*/\n  @Output() clicked: EventEmitter = new EventEmitter();\n  /**Level of difficulty chosen by the player when starting the game.*/\n  @Input() level: integer;\n\n  constructor(private gameService: GameService) { }\n\n  ngOnInit() {\n    this.getQuiz();\n  }\n\n  /**Getting the quiz object from the Quiz Microservice.*/\n  getQuiz(){\n    var response;\n\n    var loc = window.location.href;\n    var tmp = loc.split(\":\");\n    var url = tmp.slice(0,2).join(\":\");\n    if(tmp.length == 2){\n      url = url.slice(0, -1); // remove trailing \"/\"; otherwise calls \".com/:8080/api\"\n    }\n    this.gameService.url = url;\n\n    this.gameService.getQuiz(this.level).subscribe(\n      quiz => {\n        response =  quiz;\n        if(( response).description.length  response).answers){\n          if(!this.imageExists(el.poster)){\n            return this.getQuiz();\n          }\n        }\n\n        this.quiz = response;\n      });\n  }\n\n  /**This method is triggered when the player chooses (clicks) an answer for the question.*/\n  getEventFromOption(valueEmitted: boolean){\n    this.clicked.emit(valueEmitted);\n  }\n\n  /**Check if a given image url is reachable or not.*/\n  imageExists(image_url){\n\n    var http = new XMLHttpRequest();\n\n    http.open('HEAD', image_url, false);\n    \n    try{\n      http.send();\n      return http.status == 200;\n    }\n    catch{\n      return false;\n    }\n}\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./quiz.component.sass\n                \n                div.wrapper\n    display: flex\n    flex-wrap: wrap\n\n.answer\n    flex-grow: 2\n\n.question\n    flex-grow: 1\n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Score.html":{"url":"classes/Score.html","title":"class - Score","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Score\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/score.ts\n        \n\n            \n                Description\n            \n            \n                Representation of the score object received and sent to the User Microservice.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scoreNo\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: string, scoreNo: integer)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/score.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scoreNo\n                                                  \n                                                        \n                                                                    integer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreNo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     integer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/score.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/score.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Score{\n    user: string;\n    scoreNo: integer;\n    \n    constructor(user: string, scoreNo: integer){\n        this.user = user;\n        this.scoreNo = scoreNo;\n    }\n }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpaceComponent.html":{"url":"components/SpaceComponent.html","title":"component - SpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/space/space.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-space\n            \n\n            \n                styleUrls\n                ./space.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./space.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childcomp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setGameOver\n                            \n                            \n                                stopGame\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameOver\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/space/space.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        gameOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/space/space.component.ts:12\n                            \n                        \n                \n                    \n                        Forwards to the GameComponent when the shooting game has finished.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/space/space.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOver(valueEmitted: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/space/space.component.ts:22\n                \n            \n\n\n            \n                \n                    Triggered when the shooting game is over.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopGame\n                        \n                        \n                    \n                \n            \n            \n                \nstopGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/space/space.component.ts:27\n                \n            \n\n\n            \n                \n                    Stops the shooting game. This funtion is triggered when time has run out on the quiz part of the gamne (QuizComponent).\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childcomp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PhaserComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(PhaserComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/space/space.component.ts:14\n                            \n                        \n\n                \n                    \n                        ChildComponent containing the actual shooting game (PhaserComponent).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport {PhaserComponent} from '../phaser/phaser.component';\n\n@Component({\n  selector: 'app-space',\n  templateUrl: './space.component.html',\n  styleUrls: ['./space.component.sass']\n})\n/**Contains the Shooting game part.*/\nexport class SpaceComponent implements OnInit {\n  /**Forwards to the {@link GameComponent} when the shooting game has finished.*/\n  @Output() gameOver: EventEmitter = new EventEmitter();\n  /**ChildComponent containing the actual shooting game ({@link PhaserComponent}).*/\n  @ViewChild(PhaserComponent) childcomp: PhaserComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  /**Triggered when the shooting game is over.*/\n  setGameOver(valueEmitted: integer){\n    this.gameOver.emit(valueEmitted);\n  }\n\n  /**Stops the shooting game. This funtion is triggered when time has run out on the quiz part of the gamne ({@link QuizComponent}).*/\n  stopGame(){\n    this.childcomp.stopGame();\n  }\n}\n\n    \n\n    \n          \n  \n    if (global === undefined) {\n      var global = window;\n    }\n  \n    \n      \n    \n\n\n\n    \n\n    \n                \n                    ./space.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        if (global === undefined) {      var global = window;    }                '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"classes/SpaceScene.html":{"url":"classes/SpaceScene.html","title":"class - SpaceScene","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpaceScene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/phaser/phaser.component.ts\n        \n\n            \n                Description\n            \n            \n                The setup for the shooting game. For more information see https://phaser.io/phaser3\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aliens\n                            \n                            \n                                bullets\n                            \n                            \n                                bulletTime\n                            \n                            \n                                config\n                            \n                            \n                                cursors\n                            \n                            \n                                enemyBullets\n                            \n                            \n                                explosions\n                            \n                            \n                                fireButton\n                            \n                            \n                                firingTimer\n                            \n                            \n                                gameOverModal\n                            \n                            \n                                gameOverText\n                            \n                            \n                                isGameOver\n                            \n                            \n                                lastAlienBulletTime\n                            \n                            \n                                lastPlayerBulletTime\n                            \n                            \n                                lives\n                            \n                            \n                                livingAliens\n                            \n                            \n                                player\n                            \n                            \n                                playerLives\n                            \n                            \n                                score\n                            \n                            \n                                scorePrefix\n                            \n                            \n                                scoreText\n                            \n                            \n                                starfield\n                            \n                            \n                                stateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createAliens\n                            \n                            \n                                createBullets\n                            \n                            \n                                createGameOverModal\n                            \n                            \n                                createPlayerLives\n                            \n                            \n                                fireEnemyBullet\n                            \n                            \n                                firePlayerBullet\n                            \n                            \n                                handleEnemyCollision\n                            \n                            \n                                handleGameOver\n                            \n                            \n                                handlePlayerCollision\n                            \n                            \n                                preload\n                            \n                            \n                                removeLife\n                            \n                            \n                                setGameOver\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aliens\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bullets\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bulletTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cursors\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enemyBullets\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            explosions\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fireButton\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firingTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameOverModal\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameOverText\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isGameOver\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastAlienBulletTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastPlayerBulletTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lives\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            livingAliens\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            player\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerLives\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scorePrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SCORE: '\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreText\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            starfield\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateText\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:61\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAliens\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAliens()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBullets\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBullets(imageName, sceneRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sceneRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGameOverModal\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGameOverModal(sceneRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:245\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sceneRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPlayerLives\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePlayerLives(sceneRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:374\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sceneRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fireEnemyBullet\n                        \n                        \n                    \n                \n            \n            \n                \nfireEnemyBullet(player, time, sceneRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sceneRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            firePlayerBullet\n                        \n                        \n                    \n                \n            \n            \n                \nfirePlayerBullet(sceneRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sceneRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleEnemyCollision\n                        \n                        \n                    \n                \n            \n            \n                \nhandleEnemyCollision(bullet, alien)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bullet\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    alien\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleGameOver(didPlayerWin)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:393\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    didPlayerWin\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handlePlayerCollision\n                        \n                        \n                    \n                \n            \n            \n                \nhandlePlayerCollision(player, bullet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:340\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bullet\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preload\n                        \n                        \n                    \n                \n            \n            \n                \npreload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeLife\n                        \n                        \n                    \n                \n            \n            \n                \nremoveLife()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:366\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:426\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(time)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:432\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport * as Phaser from \"phaser\";\nimport {CONFIG} from './CONFIG';\nimport {Bullet} from './Bullet';\n\n\n@Component({\n  selector: 'app-phaser',\n  templateUrl: './phaser.component.html',\n  styleUrls: ['./phaser.component.sass']\n})\n/**This componenet contains the actual shooting game.*/\nexport class PhaserComponent implements OnInit {\n  /**The shooting game*/\n  phaserGame: Phaser.Game;\n  /**Necessary configuration of the game.*/\n  config: Phaser.Types.Core.GameConfig;\n  /**Score achieved by the player in the shooting game.*/\n  score: integer;\n  /**Emits to the {@link SpaceComponent} when the player finished or lost the shooting game.*/\n  @Output() gameOver: EventEmitter = new EventEmitter();\n\n  constructor() {\n    this.config = CONFIG;\n    this.config.scene = [SpaceScene];\n   }\n\n  ngOnInit(): void {\n    this.phaserGame = new Phaser.Game(this.config);\n    window[\"angularLink\"] = this;\n  }\n\n  /**Remove the shooting game when the player finished or lost the game.*/\n  setGameOver(score: integer){\n    this.gameOver.emit(score);\n    this.phaserGame.destroy(true, false);\n  }\n\n  /**This method stops the shooting game. This method is triggered when time on the quiz part of the game ran out.*/\n  stopGame(){\n    this.score = this.phaserGame.scene.scenes[0].score;\n    this.setGameOver(this.score);\n  }\n}\n/**The setup for the shooting game. For more information see https://phaser.io/phaser3*/\nclass SpaceScene extends Phaser.Scene{\n  player;\n  aliens;\n  bullets;\n  bulletTime = 0;\n  cursors;\n  fireButton;\n  explosions;\n  starfield;\n  score = 0;\n  scorePrefix = 'SCORE: ';\n  scoreText;\n  lives;\n  enemyBullets;\n  firingTimer = 0;\n  stateText;\n  livingAliens = [];\n  lastAlienBulletTime = 0;\n  lastPlayerBulletTime = 0;\n  playerLives;\n  isGameOver = false;\n  gameOverModal;\n  gameOverText;\n  config;\n\n  preload(){\n    this.load.image('bullet', '../assets/invaders/bullet.png');\n    this.load.image('enemyBullet', 'assets/invaders/enemy-bullet.png');\n    this.load.spritesheet('invader', 'assets/invaders/invader32x32x4.png', {frameWidth: 32, frameHeight: 32});\n    this.load.image('ship', 'assets/invaders/player.png');\n    this.load.spritesheet('kaboom', 'assets/invaders/explode.png', {frameWidth:128, frameHeight: 128});\n    this.load.image('starfield', 'assets/invaders/starfield.png');\n    this.load.image('background', 'assets/invaders/background2.png');\n  }\n\n  create(){\n    // Setup our aliens' \"hover\" animation.\n    this.anims.create({\n      key: 'hover',\n      frames: this.anims.generateFrameNumbers( 'invader', {\n          start: 0,\n          end: 9\n      }),\n      frameRate: 10,\n      repeat: -1\n  });\n\n  // Setup our explosion animation.\n  this.anims.create({\n      key: 'explode',\n      frames: this.anims.generateFrameNumbers( 'kaboom', {\n          start: 0,\n          end: 15\n      }),\n      frameRate: 16,\n      repeat: 0,\n      hideOnComplete: true\n  });\n\n  // Set starfield's value to be a tile sprite, and make sure it's scaled properly.\n  this.starfield = this.add.tileSprite( 0, 0, 2048, 2048, 'starfield' );\n  this.starfield.setScale( 1 );\n\n  // Setup the score text.\n  this.scoreText = this.add.text( 10, 15, this.scorePrefix + this.score, {'fontSize': '25px'} );\n\n  // Setup the player's lives.\n  this.playerLives = this.add.group();\n  this.add.text(\n      this.sys.canvas.width - 210,    // From the right.\n      15,                             // From the top.\n      'LIVES:',\n      {'fontSize': '25px'}\n  );\n  this.createPlayerLives( this );\n\n  // Add the player as a sprite to the game physics!\n  this.player = this.physics.add.sprite( 400, 500, 'ship' );\n  this.player.setOrigin( 0.5, 0 );\n  this.player.setCollideWorldBounds( true );\n\n  // Create a group to hold our invaders.\n  this.aliens = this.physics.add.group();\n  this.createAliens();\n\n  // Create the player and alien bullet collections.\n  this.bullets = this.createBullets( 'bullet', this );\n  this.enemyBullets = this.createBullets( 'enemyBullet', this );\n\n  // Create some explosions!\n  this.explosions = this.add.group({\n      defaultKey: 'kaboom',\n      maxSize: 100\n  });\n\n  this.cursors = this.input.keyboard.addKeys({\n    left:Phaser.Input.Keyboard.KeyCodes.A,\n    right:Phaser.Input.Keyboard.KeyCodes.D\n  });\n\n  // Wire up the player's firing mechanism.\n  this.firePlayerBullet( this );\n\n  // Setup the game over screen.\n  this.createGameOverModal( this );\n  \n}\n\ncreateAliens () {\n\n  for (var y = 0; y  {\n\n    // If the player died, no processing!\n    if ( this.player.active === false ) {\n        return;\n    }\n\n    // Grab the first bullet in the group, activate it, and make it visible.\n    var playerBullet = this.bullets.get().setActive( true ).setVisible( true );\n\n    // As long as we have a valid bullet, fire it.\n    if ( playerBullet && sceneRef.time.now - this.lastPlayerBulletTime > 1000 ) {\n\n        // We don't need a target, since we don't need to calculate angles.\n        playerBullet.fire( this.player ); \n\n        // Setup collision handling.\n        sceneRef.physics.add.collider( this.aliens, playerBullet, this.handleEnemyCollision, null, this );\n\n        // Update the player last fired time.\n        this.lastPlayerBulletTime = sceneRef.time.now;\n    }\n}, sceneRef );\n}\n\nfireEnemyBullet( player, time, sceneRef ) {\n\n  // Grab the first bullet in the group, activate it, and make it visible.\n  var enemyBullet = this.enemyBullets.get().setActive( true ).setVisible( true );\n\n  // Find out how many alien invaders are still \"alive,\" and track them.\n  this.livingAliens = this.aliens.getChildren().filter( alien => alien.active === true );\n\n  // If we have an instance of enemyBullet, AND there are aliens still alive.\n  if ( enemyBullet && this.livingAliens.length > 0 ) {\n\n      // Get a random number between 0 and the number of aliens alive.\n      var randomAlienNumber = Phaser.Math.RND.integerInRange(\n          0,\n          this.livingAliens.length - 1\n      );\n\n      // Get the alien from the collection with that number.\n      var randomAlien = this.livingAliens[ randomAlienNumber ];\n\n      // If this alien hasn't fired in the last 4,000 milliseconds...\n      if ( time - randomAlien.lastFired > 4000 ) {\n\n          // Set the lastFired, so the alien doesn't fire again for a while.\n          randomAlien.lastFired = time;\n\n          // FIRE ZE BULLET!\n          enemyBullet.fire( randomAlien, player );\n\n          // Setup collision handling.\n          sceneRef.physics.add.collider( player, enemyBullet, this.handlePlayerCollision, null, this );\n\n          // Update the global last fired time, and add 2,000 milliseconds.\n          this.lastAlienBulletTime = time + 2000;\n      }\n  }\n}\n\ncreateGameOverModal(sceneRef){\n  // Create a \"modal\" window.\n  this.gameOverModal = sceneRef.add.graphics();\n\n  // Set its background color.\n  this.gameOverModal.fillStyle( 0x303030, 0.8 );\n\n  // Set its shape, x- and y-coordinates, and size.\n  this.gameOverModal.fillRect(\n      0,\n      0,\n      sceneRef.sys.canvas.width,\n      sceneRef.sys.canvas.height\n  );\n\n  // It shouldn't be visible... yet.\n  this.gameOverModal.visible = false;\n\n  // Get our game over text ready.\n  this.gameOverText = sceneRef.add.text(\n      sceneRef.sys.canvas.width / 2,\n      sceneRef.sys.canvas.height / 2,\n      ' ',\n      {\n          align: 'center'\n      }\n  );\n  this.gameOverText.setOrigin( 0.5, 0.5 );\n\n  // It shouldn't be visible... yet.\n  this.gameOverText.visible = false;\n\n  // Handle the player wanting to start over on mouse click.\n  sceneRef.input.on( 'pointerdown', ( pointer ) => {\n\n      // Only on a Game Over condition.\n      if ( this.isGameOver ) {\n\n          // Reset everything.\n          this.bullets.clear( true, true );\n          this.enemyBullets.clear( true, true );\n          this.explosions.clear( true, true );\n          this.aliens.clear( true, true );\n          this.playerLives.clear( true, true );\n\n          // Create again.\n          this.createAliens();\n          this.createPlayerLives( sceneRef );\n          this.player.setActive( true ).setVisible( true );\n\n          // Hide the text, followed by the modal.\n          this.gameOverText.visible = false;\n          this.gameOverModal.visible = false;            \n\n          // Reset the game over state.\n          this.isGameOver = false;\n      }\n  }, sceneRef );\n}\n\nhandleEnemyCollision(bullet, alien){\n  if ( bullet.active === true && alien.active === true ) {\n\n      // Deactivate the bullet, and take it off the screen.\n      bullet.setActive( false ).setVisible( false );\n\n      // Get the first explosion, and activate it.\n      var explosion = this.explosions.get().setActive( true );\n\n      // Place the explosion on the screen, and play the animation.\n      explosion.setOrigin( 0.5, 0.5 );\n      explosion.x = alien.x;\n      explosion.y = alien.y;\n      explosion.play( 'explode' );\n\n    // Deactivate and remove the alien from the screen.\n    alien.setActive( false ).setVisible( false );\n\n    // Increment the score.\n    this.score += 20;\n    this.scoreText.setText( this.scorePrefix + this.score );\n\n    // Game Over condition: has the player killed all the alien invaders?\n    if ( this.aliens.countActive() === 0 ) {\n\n        // Award a bonus for winning.\n        this.score += 1000;\n        this.scoreText.setText( this.scorePrefix + this.score );\n\n        // Handle Game Over.\n        this.handleGameOver( true );\n    }\n  }\n}\n\nhandlePlayerCollision( player, bullet ) {\n\n  // If both the player and bullet are active...\n  if ( player.active === true && bullet.active === true ) {\n\n      // Deactivate the bullet, and take it off the screen.\n      bullet.setActive( false ).setVisible( false );\n\n      // Get the first explosion, and activate it.\n      var explosion = this.explosions.get().setActive( true );\n\n      // Place the explosion on the screen, and play the animation.\n      explosion.setOrigin( 0.5, 0.5 );\n      explosion.x = player.x;\n      explosion.y = player.y;\n      explosion.play( 'explode' );\n\n      this.removeLife();\n\n      // Game Over condition: has the player lost all their lives?\n      if ( this.playerLives.countActive()  this.lastAlienBulletTime && !this.isGameOver ) {\n      this.fireEnemyBullet( this.player, time, this );\n    }\n}\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScores\n                            \n                            \n                                postScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScores\n                        \n                        \n                    \n                \n            \n            \n                \ngetScores()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postScore\n                        \n                        \n                    \n                \n            \n            \n                \npostScore(scr: Score)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scr\n                                    \n                                                Score\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Score } from '../model/score';\n\n@Injectable()\n/**Service responsible for making calls to the User Microservice. For more information see https://app.swaggerhub.com/apis/ltoedt/ASE/0.1*/\nexport class UserService {\n  url = \"\"\n\n  constructor(private http: HttpClient) { }\n\n  getScores(){\n    return this.http.get(this.url + \":8081\" + \"/api/scores\");\n  }\n\n  postScore(scr: Score){\n    const bodyString = JSON.stringify(scr);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post(this.url + \":8081\" + \"/api/scores/score\", bodyString, httpOptions);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                dist/org-uzh-ase-frontend/assets/title_different_fonts.ts\n            \n            variable\n            titles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/answer/answer.component.ts\n            \n            component\n            AnswerComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                80 %\n                (16/20)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            Level\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/game/game.component.ts\n            \n            component\n            GameComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/leaderboard/leaderboard.component.ts\n            \n            component\n            LeaderboardComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/model/movie.ts\n            \n            class\n            Movie\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/model/quiz.ts\n            \n            class\n            Quiz\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/model/score.ts\n            \n            class\n            Score\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/option/option.component.ts\n            \n            component\n            OptionComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/phaser/Bullet.ts\n            \n            class\n            Bullet\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/phaser/CONFIG.ts\n            \n            variable\n            CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/phaser/phaser.component.ts\n            \n            component\n            PhaserComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/phaser/phaser.component.ts\n            \n            class\n            SpaceScene\n            \n                2 %\n                (1/38)\n            \n        \n        \n            \n                \n                src/app/question/question.component.ts\n            \n            component\n            QuestionComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/quiz/quiz.component.ts\n            \n            component\n            QuizComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/services/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/space/space.component.ts\n            \n            component\n            SpaceComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/assets/title_different_fonts.ts\n            \n            variable\n            titles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/schematics : ^9.1.1\n        \n            @angular/animations : ^9.1.4\n        \n            @angular/cdk : ^9.2.2\n        \n            @angular/common : ~9.1.2\n        \n            @angular/compiler : ~9.1.2\n        \n            @angular/core : ~9.1.2\n        \n            @angular/forms : ~9.1.2\n        \n            @angular/material : ^9.2.2\n        \n            @angular/platform-browser : ~9.1.2\n        \n            @angular/platform-browser-dynamic : ~9.1.2\n        \n            @angular/router : ~9.1.2\n        \n            phaser : ^3.22.0\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nThe Very Stressful Movie Quiz - Frontend\nThis project was generated with Angular CLI version 9.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. \nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAnswerComponent\n\nAnswerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnswerComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nLeaderboardComponent\n\nLeaderboardComponent\n\nAppModule -->\n\nLeaderboardComponent->AppModule\n\n\n\n\n\nOptionComponent\n\nOptionComponent\n\nAppModule -->\n\nOptionComponent->AppModule\n\n\n\n\n\nPhaserComponent\n\nPhaserComponent\n\nAppModule -->\n\nPhaserComponent->AppModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\nAppModule -->\n\nQuestionComponent->AppModule\n\n\n\n\n\nQuizComponent\n\nQuizComponent\n\nAppModule -->\n\nQuizComponent->AppModule\n\n\n\n\n\nSpaceComponent\n\nSpaceComponent\n\nAppModule -->\n\nSpaceComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGameService\n\nGameService\n\nAppModule -->\n\nGameService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONFIG   (src/.../CONFIG.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            titles   (src/.../title_different_fonts.ts)\n                        \n                        \n                            titles   (dist/.../title_different_fonts.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/phaser/CONFIG.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: Phaser.AUTO,\n    height: 600,\n    width: 800,\n    backgroundColor: '#222222',\n    parent: 'phaser-game',\n    physics: {\n      default: 'arcade'\n    }\n  }\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/assets/title_different_fonts.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            titles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    \"https://fontmeme.com/permalink/200502/f942bcee948945d316eaa6aa7c5ac164.png\",\n    \"https://fontmeme.com/permalink/200502/9642e6bba3e4283aa02026d7bde77b61.png\",\n    \"https://fontmeme.com/permalink/200502/436d381ae30b32efebc53b88718b5cbf.png\",\n    \"https://fontmeme.com/permalink/200502/9bd35ed7a3803b4672e44235cbe7e1c5.png\",\n\"https://fontmeme.com/permalink/200502/f2ab02732835c99192b13d83d731ffd5.png\",\n\"https://fontmeme.com/permalink/200502/a4354e21bfbf3e0505ca35f4e0f910cd.png\",\n\"https://fontmeme.com/permalink/200502/91420d4541314a1e31b2d2cff5033c8f.png\",\n\"https://fontmeme.com/permalink/200502/8b02e5dd705dab160fa15443bc796bf0.png\",\n\"https://fontmeme.com/permalink/200502/8b02e5dd705dab160fa15443bc796bf0.png\",\n\"https://fontmeme.com/permalink/200502/f9873a948acd1311370868fdd30c32d9.png\",\n\"https://fontmeme.com/permalink/200502/13510182228aaf8bfd0080b9b07aa847.png\",\n\"https://fontmeme.com/permalink/200502/0548c6ac6e9e71476a6def5f848ed46a.png\",\n\"https://fontmeme.com/permalink/200502/e0a48641192dd5da576842bfed0ae5ba.png\",\n\"https://fontmeme.com/permalink/200502/5f9fe2982c84efdab49ac9750e669df2.png\",\n\"https://fontmeme.com/permalink/200502/61d59ef0a950e1e4a4fc0eba3140c782.png\",\n\"https://fontmeme.com/permalink/200502/e1b3cee591331d2549177a7f74410989.png\",\n\"https://fontmeme.com/permalink/200502/fc80be6eb65d38b20b64936f18b95d2c.png\",\n\"https://fontmeme.com/permalink/200502/2b6543751702e1acdae3fea32ecf8787.png\",\n\"https://fontmeme.com/permalink/200502/c103175208bd4b37a973b3299a053117.png\",\n\"https://fontmeme.com/permalink/200502/c63d389110d441c7a781f436e808026b.png\",\n\"https://fontmeme.com/permalink/200502/db10fddba18a6f6974628101313dd99e.png\",\n\"https://fontmeme.com/permalink/200502/41bdb4608e93f26053a725424d295e15.png\",\n\"https://fontmeme.com/permalink/200502/c229afcc0f0c1ed5a22fe741494be355.png\",\n\"https://fontmeme.com/permalink/200502/fe2db9f7d19ad03280cbc1e34ad09359.png\",\n\"https://fontmeme.com/permalink/200502/03cd29494dc96b7c325287a47fc194c4.png\",\n\"https://fontmeme.com/permalink/200502/513cd0cecbbfaa4a7c0c95a07e08e5e1.png\",\n\"https://fontmeme.com/permalink/200502/b497ddc60697cc683e4d2351793e1bf6.png\",\n\"https://fontmeme.com/permalink/200502/9e3f0501fc68019142d7af77efe0699d.png\",\n\"https://fontmeme.com/permalink/200502/d97dbd2d8aee97d92b567b7626370f51.png\",\n\"https://fontmeme.com/permalink/200502/25ea63f82bc378310bb4f73097eaa398.png\",\n\"https://fontmeme.com/permalink/200502/58432f1e3afbf5a3e8ed93b96d8ccecd.png\",\n\"https://fontmeme.com/permalink/200502/f81b906854b10639d2b3ce7088adc18a.png\",\n\"https://fontmeme.com/permalink/200502/cdda963cf2ce109583f3e12cb468fe76.png\",\n\"https://fontmeme.com/permalink/200502/666a2d5f6d813bd7d5b9abd04e2d24e5.png\",\n\"https://fontmeme.com/permalink/200502/fad440f388348a1215fdf8bc57f250f3.png\",\n\"https://fontmeme.com/permalink/200502/45fd7e599d32e4cfdb58e9377010b576.png\",\n\"https://fontmeme.com/permalink/200502/dd2f8a5dfdb277ac2cc24ed69b21585a.png\",\n\"https://fontmeme.com/permalink/200502/d5a4b59d652482242996e0d4cece7d7d.png\",\n\"https://fontmeme.com/permalink/200502/3641c1af46d1215a823278b366c28fc3.png\",\n\"https://fontmeme.com/permalink/200502/60316d1e125cc7a68459989fadcec0a7.png\",\n\"https://fontmeme.com/permalink/200502/af8abeabf1d9740c4dc466a29ab666bb.png\",\n\"https://fontmeme.com/permalink/200502/c1b4689d5a203532e8c91e70574aa239.png\",\n\"https://fontmeme.com/permalink/200502/ac898a46eb9e0781db38bd2cccd34d5c.png\",\n\"https://fontmeme.com/permalink/200502/9c2ca934a98ec57c6890f3ecd1b68510.png\",\n\"https://fontmeme.com/permalink/200502/2b747f4817c73b774deac3ea79982d0f.png\",\n\"https://fontmeme.com/permalink/200502/2ca5220b6be7929fd523c3d91e9648c5.png\",\n\"https://fontmeme.com/permalink/200502/2ca5220b6be7929fd523c3d91e9648c5.png\",\n\"https://fontmeme.com/permalink/200502/ddf911905cdf2a2d890244a5cdd2ef9b.png\",\n\"https://fontmeme.com/permalink/200502/0110e662d342513460c0b27db029f92d.png\",\n\"https://fontmeme.com/permalink/200502/0c2cf8e9e6f360c42c12b15622c95657.png\"\n]\n                        \n                    \n\n\n            \n        \n\n    dist/org-uzh-ase-frontend/assets/title_different_fonts.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            titles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    \"https://fontmeme.com/permalink/200502/f942bcee948945d316eaa6aa7c5ac164.png\",\n    \"https://fontmeme.com/permalink/200502/9642e6bba3e4283aa02026d7bde77b61.png\",\n    \"https://fontmeme.com/permalink/200502/436d381ae30b32efebc53b88718b5cbf.png\",\n    \"https://fontmeme.com/permalink/200502/9bd35ed7a3803b4672e44235cbe7e1c5.png\",\n\"https://fontmeme.com/permalink/200502/f2ab02732835c99192b13d83d731ffd5.png\",\n\"https://fontmeme.com/permalink/200502/a4354e21bfbf3e0505ca35f4e0f910cd.png\",\n\"https://fontmeme.com/permalink/200502/91420d4541314a1e31b2d2cff5033c8f.png\",\n\"https://fontmeme.com/permalink/200502/8b02e5dd705dab160fa15443bc796bf0.png\",\n\"https://fontmeme.com/permalink/200502/8b02e5dd705dab160fa15443bc796bf0.png\",\n\"https://fontmeme.com/permalink/200502/f9873a948acd1311370868fdd30c32d9.png\",\n\"https://fontmeme.com/permalink/200502/13510182228aaf8bfd0080b9b07aa847.png\",\n\"https://fontmeme.com/permalink/200502/0548c6ac6e9e71476a6def5f848ed46a.png\",\n\"https://fontmeme.com/permalink/200502/e0a48641192dd5da576842bfed0ae5ba.png\",\n\"https://fontmeme.com/permalink/200502/5f9fe2982c84efdab49ac9750e669df2.png\",\n\"https://fontmeme.com/permalink/200502/61d59ef0a950e1e4a4fc0eba3140c782.png\",\n\"https://fontmeme.com/permalink/200502/e1b3cee591331d2549177a7f74410989.png\",\n\"https://fontmeme.com/permalink/200502/fc80be6eb65d38b20b64936f18b95d2c.png\",\n\"https://fontmeme.com/permalink/200502/2b6543751702e1acdae3fea32ecf8787.png\",\n\"https://fontmeme.com/permalink/200502/c103175208bd4b37a973b3299a053117.png\",\n\"https://fontmeme.com/permalink/200502/c63d389110d441c7a781f436e808026b.png\",\n\"https://fontmeme.com/permalink/200502/db10fddba18a6f6974628101313dd99e.png\",\n\"https://fontmeme.com/permalink/200502/41bdb4608e93f26053a725424d295e15.png\",\n\"https://fontmeme.com/permalink/200502/c229afcc0f0c1ed5a22fe741494be355.png\",\n\"https://fontmeme.com/permalink/200502/fe2db9f7d19ad03280cbc1e34ad09359.png\",\n\"https://fontmeme.com/permalink/200502/03cd29494dc96b7c325287a47fc194c4.png\",\n\"https://fontmeme.com/permalink/200502/513cd0cecbbfaa4a7c0c95a07e08e5e1.png\",\n\"https://fontmeme.com/permalink/200502/b497ddc60697cc683e4d2351793e1bf6.png\",\n\"https://fontmeme.com/permalink/200502/9e3f0501fc68019142d7af77efe0699d.png\",\n\"https://fontmeme.com/permalink/200502/d97dbd2d8aee97d92b567b7626370f51.png\",\n\"https://fontmeme.com/permalink/200502/25ea63f82bc378310bb4f73097eaa398.png\",\n\"https://fontmeme.com/permalink/200502/58432f1e3afbf5a3e8ed93b96d8ccecd.png\",\n\"https://fontmeme.com/permalink/200502/f81b906854b10639d2b3ce7088adc18a.png\",\n\"https://fontmeme.com/permalink/200502/cdda963cf2ce109583f3e12cb468fe76.png\",\n\"https://fontmeme.com/permalink/200502/666a2d5f6d813bd7d5b9abd04e2d24e5.png\",\n\"https://fontmeme.com/permalink/200502/fad440f388348a1215fdf8bc57f250f3.png\",\n\"https://fontmeme.com/permalink/200502/45fd7e599d32e4cfdb58e9377010b576.png\",\n\"https://fontmeme.com/permalink/200502/dd2f8a5dfdb277ac2cc24ed69b21585a.png\",\n\"https://fontmeme.com/permalink/200502/d5a4b59d652482242996e0d4cece7d7d.png\",\n\"https://fontmeme.com/permalink/200502/3641c1af46d1215a823278b366c28fc3.png\",\n\"https://fontmeme.com/permalink/200502/60316d1e125cc7a68459989fadcec0a7.png\",\n\"https://fontmeme.com/permalink/200502/af8abeabf1d9740c4dc466a29ab666bb.png\",\n\"https://fontmeme.com/permalink/200502/c1b4689d5a203532e8c91e70574aa239.png\",\n\"https://fontmeme.com/permalink/200502/ac898a46eb9e0781db38bd2cccd34d5c.png\",\n\"https://fontmeme.com/permalink/200502/9c2ca934a98ec57c6890f3ecd1b68510.png\",\n\"https://fontmeme.com/permalink/200502/2b747f4817c73b774deac3ea79982d0f.png\",\n\"https://fontmeme.com/permalink/200502/2ca5220b6be7929fd523c3d91e9648c5.png\",\n\"https://fontmeme.com/permalink/200502/2ca5220b6be7929fd523c3d91e9648c5.png\",\n\"https://fontmeme.com/permalink/200502/ddf911905cdf2a2d890244a5cdd2ef9b.png\",\n\"https://fontmeme.com/permalink/200502/0110e662d342513460c0b27db029f92d.png\",\n\"https://fontmeme.com/permalink/200502/0c2cf8e9e6f360c42c12b15622c95657.png\"\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
