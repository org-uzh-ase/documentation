var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AnswerComponent.html",[0,0.27,1,0.746]],["body/components/AnswerComponent.html",[0,0.394,1,1.184,2,1.262,3,0.283,4,0.283,5,0.983,6,0.983,7,0.983,8,0.983,9,0.24,10,2.196,11,1.145,12,1.329,13,3.105,14,0.983,15,1.734,16,1.571,17,2.598,18,1.145,19,4.37,20,1.145,21,3.765,22,0.283,23,0.847,24,2.675,25,3.376,26,1.445,27,5.015,28,4.752,29,1.879,30,2.73,31,4.139,32,1.879,33,3.344,34,0.702,35,0.893,36,3.765,37,0.587,38,0.039,39,1.145,40,2.661,41,2.352,42,2.729,43,1.532,44,2.661,45,2.675,46,1.25,47,2.139,48,2.094,49,1.25,50,3.765,51,2.675,52,2.73,53,2.661,54,3.108,55,1.695,56,0.847,57,0.859,58,0.847,59,1.328,60,1.127,61,1.445,62,2.661,63,2.661,64,3.765,65,2.661,66,3.765,67,4.37,68,3.885,69,2.661,70,2.094,71,3.765,72,3.765,73,2.675,74,1.465,75,1.391,76,3.765,77,3.765,78,2.352,79,0.883,80,1.534,81,3.765,82,0.605,83,2.181,84,1.695,85,0.481,86,2.196,87,1.662,88,2.661,89,2.196,90,1.084,91,0.283,92,0.016,93,1.262,94,0.892,95,3.765,96,2.661,97,1.525,98,4.752,99,2.661,100,4.37,101,3.765,102,2.661,103,0.892,104,2.661,105,2.661,106,1.592,107,2.661,108,2.661,109,2.661,110,1.89,111,3.765,112,3.765,113,1.198,114,2.196,115,1.662,116,1.662,117,1.534,118,2.139,119,2.43,120,1.879,121,1.534,122,2.043,123,1.78,124,1.879,125,2.661,126,2.196,127,2.196,128,1.328,129,1.89,130,2.661,131,0.809,132,1.391,133,0.983,134,0.983,135,0.983,136,0.598,137,0.983,138,0.663,139,0.983,140,0.663,141,0.983,142,0.983,143,0.598,144,0.983,145,0.663,146,0.983,147,0.983,148,0.598,149,0.983,150,0.983,151,0.983,152,0.05,153,0.071,154,0.05]],["title/components/AppComponent.html",[0,0.27,136,0.673]],["body/components/AppComponent.html",[0,0.31,1,0.357,2,0.786,3,0.153,4,0.153,5,0.529,6,0.529,7,0.529,8,0.529,9,0.129,11,0.713,12,0.905,14,0.529,15,1.486,16,1.347,17,1.17,18,0.713,20,0.713,22,0.153,23,0.527,26,1.045,34,0.478,35,0.873,37,0.554,38,0.038,39,1.237,42,1.715,43,1.456,46,0.357,49,0.357,56,0.322,57,0.538,58,0.322,59,1.17,60,0.966,61,1.306,68,1.666,73,1.018,74,1.364,75,0.866,79,0.964,80,0.955,82,0.478,85,0.259,91,0.25,92,0.009,93,0.997,97,1.045,103,1.771,106,0.786,117,2.099,118,2.245,119,0.797,120,2.381,121,1.89,122,2.032,123,1.826,124,1.715,128,2.439,131,0.436,132,0.866,133,0.529,134,0.529,135,0.529,136,0.773,137,0.529,138,0.357,139,0.529,140,0.357,141,0.529,142,0.529,143,0.322,144,0.529,145,0.357,146,0.529,147,0.529,148,0.322,149,1.099,150,0.529,151,0.529,152,0.027,153,0.044,154,0.027,155,1.018,156,1.666,157,2.456,158,1.935,159,0.424,160,3.129,161,1.547,162,2.427,163,2.456,164,2.456,165,2.456,166,3.301,167,2.368,168,2.456,169,2.694,170,3.129,171,2.838,172,2.838,173,3.36,174,2.838,175,1.304,176,3.129,177,1.433,178,1.433,179,3.939,180,3.185,181,3.948,182,2.579,183,1.433,184,1.433,185,1.51,186,1.433,187,1.935,188,2.389,189,1.935,190,1.433,191,2.147,192,1.935,193,3.36,194,2.838,195,1.465,196,0.997,197,1.433,198,0.955,199,1.304,200,1.433,201,1.912,202,1.944,203,1.973,204,1.433,205,1.935,206,1.935,207,1.935,208,1.826,209,1.433,210,2.542,211,3.36,212,1.433,213,3.546,214,1.935,215,1.212,216,1.935,217,2.838,218,1.935,219,1.433,220,1.666,221,2.838,222,2.442,223,1.433,224,1.666,225,1.935,226,1.304,227,2.838,228,1.935,229,1.433,230,2.892,231,2.892,232,1.433,233,1.433,234,2.838,235,1.935,236,1.935,237,1.935,238,1.433,239,1.433,240,1.666,241,1.935,242,2.892,243,1.152,244,1.715,245,2.031,246,1.433,247,1.183,248,1.018,249,0.895,250,1.304,251,1.183,252,0.797,253,0.797,254,0.797,255,1.183,256,1.935,257,1.183,258,1.183,259,1.183,260,1.183,261,1.183,262,1.183,263,1.183,264,2.456,265,1.935,266,2.456,267,1.018,268,1.183,269,1.183,270,2.345,271,2.345,272,2.345,273,2.345,274,2.345,275,3.791,276,2.345,277,0.866,278,2.442,279,3.129,280,2.345,281,2.442,282,3.438,283,1.666,284,4.482,285,2.838,286,2.345,287,2.345,288,2.345,289,2.345,290,2.345,291,1.666,292,2.345,293,2.838,294,2.031,295,2.345,296,3.7,297,1.666,298,1.666,299,2.345,300,1.935,301,2.345,302,1.666,303,1.935,304,1.935,305,2.345,306,2.345,307,2.345,308,2.345,309,1.465,310,2.345,311,2.345,312,2.838,313,2.345,314,2.345,315,1.666,316,2.345,317,1.666,318,1.912,319,2.442,320,2.345,321,1.666,322,1.666,323,1.935,324,2.345,325,2.345,326,2.345,327,1.666,328,1.465,329,1.935,330,0.955,331,2.345,332,1.935,333,1.666,334,2.345,335,1.433,336,1.892,337,1.485,338,1.018,339,1.465,340,3.296,341,1.433,342,0.895,343,2.898,344,2.345,345,1.935,346,1.433,347,1.433,348,2.147,349,2.114,350,1.183,351,0.645,352,2.542,353,1.018,354,1.018,355,1.433,356,1.465,357,1.935,358,2.975,359,2.492,360,3.053,361,2.237,362,1.433,363,2.456,364,1.666,365,1.433,366,1.433,367,1.433,368,1.433,369,2.683,370,2.345,371,1.912,372,1.654,373,2.838,374,2.345,375,1.666,376,1.935,377,1.433,378,1.935,379,1.666,380,1.666,381,2.114,382,1.935,383,2.345,384,1.433,385,1.433,386,1.183,387,2.345,388,1.018,389,2.345,390,1.465,391,1.433,392,1.183,393,1.433,394,1.433,395,1.018,396,1.433,397,1.433,398,2.345]],["title/modules/AppModule.html",[399,1.868,400,1.868]],["body/modules/AppModule.html",[1,1.379,3,0.346,4,0.346,9,0.293,16,0.895,38,0.039,46,1.379,49,1.379,82,0.977,85,0.587,91,0.346,92,0.02,131,0.987,136,1.338,138,1.379,140,1.379,143,1.244,145,1.379,148,1.244,152,0.061,153,0.081,154,0.061,330,1.322,399,2.028,400,3.89,401,1.805,402,2.028,403,4.003,404,4.003,405,4.003,406,2.307,407,2.68,408,2.68,409,2.68,410,2.68,411,2.68,412,3.076,413,2.761,414,2.761,415,3.563,416,1.805,417,3.247,418,3.563,419,4.317,420,3.563,421,2.028,422,4.317,423,2.307,424,4.317,425,2.68,426,3.563,427,3.247,428,3.247,429,2.68,430,3.247,431,3.247,432,3.247,433,3.247,434,3.247,435,2.68,436,2.68,437,2.68,438,4.317,439,3.247,440,3.247]],["title/classes/AppPage.html",[92,0.018,441,2.125]],["body/classes/AppPage.html",[3,0.468,4,0.468,9,0.397,22,0.468,23,1.175,35,0.839,38,0.038,60,1.175,82,0.706,91,0.468,92,0.027,106,1.473,113,2.351,121,1.79,152,0.083,153,0.098,154,0.083,156,3.122,421,2.745,441,3.711,442,1.978,443,3.627,444,5.768,445,5.768,446,4.394,447,5.976,448,4.394,449,4.394,450,4.394,451,4.394,452,4.394]],["title/modules/AppRoutingModule.html",[399,1.868,412,1.663]],["body/modules/AppRoutingModule.html",[3,0.486,4,0.486,9,0.412,38,0.038,82,0.857,85,0.824,91,0.486,92,0.028,152,0.086,153,0.1,154,0.086,401,2.536,406,3.24,412,2.969,418,3.764,426,4.407,453,4.56,454,4.56,455,4.022,456,5.339,457,3.764,458,3.764,459,4.56]],["title/classes/Bullet.html",[92,0.018,460,1.663]],["body/classes/Bullet.html",[3,0.3,4,0.3,9,0.254,22,0.3,23,0.881,34,0.452,35,0.905,37,0.348,38,0.039,56,1.013,57,0.814,58,1.013,60,0.881,61,1.192,80,1.147,91,0.3,92,0.017,97,1.192,103,1.859,152,0.053,153,0.074,154,0.053,159,0.708,182,1.566,185,0.776,208,1.596,226,2.179,294,2.249,309,1.76,312,3.235,350,2.325,361,1.406,371,3.025,416,1.566,442,1.268,460,3.025,461,2.325,462,5.122,463,4.507,464,5.547,465,4.507,466,4.507,467,2.785,468,2.815,469,3.919,470,3.941,471,3.941,472,3.767,473,3.919,474,3.919,475,2.817,476,2.817,477,2.817,478,2.817,479,2.817,480,3.919,481,3.202,482,2.817,483,2.817,484,3.235,485,4.377,486,2.817,487,2.002,488,2.817,489,2.817,490,2.817,491,2.179,492,2.325,493,2.817,494,2.817,495,4.507,496,2.002,497,2.002,498,4.873,499,2.817,500,2.002,501,4.873,502,2.817,503,5.122,504,5.122,505,3.919,506,4.873,507,4.873,508,4.873,509,3.639,510,2.817,511,3.919,512,2.448,513,2.325,514,2.817,515,2.002,516,2.817,517,2.817,518,3.919,519,3.919,520,2.817,521,2.817,522,1.147,523,2.179,524,2.817,525,3.462,526,3.919,527,3.919,528,3.919,529,3.919,530,3.919,531,3.919,532,2.817,533,3.919,534,2.817,535,2.817,536,2.817,537,2.817,538,2.817,539,3.919,540,2.179,541,2.817,542,2.002,543,2.002,544,1.566,545,2.002,546,1.76,547,2.817,548,2.817,549,2.817,550,2.817]],["title/components/GameComponent.html",[0,0.27,138,0.746]],["body/components/GameComponent.html",[0,0.363,1,0.573,2,1.135,3,0.245,4,0.245,5,0.849,6,0.849,7,0.849,8,0.849,9,0.207,11,1.03,12,1.223,14,0.849,15,1.682,16,1.525,17,2.215,18,1.03,20,1.03,22,0.245,23,0.762,24,2.407,26,1.35,29,1.691,30,2.513,32,1.691,33,1.436,34,0.646,35,0.916,37,0.674,38,0.038,42,2.215,43,1.223,45,2.407,46,0.573,47,1.998,48,1.884,49,0.845,51,1.633,52,2.116,54,2.797,55,1.035,56,0.905,57,0.855,58,0.905,59,1.691,60,1.114,61,1.506,73,1.633,74,0.77,75,1.486,79,1.035,82,0.646,83,1.691,84,1.525,85,0.415,90,1.639,91,0.245,92,0.014,93,1.348,94,0.77,97,1.439,103,0.77,106,1.135,110,3.155,115,1.436,117,1.639,118,2.131,120,2.008,121,1.808,122,1.639,123,0.936,124,1.147,128,2.215,129,1.633,131,0.699,132,1.251,133,0.849,134,0.849,135,0.849,136,1.064,137,0.849,138,1.107,139,0.849,140,0.573,141,0.849,142,0.849,143,0.762,144,0.849,145,0.573,146,0.849,147,0.849,148,1.114,149,1.251,150,0.849,151,0.849,152,0.043,153,0.064,154,0.043,159,0.612,161,1.811,162,2.229,175,1.884,185,1.503,188,2.237,195,1.436,196,1.876,198,1.639,201,1.278,224,3.363,243,1.798,248,1.633,249,1.436,278,1.633,285,3.321,293,2.797,294,2.362,296,3.321,300,1.898,302,1.633,303,1.898,304,1.898,318,1.278,328,1.436,329,1.898,330,1.639,336,2.008,337,2.008,338,1.633,339,2.513,340,2.859,342,1.436,343,2.116,345,1.898,348,1.436,351,1.525,352,2.116,353,2.407,356,1.436,363,1.898,369,1.436,371,1.278,372,1.278,381,3.363,429,1.898,468,2.116,485,1.898,522,2.017,523,1.884,546,2.773,551,1.898,552,4.024,553,3.388,554,3.321,555,4.024,556,4.024,557,3.388,558,4.44,559,2.513,560,3.388,561,2.299,562,2.299,563,3.388,564,2.299,565,2.299,566,4.44,567,2.299,568,2.299,569,2.797,570,2.299,571,2.299,572,2.299,573,2.299,574,2.299,575,2.299,576,2.299,577,5.121,578,3.388,579,3.388,580,2.299,581,2.299,582,1.898,583,3.388,584,4.44,585,2.299,586,2.407,587,3.388,588,2.299,589,3.388,590,3.388,591,4.44,592,2.299,593,2.299,594,4.024,595,3.388,596,1.898,597,0.936,598,1.633,599,1.898,600,4.024,601,2.299,602,2.299,603,2.299,604,2.299,605,2.299,606,2.299,607,2.299,608,2.299,609,2.299,610,2.299,611,1.633,612,2.299]],["title/injectables/GameService.html",[413,1.493,613,1.663]],["body/injectables/GameService.html",[3,0.403,4,0.403,9,0.341,22,0.403,23,1.071,34,0.607,35,0.838,37,0.645,38,0.039,39,1.149,55,1.702,56,1.071,57,0.861,58,1.071,60,0.85,79,1.054,80,1.54,82,0.838,85,0.683,91,0.403,92,0.023,113,1.702,152,0.071,153,0.09,154,0.071,159,0.861,162,2.348,185,1.313,188,2.649,191,2.361,196,1.748,202,1.54,203,1.396,253,2.649,277,1.396,413,2.377,423,2.686,497,3.385,522,1.94,613,2.649,614,2.686,615,3.121,616,3.139,617,3.932,618,3.121,619,4.52,620,4.764,621,3.385,622,4.764,623,3.78,624,3.932,625,4.764,626,4.764,627,3.385,628,3.78,629,3.78,630,3.121,631,3.121,632,2.361,633,1.886,634,2.361,635,3.121,636,3.121,637,2.361,638,3.121,639,3.121,640,3.78,641,3.78,642,3.78,643,3.78]],["title/components/LeaderboardComponent.html",[0,0.27,140,0.746]],["body/components/LeaderboardComponent.html",[0,0.365,1,0.578,2,1.142,3,0.247,4,0.247,5,0.856,6,0.856,7,0.856,8,0.856,9,0.209,11,1.036,12,1.229,14,0.856,15,1.685,16,1.527,18,1.036,20,1.036,22,0.247,23,0.766,26,1.355,29,1.701,34,0.372,35,0.878,37,0.614,38,0.038,46,0.578,49,0.578,52,3.102,56,0.521,57,0.73,58,0.521,60,0.909,61,1.355,74,1.355,78,2.129,82,0.649,83,2.224,85,0.419,91,0.247,92,0.014,94,1.142,97,1.561,103,1.721,106,1.142,116,1.448,117,1.815,118,2.138,120,2.017,121,1.388,122,1.935,123,1.935,124,2.017,128,2.478,131,0.705,132,1.259,133,0.856,134,0.856,135,0.856,136,0.521,137,0.856,138,0.578,139,0.856,140,1.111,141,0.856,142,0.856,143,0.521,144,0.856,145,0.578,146,0.856,147,0.856,148,0.521,149,1.259,150,0.856,151,0.856,152,0.044,153,0.064,154,0.044,159,0.616,161,1.819,169,2.872,180,2.421,181,2.421,182,1.895,185,1.228,196,1.142,198,1.388,202,0.944,203,0.856,208,0.944,210,3.102,215,0.944,222,2.421,242,2.421,243,1.989,244,1.701,245,1.701,253,1.895,254,2.248,267,1.646,336,2.017,337,2.017,338,1.646,339,2.525,340,2.872,342,1.448,343,3.102,349,1.646,351,2.235,352,2.525,353,2.421,356,2.525,357,1.913,359,2.248,360,2.784,361,2.224,369,2.967,371,1.289,372,1.289,373,1.913,375,1.646,376,1.913,378,1.913,381,3.648,386,1.913,388,3.938,390,1.448,392,2.813,414,2.478,436,1.913,522,2.023,544,1.289,597,0.944,611,1.646,616,2.248,632,1.448,633,2.478,637,1.448,644,1.913,645,4.042,646,3.408,647,4.042,648,4.749,649,4.749,650,4.457,651,4.457,652,2.317,653,3.408,654,2.317,655,2.317,656,2.317,657,4.238,658,3.743,659,2.317,660,2.317,661,3.408,662,2.317,663,3.408,664,3.408,665,2.317,666,2.317,667,2.813,668,3.408,669,3.408,670,3.408,671,2.421,672,1.913,673,2.317,674,3.408,675,3.408,676,3.408,677,1.913,678,1.913,679,1.913,680,1.913,681,1.913,682,1.913,683,1.913,684,1.913,685,1.913,686,1.913,687,2.317,688,2.317,689,2.317,690,2.317,691,2.317,692,2.317,693,3.408,694,3.408,695,3.408,696,3.408,697,1.913,698,2.317,699,2.317,700,3.408,701,2.317,702,1.646,703,2.813,704,2.317]],["title/interfaces/Level.html",[162,1.346,250,1.663]],["body/interfaces/Level.html",[0,0.411,3,0.306,4,0.306,9,0.26,11,0.875,12,1.209,15,0.875,16,0.793,18,0.875,20,0.875,22,0.306,26,0.875,34,0.462,37,0.492,38,0.039,39,1.569,43,1.355,59,1.436,68,2.044,74,1.527,75,1.063,79,0.804,82,0.732,85,0.52,91,0.424,92,0.018,93,1.527,103,1.333,117,1.857,136,0.647,152,0.054,153,0.075,154,0.054,155,2.044,156,2.044,157,2.375,158,2.375,159,0.719,160,3.283,161,1.295,162,2.579,163,2.375,164,2.375,165,2.375,166,3.224,167,2.847,168,2.375,169,2.044,170,2.375,171,2.375,172,2.375,173,3.283,174,2.375,176,2.375,179,4.26,180,3.493,181,4.112,182,2.734,185,1.508,187,2.375,188,2.87,189,2.375,191,2.484,192,2.375,193,3.762,194,3.283,195,1.797,196,0.964,198,1.172,199,1.6,201,2.534,202,1.172,203,2.137,205,2.375,206,2.375,207,2.375,208,2.174,210,2.847,211,3.762,213,4.516,214,2.375,215,1.172,216,2.375,217,2.375,218,2.375,220,2.044,221,4.26,222,3.667,224,2.044,225,2.375,226,1.6,227,3.283,228,2.375,230,2.826,231,2.826,234,3.283,235,2.375,236,2.375,237,2.375,240,2.044,241,2.375,242,2.044,243,0.964,244,1.436,245,2.575,247,2.375,248,2.044,249,1.797,250,2.534,251,3.283,252,2.211,253,2.211,254,1.6,255,2.375,256,3.283,257,2.375,258,2.375,259,2.375,260,2.375,261,2.375,262,2.375,263,2.375,264,3.762,265,3.283,266,3.762,267,2.044,268,2.375,269,2.375,277,1.063,705,2.877]],["title/classes/Movie.html",[43,0.824,92,0.018]],["body/classes/Movie.html",[3,0.424,4,0.424,9,0.36,22,0.424,34,0.64,35,0.896,37,0.69,38,0.038,39,1.88,41,3.764,43,1.661,56,0.896,57,0.72,58,0.896,70,2.215,79,0.805,90,1.623,91,0.424,92,0.025,152,0.075,153,0.093,154,0.075,159,0.889,166,3.764,226,2.737,277,1.471,442,1.793,616,2.737,706,3.288,707,3.983,708,1.988,709,5.918,710,4.922,711,4.922,712,4.922,713,3.983,714,3.983,715,3.983,716,3.983,717,3.983]],["title/components/OptionComponent.html",[0,0.27,49,0.746]],["body/components/OptionComponent.html",[0,0.462,1,1.277,2,1.313,3,0.3,4,0.3,5,1.04,6,1.04,7,1.04,8,1.04,9,0.254,11,1.192,12,1.37,13,3.202,14,1.04,15,1.753,16,1.589,17,2.556,18,1.192,20,1.192,22,0.3,23,0.881,25,3.462,26,1.482,29,1.956,30,2.815,32,1.956,33,3.398,34,0.724,35,0.891,37,0.602,38,0.038,39,1.37,41,3.199,42,2.768,43,1.615,46,0.702,47,2.193,48,2.179,49,1.322,55,1.764,57,0.708,60,1.013,61,1.37,70,2.71,75,1.448,79,0.911,82,0.629,83,2.249,84,1.764,85,0.509,86,2.325,91,0.3,92,0.028,93,1.51,94,0.944,97,1.482,106,1.313,115,1.76,116,3.312,117,1.147,118,2.029,119,2.179,120,1.406,121,1.147,122,1.596,123,1.147,124,1.406,127,3.235,131,0.857,132,1.448,133,1.04,134,1.04,135,1.04,136,0.633,137,1.04,138,0.702,139,1.04,140,0.702,141,1.04,142,1.04,143,0.633,144,1.04,145,0.702,146,1.04,147,1.04,148,0.633,149,1.04,150,1.04,151,1.04,152,0.053,153,0.074,154,0.053,159,0.708,166,2.448,202,1.147,203,1.04,302,2.785,323,2.325,336,1.956,337,1.956,339,2.448,342,2.448,360,1.76,369,2.448,371,1.566,372,1.566,379,2.002,380,2.002,540,2.179,597,1.596,667,2.325,708,1.956,718,2.325,719,4.507,720,3.919,721,5.122,722,4.873,723,3.919,724,2.817,725,2.817,726,3.919,727,2.817,728,3.919,729,2.817,730,2.817,731,2.817,732,3.919,733,3.919,734,3.235,735,3.919,736,3.919,737,3.919,738,2.325,739,2.817,740,4.507,741,2.817,742,2.817,743,2.817,744,2.817,745,3.919,746,3.919,747,3.919,748,3.919]],["title/components/PhaserComponent.html",[0,0.27,143,0.673]],["body/components/PhaserComponent.html",[0,0.269,1,0.359,2,0.789,3,0.153,4,0.153,5,0.532,6,0.532,7,0.532,8,0.532,9,0.13,11,0.715,12,0.907,14,0.532,15,1.488,16,1.349,18,0.715,20,0.715,22,0.153,23,0.529,26,1.048,32,1.174,34,0.479,35,0.721,37,0.47,38,0.039,46,0.359,47,1.551,49,0.359,55,0.648,56,0.324,57,0.539,58,0.324,60,0.671,61,1.048,74,1,75,1.273,78,1.864,79,0.475,80,0.586,82,0.553,84,1.059,85,0.26,90,0.958,91,0.153,92,0.014,93,0.482,94,0.789,97,1.488,103,1.809,106,0.789,113,0.648,122,0.586,123,0.586,131,0.438,132,0.869,133,0.532,134,0.532,135,0.532,136,0.324,137,0.532,138,0.359,139,0.532,140,0.359,141,0.532,142,0.532,143,0.775,144,0.532,145,0.359,146,0.532,147,0.532,148,0.671,149,0.532,150,0.532,151,0.532,152,0.027,153,0.044,154,0.027,159,0.425,161,1.343,175,1.308,185,1.565,196,1.273,198,0.958,199,2.497,201,1.659,203,0.532,208,2.101,215,0.958,243,1.602,244,1.72,245,2.834,252,0.801,254,0.801,281,1.023,283,1.672,294,2.318,298,1.023,309,2.902,315,1.672,317,1.023,318,1.659,319,2.449,321,1.672,322,1.023,327,2.449,328,2.373,330,1.216,333,1.672,336,0.718,337,0.718,351,0.648,354,1.672,359,1.659,361,0.718,364,1.023,390,0.899,395,1.023,416,1.308,460,2.777,467,2.12,468,1.47,470,1.023,471,2.12,472,1.023,481,1.023,487,1.023,491,1.917,496,2.7,500,2.12,509,2.449,512,0.899,515,1.023,522,2.217,523,2.777,525,1.023,540,0.801,542,1.672,543,2.898,544,1.659,545,1.023,546,0.899,559,2.153,586,1.023,597,0.586,598,2.898,634,0.899,671,1.672,702,2.12,749,1.023,750,2.463,751,1.942,752,2.688,753,2.463,754,2.353,755,1.942,756,1.44,757,1.942,758,1.44,759,1.44,760,1.672,761,1.942,762,1.942,763,1.44,764,1.942,765,1.942,766,1.942,767,1.44,768,1.44,769,1.942,770,1.188,771,1.188,772,1.188,773,1.47,774,1.188,775,1.188,776,1.188,777,1.188,778,1.188,779,1.188,780,1.188,781,3.706,782,1.188,783,1.188,784,1.188,785,1.188,786,1.188,787,1.942,788,1.942,789,1.188,790,1.188,791,1.188,792,1.188,793,1.188,794,1.188,795,1.188,796,1.188,797,1.188,798,1.188,799,1.188,800,1.188,801,1.188,802,1.188,803,1.188,804,1.188,805,1.188,806,1.188,807,1.188,808,1.188,809,1.188,810,1.942,811,1.942,812,1.188,813,1.188,814,1.188,815,1.188,816,1.188,817,1.188,818,1.188,819,1.188,820,1.188,821,1.188,822,3.367,823,1.942,824,2.845,825,1.942,826,1.942,827,1.942,828,1.942,829,1.188,830,1.942,831,1.942,832,1.942,833,3.553,834,2.463,835,1.942,836,2.463,837,1.188,838,1.188,839,1.188,840,1.188,841,1.942,842,1.188,843,1.188,844,1.188,845,1.188,846,1.188,847,1.942,848,1.188,849,1.188,850,1.942,851,2.463,852,1.942,853,1.942,854,1.188,855,1.942,856,1.188,857,1.188,858,1.942,859,1.942,860,1.023,861,2.463,862,1.188,863,1.188,864,1.188,865,1.188,866,3.553,867,1.188,868,1.188,869,2.463,870,1.942,871,1.188,872,1.942,873,1.188,874,1.188,875,1.942,876,1.188,877,1.188,878,1.188,879,1.188,880,1.188,881,1.188,882,1.188,883,1.188,884,1.023,885,1.188,886,1.188,887,1.188,888,1.188,889,1.188,890,1.188,891,1.188,892,1.188,893,1.942,894,2.845,895,2.845,896,2.845,897,2.463,898,1.188,899,3.367,900,1.023,901,1.188,902,1.942,903,1.942,904,1.942,905,1.942,906,1.188,907,1.188,908,1.942,909,1.942,910,1.942,911,1.188,912,1.942,913,2.463,914,2.845,915,1.188,916,1.188,917,1.188,918,1.942,919,2.463,920,1.942,921,1.188,922,1.942,923,1.188,924,1.942,925,1.188,926,1.942,927,1.188,928,1.188,929,1.942,930,1.188,931,1.188,932,1.942,933,1.188,934,1.188,935,1.188,936,1.188,937,1.188,938,1.023,939,1.188,940,1.942,941,1.188,942,1.188,943,1.942,944,1.023,945,1.188,946,1.188,947,1.188,948,1.188,949,1.188,950,1.188,951,1.188,952,1.942,953,1.942,954,1.942,955,1.942,956,1.188,957,1.188,958,1.188,959,1.188,960,1.942,961,1.942,962,1.188,963,1.188,964,1.188,965,1.188,966,1.188,967,1.188,968,2.463,969,2.463,970,1.188,971,1.188,972,1.188,973,1.188,974,1.188,975,1.188,976,1.188,977,1.188,978,1.188,979,1.188,980,1.188,981,1.942,982,2.463,983,1.942,984,1.942,985,1.942,986,1.942,987,1.942,988,1.188,989,1.942,990,1.188,991,1.942,992,1.188,993,1.188,994,1.942,995,1.188,996,1.188,997,1.188,998,1.188,999,1.188,1000,1.188,1001,1.188,1002,1.188,1003,1.188,1004,1.188,1005,1.188,1006,1.188,1007,1.188]],["title/components/QuestionComponent.html",[0,0.27,145,0.746]],["body/components/QuestionComponent.html",[0,0.404,1,0.969,2,1.303,3,0.297,4,0.297,5,1.029,6,1.029,7,1.029,8,1.029,9,0.251,11,1.183,12,1.362,13,3.184,14,1.029,15,1.749,16,1.585,18,1.183,20,1.183,22,0.297,23,0.875,25,3.446,26,1.474,29,1.941,34,0.72,35,0.871,37,0.554,38,0.038,39,1.607,43,1.235,45,2.763,46,0.695,49,0.695,57,0.703,60,1.007,61,1.362,74,0.934,75,1.436,82,0.447,83,1.941,85,0.503,87,1.74,90,1.975,91,0.297,92,0.017,93,1.303,97,1.607,106,1.303,115,1.74,116,1.74,117,1.584,118,2.378,119,2.492,120,2.236,121,1.584,122,1.825,123,1.825,124,1.941,126,2.3,128,1.941,131,0.847,132,1.436,133,1.029,134,1.029,135,1.029,136,0.626,137,1.029,138,1.117,139,1.029,140,0.695,141,1.029,142,1.029,143,0.626,144,1.029,145,1.209,146,1.029,147,1.029,148,0.626,149,1.029,150,1.029,151,1.029,152,0.052,153,0.073,154,0.052,159,0.703,277,2.174,278,1.98,279,2.3,318,1.549,343,3.029,348,1.74,351,1.751,352,2.43,356,2.43,359,1.549,360,2.43,361,1.39,372,1.549,375,1.98,379,1.98,380,1.98,540,2.163,597,1.975,611,3.625,734,4.003,884,3.754,900,3.754,1008,2.3,1009,3.211,1010,4.481,1011,3.89,1012,5.101,1013,5.101,1014,4.85,1015,3.89,1016,2.786,1017,2.786,1018,2.786,1019,2.786,1020,3.89,1021,5.284,1022,3.89,1023,2.786,1024,4.85,1025,4.85,1026,4.85,1027,3.89,1028,2.786,1029,3.89,1030,2.786,1031,2.786,1032,2.786,1033,2.786,1034,2.786,1035,2.786,1036,3.89,1037,2.786,1038,2.786,1039,3.89,1040,2.786,1041,2.786,1042,2.3,1043,3.89,1044,2.786,1045,2.786,1046,2.786,1047,2.3,1048,2.786]],["title/classes/Quiz.html",[79,0.604,92,0.018]],["body/classes/Quiz.html",[3,0.415,4,0.415,9,0.352,17,2.422,22,0.415,30,3.679,31,4.793,34,0.626,35,0.889,37,0.684,38,0.038,39,1.838,41,3.032,42,2.422,43,1.675,56,0.876,57,0.704,58,0.876,70,2.699,79,1.173,82,0.626,87,3.032,89,4.365,91,0.415,92,0.024,152,0.073,153,0.091,154,0.073,159,0.877,253,2.699,277,2.199,291,3.449,442,1.753,599,3.216,633,2.422,708,2.422,1042,3.216,1049,3.216,1050,4.854,1051,4.854,1052,3.896,1053,4.854,1054,4.854,1055,3.896,1056,3.896]],["title/components/QuizComponent.html",[0,0.27,46,0.746]],["body/components/QuizComponent.html",[0,0.43,1,0.668,2,1.597,3,0.285,4,0.285,5,0.989,6,0.989,7,0.989,8,0.989,9,0.242,11,1.15,12,1.334,14,0.989,15,1.736,16,1.574,17,2.189,18,1.15,20,1.15,22,0.285,23,0.851,24,2.688,26,1.449,29,1.888,32,1.888,33,2.74,34,0.43,35,0.88,37,0.622,38,0.039,42,1.888,43,1.209,46,1.188,47,2.145,48,2.104,49,0.668,51,2.688,52,2.977,56,0.986,57,0.908,58,0.986,59,1.337,60,1.072,61,1.334,74,1.268,75,1.397,79,1.202,82,0.704,83,1.888,84,1.703,85,0.484,90,1.091,91,0.285,92,0.016,93,0.898,94,1.268,97,1.694,106,1.268,113,1.974,114,2.212,117,1.091,118,2.145,119,2.104,131,0.815,132,1.397,133,0.989,134,0.989,135,0.989,136,0.602,137,0.989,138,1.093,139,0.989,140,0.668,141,0.989,142,0.989,143,0.602,144,0.989,145,0.668,146,0.989,147,0.989,148,0.602,149,0.989,150,0.989,151,0.989,152,0.05,153,0.071,154,0.05,159,0.684,162,2.263,182,2.104,185,1.209,188,2.104,196,1.268,198,1.541,208,1.541,215,1.541,226,2.104,291,3.387,297,2.688,332,2.212,413,2.604,435,2.212,522,1.942,544,1.49,597,1.091,616,2.796,617,3.935,621,1.904,632,1.674,633,1.888,637,1.674,677,2.212,678,2.212,679,2.212,680,2.212,681,2.212,682,2.212,683,2.212,684,2.212,685,2.212,686,2.212,708,2.378,1009,3.621,1047,3.123,1057,2.212,1058,4.387,1059,3.784,1060,3.784,1061,2.679,1062,3.784,1063,2.679,1064,2.679,1065,3.784,1066,3.784,1067,2.679,1068,3.784,1069,2.679,1070,3.123,1071,3.784,1072,3.784,1073,3.784,1074,2.679,1075,2.679,1076,3.784,1077,3.784,1078,2.679,1079,3.784,1080,4.387,1081,2.679,1082,2.679,1083,2.679,1084,2.679,1085,2.679,1086,2.679,1087,2.679,1088,2.679,1089,2.679,1090,2.679,1091,2.679,1092,2.679,1093,2.679]],["title/classes/Score.html",[92,0.018,243,1.002]],["body/classes/Score.html",[3,0.44,4,0.44,9,0.373,22,0.44,34,0.664,35,0.872,37,0.671,38,0.038,39,1.761,56,0.929,57,0.981,58,0.929,70,2.299,87,2.582,91,0.44,92,0.025,152,0.078,153,0.095,154,0.078,159,0.91,196,1.941,243,1.941,277,1.527,388,3.577,442,1.861,522,2.051,569,4.156,633,2.063,658,4.277,708,2.063,1094,3.412,1095,4.134,1096,5.964,1097,5.035,1098,5.035,1099,5.035,1100,4.134,1101,5.035,1102,4.134,1103,4.134]],["title/components/SpaceComponent.html",[0,0.27,148,0.673]],["body/components/SpaceComponent.html",[0,0.43,1,0.78,2,1.411,3,0.333,4,0.333,5,1.155,6,1.155,7,1.155,8,1.155,9,0.282,11,1.28,12,1.447,14,1.155,15,1.786,16,1.618,18,1.28,20,1.28,22,0.333,23,0.947,26,1.548,32,2.101,34,0.764,35,0.879,37,0.588,38,0.038,46,1.186,47,2.291,48,2.341,49,0.78,56,0.703,57,0.86,58,0.703,59,1.561,60,1.07,61,1.447,79,0.851,82,0.676,84,1.895,85,0.565,90,1.939,91,0.333,92,0.019,93,1.595,94,1.048,97,1.664,106,1.411,131,0.951,132,1.555,133,1.155,134,1.155,135,1.155,136,0.703,137,1.155,138,1.186,139,1.155,140,0.78,141,1.155,142,1.155,143,1.231,144,1.155,145,0.78,146,1.155,147,1.155,148,1.145,149,1.758,150,1.155,151,1.155,159,0.761,161,2.142,175,2.341,185,1.587,195,2.63,196,1.595,198,2.074,199,2.341,244,2.101,252,2.341,294,2.101,330,1.715,437,2.582,523,3.204,554,3.928,559,3.18,582,2.582,596,2.582,597,1.274,738,3.475,760,2.991,938,3.617,944,2.991,1104,2.582,1105,4.759,1106,4.21,1107,4.21,1108,3.127,1109,3.127,1110,3.127,1111,3.127,1112,4.21,1113,3.475,1114,4.21,1115,4.21,1116,4.21,1117,3.127,1118,3.127,1119,4.21]],["title/classes/SpaceScene.html",[92,0.018,773,1.868]],["body/classes/SpaceScene.html",[0,0.198,3,0.141,4,0.141,9,0.119,11,0.402,12,0.667,15,0.402,16,0.364,18,0.402,20,0.402,22,0.141,23,0.493,26,0.402,34,0.212,35,0.936,37,0.512,38,0.039,39,0.402,47,1.265,55,0.987,56,1.012,57,0.813,58,1.012,60,1.134,61,1.533,74,0.942,75,0.81,78,1.756,79,0.267,80,0.893,82,0.525,84,0.987,85,0.239,90,0.538,91,0.141,92,0.013,93,0.443,94,0.735,97,1.26,103,1.847,113,0.595,122,0.538,123,0.538,143,0.297,148,0.297,152,0.025,153,0.041,154,0.025,159,0.396,161,0.595,175,1.563,185,1.474,196,0.735,198,0.538,199,2.412,201,2.412,202,1.767,203,1.663,208,2.084,215,0.893,243,1.509,244,1.094,245,2.796,252,0.735,254,0.735,277,0.488,281,0.939,283,1.558,294,2.376,298,0.939,309,2.975,315,1.558,317,0.939,318,1.563,319,2.78,321,1.558,322,1.997,327,2.78,328,1.756,330,0.893,333,1.558,336,0.659,337,0.659,351,0.595,354,1.558,359,1.563,361,0.659,364,0.939,390,0.825,395,0.939,416,1.219,442,0.595,460,2.846,467,1.997,468,2.043,470,0.939,471,1.997,472,0.939,481,0.939,484,1.091,487,0.939,491,1.563,496,2.578,500,1.997,509,2.324,512,0.825,515,0.939,522,2.197,523,2.412,525,0.939,540,0.735,542,1.558,543,2.78,544,1.219,545,0.939,546,0.825,559,0.825,586,0.939,597,0.538,598,2.78,634,1.37,671,1.558,702,1.997,749,0.939,750,1.091,751,1.091,752,2.589,753,1.091,755,1.091,757,1.091,760,0.939,761,1.091,762,1.091,764,1.091,765,1.091,766,1.091,769,1.091,770,1.091,771,1.091,772,1.091,773,1.756,774,1.091,775,1.091,776,1.091,777,1.091,778,1.091,779,1.091,780,1.091,781,3.716,782,1.81,783,1.091,784,2.32,785,2.32,786,2.32,787,2.7,788,2.7,789,2.32,790,2.32,791,2.32,792,2.32,793,2.32,794,2.32,795,2.32,796,2.32,797,2.32,798,2.32,799,2.32,800,2.32,801,2.7,802,1.091,803,1.091,804,1.091,805,1.091,806,1.091,807,1.091,808,1.091,809,1.091,810,1.81,811,1.81,812,1.091,813,1.091,814,1.091,815,1.091,816,1.091,817,1.091,818,1.091,819,1.091,820,1.091,821,1.091,822,3.716,823,1.81,824,2.7,825,1.81,826,1.81,827,1.81,828,1.81,829,1.091,830,1.81,831,1.81,832,1.81,833,3.422,834,2.32,835,1.81,836,2.32,837,1.091,838,1.091,839,1.091,840,1.091,841,1.81,842,1.091,843,1.091,844,1.091,845,1.091,846,1.091,847,1.81,848,1.091,849,1.091,850,1.81,851,2.32,852,1.81,853,1.81,854,1.091,855,1.81,856,1.091,857,1.091,858,1.81,859,1.81,860,0.939,861,2.32,862,1.091,863,1.091,864,1.091,865,1.091,866,3.422,867,1.091,868,1.091,869,2.32,870,1.81,871,1.091,872,1.81,873,1.091,874,1.091,875,1.81,876,1.091,877,1.091,878,1.091,879,1.091,880,1.091,881,1.091,882,1.091,883,1.091,884,0.939,885,1.091,886,1.091,887,1.091,888,1.091,889,2.7,890,1.091,891,1.091,892,1.091,893,1.81,894,2.7,895,2.7,896,2.7,897,2.32,898,1.091,899,3.23,900,0.939,901,1.091,902,1.81,903,1.81,904,1.81,905,1.81,906,1.091,907,1.091,908,1.81,909,1.81,910,1.81,911,1.091,912,1.81,913,2.32,914,3.931,915,2.32,916,1.091,917,1.091,918,1.81,919,2.32,920,1.81,921,1.091,922,1.81,923,1.091,924,1.81,925,1.091,926,1.81,927,1.091,928,1.091,929,1.81,930,1.091,931,1.091,932,1.81,933,1.091,934,1.091,935,1.091,936,1.091,937,1.091,938,0.939,939,1.091,940,1.81,941,1.091,942,1.81,943,1.81,944,0.939,945,1.091,946,1.091,947,1.091,948,1.091,949,1.091,950,1.091,951,1.091,952,1.81,953,1.81,954,1.81,955,1.81,956,1.091,957,1.091,958,1.091,959,1.091,960,1.81,961,1.81,962,1.091,963,1.091,964,1.091,965,1.091,966,1.091,967,1.091,968,2.32,969,2.32,970,1.091,971,1.091,972,1.091,973,1.091,974,1.091,975,1.091,976,1.091,977,1.091,978,1.091,979,1.091,980,1.81,981,1.81,982,2.32,983,1.81,984,1.81,985,1.81,986,1.81,987,1.81,988,1.091,989,1.81,990,1.091,991,1.81,992,1.091,993,1.091,994,1.81,995,1.091,996,1.091,997,1.091,998,1.091,999,2.32,1000,1.091,1001,1.091,1002,1.091,1003,1.091,1004,1.091,1005,1.091,1006,1.091,1007,1.091,1120,2.193,1121,2.193,1122,2.193,1123,2.193,1124,2.193,1125,2.193,1126,2.81,1127,1.321,1128,1.321,1129,1.321,1130,1.321,1131,1.321,1132,1.321,1133,1.321,1134,1.321,1135,1.321,1136,1.321,1137,1.321,1138,1.321,1139,1.321,1140,1.321,1141,1.321,1142,1.321,1143,1.321,1144,1.321,1145,1.321,1146,1.321,1147,1.321,1148,1.321,1149,1.321,1150,1.321,1151,1.321,1152,1.321,1153,1.321,1154,1.321,1155,1.321,1156,1.321,1157,1.321,1158,1.321,1159,1.321,1160,1.321,1161,1.321,1162,1.321,1163,1.321,1164,1.321,1165,1.321,1166,1.321,1167,1.321,1168,1.321,1169,1.321,1170,1.321,1171,1.321]],["title/injectables/UserService.html",[414,1.493,613,1.663]],["body/injectables/UserService.html",[3,0.378,4,0.378,9,0.32,22,0.378,23,1.028,34,0.57,35,0.859,37,0.661,38,0.039,39,1.078,55,1.597,56,1.028,57,0.827,58,1.028,60,1.028,80,1.445,82,0.813,85,0.641,91,0.378,92,0.022,94,1.189,110,3.25,113,2.059,121,1.445,152,0.067,153,0.086,154,0.067,159,0.827,185,1.26,191,2.216,202,1.445,203,1.31,243,1.995,277,1.31,414,2.282,423,2.52,458,3.776,497,3.25,613,2.544,614,2.52,616,3.078,618,2.928,619,4.415,621,3.25,624,3.776,627,3.25,630,4.179,631,2.928,632,2.216,633,1.77,634,2.216,635,2.928,636,2.928,637,2.216,638,2.928,639,2.928,657,3.776,658,3.597,672,2.928,1172,2.928,1173,5.349,1174,4.574,1175,4.574,1176,3.547,1177,4.574,1178,3.547,1179,4.574,1180,4.574,1181,4.574,1182,4.574,1183,4.574,1184,4.574,1185,3.547,1186,4.574,1187,3.547,1188,4.574,1189,3.547,1190,3.547,1191,3.547,1192,3.547]],["title/coverage.html",[1193,3.372]],["body/coverage.html",[0,0.537,1,0.924,9,0.335,10,3.06,37,0.458,38,0.039,43,1.022,46,0.924,49,0.924,79,0.749,92,0.035,94,1.242,103,1.952,129,3.343,136,0.834,138,0.924,140,0.924,143,0.834,145,0.924,148,0.834,152,0.07,153,0.089,154,0.07,155,3.343,162,1.669,167,2.939,215,1.51,240,3.987,243,1.242,250,2.061,349,3.863,351,1.669,382,3.884,413,1.85,414,1.85,441,2.634,443,3.06,460,2.061,461,3.06,551,3.06,613,2.616,615,3.06,644,3.06,697,3.06,703,3.06,706,3.06,718,3.06,749,3.343,752,2.316,773,2.316,1008,3.06,1049,3.06,1057,3.06,1094,3.06,1104,3.06,1172,3.06,1193,3.06,1194,3.707,1195,3.707,1196,3.707,1197,3.06,1198,3.06,1199,3.06,1200,3.06,1201,5.612,1202,3.707,1203,3.707,1204,3.707,1205,3.707,1206,3.707,1207,3.707,1208,3.707,1209,4.705,1210,3.707,1211,3.707,1212,3.707,1213,3.707,1214,3.06,1215,4.705,1216,4.705,1217,3.707,1218,3.707,1219,3.707,1220,3.707,1221,3.707,1222,3.707,1223,3.06,1224,3.06,1225,3.884,1226,3.06,1227,3.707]],["title/dependencies.html",[402,2.248,1228,2.497]],["body/dependencies.html",[38,0.039,85,0.799,152,0.083,153,0.099,154,0.083,249,2.761,402,2.761,420,4.327,421,3.274,425,3.648,457,3.648,491,2.458,1229,3.648,1230,4.42,1231,4.42,1232,4.42,1233,4.42,1234,4.42,1235,5.242,1236,4.42,1237,6.044,1238,4.42,1239,4.42,1240,4.42,1241,4.42,1242,4.42,1243,4.42,1244,4.42,1245,4.42,1246,4.42]],["title/index.html",[22,0.266,297,1.774,1247,2.497]],["body/index.html",[38,0.032,43,1.216,79,0.891,80,1.797,152,0.083,153,0.098,154,0.083,210,2.755,230,3.134,231,3.134,330,1.797,492,4.322,627,3.72,1070,3.641,1113,4.322,1229,4.609,1248,4.411,1249,5.236,1250,4.411,1251,5.583,1252,4.411,1253,4.411,1254,4.411,1255,5.583,1256,4.411,1257,4.411,1258,4.411,1259,4.411,1260,5.897,1261,4.411,1262,4.411,1263,4.411,1264,4.411,1265,4.411,1266,3.641,1267,4.411,1268,5.583,1269,4.411,1270,4.411]],["title/modules.html",[401,2.271]],["body/modules.html",[38,0.034,152,0.09,153,0.103,154,0.09,220,3.402,400,2.991,401,2.662,412,2.662,421,2.991,1271,4.788,1272,4.788,1273,5.492,1274,4.788]],["title/overview.html",[1275,3.372]],["body/overview.html",[1,1.33,2,1.333,38,0.038,46,1.33,49,1.33,74,1.333,103,1.333,131,1.209,136,1.33,138,1.33,140,1.33,143,1.2,145,1.33,148,1.2,152,0.075,153,0.092,154,0.075,215,2.003,250,2.211,330,1.62,399,2.484,400,3.932,401,2.211,402,2.484,403,3.282,404,3.282,405,3.282,406,2.825,407,3.282,408,3.282,409,3.282,410,3.282,411,3.282,412,2.968,413,2.663,414,2.663,415,4.058,416,2.211,442,1.79,512,2.484,513,3.282,614,2.825,1275,3.282]],["title/routes.html",[455,2.902]],["body/routes.html",[38,0.034,152,0.092,153,0.104,154,0.092,455,3.467]],["title/miscellaneous/variables.html",[1276,2.061,1277,2.97]],["body/miscellaneous/variables.html",[22,0.373,37,0.698,38,0.038,128,1.748,152,0.066,153,0.085,154,0.066,167,3.325,185,0.966,202,2.301,203,2.037,208,1.427,245,1.748,348,2.189,491,1.948,708,2.512,752,2.835,860,2.489,1197,2.892,1198,2.892,1199,2.892,1200,2.892,1214,2.892,1223,2.892,1224,2.892,1225,4.395,1226,2.892,1266,3.746,1276,2.892,1277,2.892,1278,3.504,1279,3.504,1280,3.504,1281,3.504,1282,3.504,1283,3.504,1284,3.504,1285,3.504,1286,3.504,1287,3.504,1288,3.504,1289,3.504,1290,4.538,1291,4.538,1292,4.538,1293,4.538,1294,4.538,1295,4.538,1296,4.538,1297,5.324,1298,4.538,1299,4.538,1300,4.538,1301,4.538,1302,4.538,1303,4.538,1304,4.538,1305,4.538,1306,4.538,1307,4.538,1308,4.538,1309,4.538,1310,4.538,1311,4.538,1312,4.538,1313,4.538,1314,4.538,1315,4.538,1316,4.538,1317,4.538,1318,4.538,1319,4.538,1320,4.538,1321,4.538,1322,4.538,1323,4.538,1324,4.538,1325,4.538,1326,4.538,1327,4.538,1328,4.538,1329,4.538,1330,4.538,1331,4.538,1332,4.538,1333,4.538,1334,5.324,1335,4.538,1336,4.538,1337,4.538]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":103,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"overview.html":{}}}],["0.1",{"_index":499,"title":{},"body":{"classes/Bullet.html":{}}}],["0.10.3",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":605,"title":{},"body":{"components/GameComponent.html":{}}}],["0.5",{"_index":866,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["0.8",{"_index":949,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["0/1",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["00ec0c",{"_index":747,"title":{},"body":{"components/OptionComponent.html":{}}}],["0px",{"_index":611,"title":{},"body":{"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{}}}],["0x303030",{"_index":948,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["1",{"_index":74,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{},"overview.html":{}}}],["1.10.0",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["1/38",{"_index":1217,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":831,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["100",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["1000",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["100px",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{}}}],["10s",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["12/15",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["128",{"_index":817,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["15",{"_index":836,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["150px",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["15px",{"_index":1043,"title":{},"body":{"components/QuestionComponent.html":{}}}],["16",{"_index":837,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["16/20",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"overview.html":{}}}],["2,000",{"_index":939,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["2/4",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["200",{"_index":1091,"title":{},"body":{"components/QuizComponent.html":{}}}],["2000",{"_index":941,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["2048",{"_index":847,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["20pt",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{}}}],["210",{"_index":857,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["222222",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25pt",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["25px",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["2px",{"_index":608,"title":{},"body":{"components/GameComponent.html":{}}}],["3",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["3.22.0",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1220,"title":{},"body":{"coverage.html":{}}}],["30pt",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["30px",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["32",{"_index":810,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["35",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["350px",{"_index":1046,"title":{},"body":{"components/QuestionComponent.html":{}}}],["36",{"_index":514,"title":{},"body":{"classes/Bullet.html":{}}}],["4,000",{"_index":931,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["4/5",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1222,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1218,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["400",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["4000",{"_index":933,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["40pt",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["40px",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["450",{"_index":1033,"title":{},"body":{"components/QuestionComponent.html":{}}}],["5",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["5,000",{"_index":541,"title":{},"body":{"classes/Bullet.html":{}}}],["5/9",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":129,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"coverage.html":{}}}],["500",{"_index":863,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["5000",{"_index":548,"title":{},"body":{"classes/Bullet.html":{}}}],["50pt",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["50px",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["55",{"_index":703,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["57",{"_index":1221,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{}}}],["6",{"_index":513,"title":{},"body":{"classes/Bullet.html":{},"overview.html":{}}}],["6.5.5",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["600",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60pt",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["60px",{"_index":700,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["66",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["70px",{"_index":699,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["72",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["800",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8080",{"_index":640,"title":{},"body":{"injectables/GameService.html":{}}}],["8081",{"_index":1184,"title":{},"body":{"injectables/UserService.html":{}}}],["8px",{"_index":1044,"title":{},"body":{"components/QuestionComponent.html":{}}}],["9",{"_index":512,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"overview.html":{}}}],["9.0.4",{"_index":1253,"title":{},"body":{"index.html":{}}}],["9.1.1",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["9.1.2",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["9.1.4",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{}}}],["95",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["achieved",{"_index":769,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["activate",{"_index":895,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["active",{"_index":1001,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["actual",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["actual_component",{"_index":151,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["add",{"_index":859,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["additional",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["addtime",{"_index":557,"title":{},"body":{"components/GameComponent.html":{}}}],["addtime(delta",{"_index":564,"title":{},"body":{"components/GameComponent.html":{}}}],["again",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["against",{"_index":533,"title":{},"body":{"classes/Bullet.html":{}}}],["algorithm",{"_index":66,"title":{},"body":{"components/AnswerComponent.html":{}}}],["alien",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["alien.active",{"_index":922,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["alien.setactive",{"_index":992,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["alien.x",{"_index":988,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["alien.y",{"_index":990,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["aliens",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["align",{"_index":123,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["alive",{"_index":919,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["along",{"_index":505,"title":{},"body":{"classes/Bullet.html":{}}}],["always",{"_index":72,"title":{},"body":{"components/AnswerComponent.html":{}}}],["amount",{"_index":569,"title":{},"body":{"components/GameComponent.html":{},"classes/Score.html":{}}}],["angles",{"_index":906,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["angular",{"_index":1229,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":85,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["animation",{"_index":824,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["another",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["anser",{"_index":712,"title":{},"body":{"classes/Movie.html":{}}}],["answer",{"_index":17,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{}}}],["answer'},{'name",{"_index":135,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["answer.component.html",{"_index":21,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer.component.sass",{"_index":19,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answer/answer.component",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["answercomponent",{"_index":1,"title":{"components/AnswerComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["answercomponent.movies",{"_index":71,"title":{},"body":{"components/AnswerComponent.html":{}}}],["answered",{"_index":566,"title":{},"body":{"components/GameComponent.html":{}}}],["answerquiz",{"_index":739,"title":{},"body":{"components/OptionComponent.html":{}}}],["answerquizcomponent",{"_index":728,"title":{},"body":{"components/OptionComponent.html":{}}}],["answers",{"_index":89,"title":{},"body":{"components/AnswerComponent.html":{},"classes/Quiz.html":{}}}],["anymore",{"_index":547,"title":{},"body":{"classes/Bullet.html":{}}}],["api/quizzes/quiz?level",{"_index":641,"title":{},"body":{"injectables/GameService.html":{}}}],["api/scores",{"_index":1185,"title":{},"body":{"injectables/UserService.html":{}}}],["api/scores/score",{"_index":1192,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["app.component",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["app.component.sass",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["appcomponent",{"_index":136,"title":{"components/AppComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcomponent.level",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["appcomponent.titles",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["appcomponent.titlesrc",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["application/json",{"_index":1190,"title":{},"body":{"injectables/UserService.html":{}}}],["applied",{"_index":736,"title":{},"body":{"components/OptionComponent.html":{}}}],["appmodule",{"_index":400,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":441,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":412,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arcade",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arial",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["array",{"_index":68,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["array.length",{"_index":99,"title":{},"body":{"components/AnswerComponent.html":{}}}],["array[currentindex",{"_index":111,"title":{},"body":{"components/AnswerComponent.html":{}}}],["array[randomindex",{"_index":112,"title":{},"body":{"components/AnswerComponent.html":{}}}],["artifacts",{"_index":1261,"title":{},"body":{"index.html":{}}}],["ase",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["assets/invaders/background2.png",{"_index":821,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/bullet.png",{"_index":803,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/enemy",{"_index":805,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/explode.png",{"_index":815,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/invader32x32x4.png",{"_index":808,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/player.png",{"_index":813,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/invaders/starfield.png",{"_index":819,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["assets/title_different_fonts",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["assign",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["assuming",{"_index":521,"title":{},"body":{"classes/Bullet.html":{}}}],["attribute",{"_index":734,"title":{},"body":{"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["auto",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["available",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"modules.html":{}}}],["award",{"_index":996,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["awarded",{"_index":567,"title":{},"body":{"components/GameComponent.html":{}}}],["away",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["axis",{"_index":506,"title":{},"body":{"classes/Bullet.html":{}}}],["back",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["background",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["backgroundcolor",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backtostart",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["base",{"_index":497,"title":{},"body":{"classes/Bullet.html":{},"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["based",{"_index":510,"title":{},"body":{"classes/Bullet.html":{}}}],["being",{"_index":1053,"title":{},"body":{"classes/Quiz.html":{}}}],["between",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["black",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{}}}],["bodystring",{"_index":1186,"title":{},"body":{"injectables/UserService.html":{}}}],["bold",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["bonus",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["bootstrap",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{}}}],["bored",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["born",{"_index":462,"title":{},"body":{"classes/Bullet.html":{}}}],["both",{"_index":1000,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["bottom",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/QuestionComponent.html":{}}}],["boy",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":1273,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":450,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1260,"title":{},"body":{"index.html":{}}}],["bullet",{"_index":460,"title":{"classes/Bullet.html":{}},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["bullet's",{"_index":504,"title":{},"body":{"classes/Bullet.html":{}}}],["bullet.active",{"_index":981,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["bullet.png",{"_index":806,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["bullet.setactive",{"_index":983,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["bullets",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["bullettime",{"_index":784,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["button",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["buttons",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["calculate",{"_index":525,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["calls",{"_index":632,"title":{},"body":{"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{},"injectables/UserService.html":{}}}],["case",{"_index":664,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["catch",{"_index":1092,"title":{},"body":{"components/QuizComponent.html":{}}}],["center",{"_index":122,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["challenging",{"_index":81,"title":{},"body":{"components/AnswerComponent.html":{}}}],["check",{"_index":1070,"title":{},"body":{"components/QuizComponent.html":{},"index.html":{}}}],["child",{"_index":1077,"title":{},"body":{"components/QuizComponent.html":{}}}],["childcomp",{"_index":554,"title":{},"body":{"components/GameComponent.html":{},"components/SpaceComponent.html":{}}}],["childcomponent",{"_index":738,"title":{},"body":{"components/OptionComponent.html":{},"components/SpaceComponent.html":{}}}],["choose",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["chooses",{"_index":1065,"title":{},"body":{"components/QuizComponent.html":{}}}],["chose",{"_index":626,"title":{},"body":{"injectables/GameService.html":{}}}],["chosen",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{}}}],["class",{"_index":92,"title":{"classes/AppPage.html":{},"classes/Bullet.html":{},"classes/Movie.html":{},"classes/Quiz.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":442,"title":{},"body":{"classes/AppPage.html":{},"classes/Bullet.html":{},"classes/Movie.html":{},"classes/Quiz.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"overview.html":{}}}],["cli",{"_index":1251,"title":{},"body":{"index.html":{}}}],["click",{"_index":964,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["clicked",{"_index":33,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/QuizComponent.html":{}}}],["clicks",{"_index":1066,"title":{},"body":{"components/QuizComponent.html":{}}}],["cluster_appmodule",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":41,"title":{},"body":{"components/AnswerComponent.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"classes/Quiz.html":{}}}],["collection",{"_index":928,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["collections",{"_index":873,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["collision",{"_index":908,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["color",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["column",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["columns",{"_index":1026,"title":{},"body":{"components/QuestionComponent.html":{}}}],["com/:8080/api",{"_index":686,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["componenet",{"_index":770,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["component",{"_index":0,"title":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["component_template",{"_index":134,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"overview.html":{}}}],["condition",{"_index":968,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["config",{"_index":752,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":765,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["consecutively",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["const",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":34,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["constructor(description",{"_index":1050,"title":{},"body":{"classes/Quiz.html":{}}}],["constructor(gameservice",{"_index":1061,"title":{},"body":{"components/QuizComponent.html":{}}}],["constructor(http",{"_index":618,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["constructor(poster",{"_index":710,"title":{},"body":{"classes/Movie.html":{}}}],["constructor(private",{"_index":637,"title":{},"body":{"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{},"injectables/UserService.html":{}}}],["constructor(scene",{"_index":469,"title":{},"body":{"classes/Bullet.html":{}}}],["constructor(user",{"_index":1097,"title":{},"body":{"classes/Score.html":{}}}],["constructor(userservice",{"_index":652,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["contained",{"_index":50,"title":{},"body":{"components/AnswerComponent.html":{}}}],["containing",{"_index":1116,"title":{},"body":{"components/SpaceComponent.html":{}}}],["contains",{"_index":597,"title":{},"body":{"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["content",{"_index":121,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"injectables/UserService.html":{}}}],["coordinate",{"_index":539,"title":{},"body":{"classes/Bullet.html":{}}}],["coordinates",{"_index":515,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["correct",{"_index":42,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{}}}],["correctanswer",{"_index":30,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"classes/Quiz.html":{}}}],["correctly",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["counter",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["coverage",{"_index":1193,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":822,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["createaliens",{"_index":889,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["createbullets",{"_index":1120,"title":{},"body":{"classes/SpaceScene.html":{}}}],["createbullets(imagename",{"_index":1152,"title":{},"body":{"classes/SpaceScene.html":{}}}],["creategameovermodal",{"_index":1121,"title":{},"body":{"classes/SpaceScene.html":{}}}],["creategameovermodal(sceneref",{"_index":942,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["createplayerlives",{"_index":1122,"title":{},"body":{"classes/SpaceScene.html":{}}}],["createplayerlives(sceneref",{"_index":1156,"title":{},"body":{"classes/SpaceScene.html":{}}}],["css",{"_index":737,"title":{},"body":{"components/OptionComponent.html":{}}}],["current",{"_index":110,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"injectables/UserService.html":{}}}],["currentindex",{"_index":98,"title":{},"body":{"components/AnswerComponent.html":{}}}],["cursors",{"_index":785,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["data",{"_index":625,"title":{},"body":{"injectables/GameService.html":{}}}],["deactivate",{"_index":982,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["declarations",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":582,"title":{},"body":{"components/GameComponent.html":{},"components/SpaceComponent.html":{}}}],["default",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultkey",{"_index":472,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["defend",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["delta",{"_index":485,"title":{},"body":{"classes/Bullet.html":{},"components/GameComponent.html":{}}}],["dependencies",{"_index":402,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":570,"title":{},"body":{"components/GameComponent.html":{}}}],["described",{"_index":1054,"title":{},"body":{"classes/Quiz.html":{}}}],["description",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["description1",{"_index":1012,"title":{},"body":{"components/QuestionComponent.html":{}}}],["description2",{"_index":1013,"title":{},"body":{"components/QuestionComponent.html":{}}}],["dev",{"_index":1257,"title":{},"body":{"index.html":{}}}],["development",{"_index":1254,"title":{},"body":{"index.html":{}}}],["devkit/schematics",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["didplayerwin",{"_index":1165,"title":{},"body":{"classes/SpaceScene.html":{}}}],["died",{"_index":890,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["different",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["difficulty",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Level.html":{},"components/QuizComponent.html":{}}}],["direction",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{}}}],["directive",{"_index":133,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["directives",{"_index":150,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["directory",{"_index":1264,"title":{},"body":{"index.html":{}}}],["display",{"_index":117,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["displayed",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Quiz.html":{}}}],["dist",{"_index":1263,"title":{},"body":{"index.html":{}}}],["dist/.../title_different_fonts.ts",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/org",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["div",{"_index":115,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["div.game",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["div.wrapper",{"_index":1093,"title":{},"body":{"components/QuizComponent.html":{}}}],["docs/ltoedt/ase/0.1",{"_index":636,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["document.getelementsbytagname(\"select\")[0].value",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["documentation",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":545,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["don't",{"_index":904,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["dropdown",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["during",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":443,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":448,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":446,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["earth",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["easy",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["element",{"_index":106,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["element(by.css('app",{"_index":451,"title":{},"body":{"classes/AppPage.html":{}}}],["elements",{"_index":67,"title":{},"body":{"components/AnswerComponent.html":{}}}],["emits",{"_index":755,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["end",{"_index":671,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["ended",{"_index":563,"title":{},"body":{"components/GameComponent.html":{}}}],["ending",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["enemies",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["enemy",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{}}}],["enemybullet",{"_index":496,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["enemybullet.fire",{"_index":936,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["enemybullets",{"_index":791,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["environment",{"_index":1225,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["evaluates",{"_index":733,"title":{},"body":{"components/OptionComponent.html":{}}}],["evaluating",{"_index":590,"title":{},"body":{"components/GameComponent.html":{}}}],["eventemitter",{"_index":47,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["everything",{"_index":970,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explode",{"_index":834,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosion",{"_index":833,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosion.play",{"_index":991,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosion.setorigin",{"_index":986,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosion.x",{"_index":987,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosion.y",{"_index":989,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["explosions",{"_index":787,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["export",{"_index":91,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":487,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["false",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{},"miscellaneous/variables.html":{}}}],["few",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["ffffffbd",{"_index":704,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["find",{"_index":917,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["finished",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["fire",{"_index":467,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["fire(shooter",{"_index":480,"title":{},"body":{"classes/Bullet.html":{}}}],["firebutton",{"_index":786,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["fired",{"_index":500,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["fireenemybullet",{"_index":915,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["fireenemybullet(player",{"_index":1158,"title":{},"body":{"classes/SpaceScene.html":{}}}],["fireplayerbullet",{"_index":1123,"title":{},"body":{"classes/SpaceScene.html":{}}}],["fireplayerbullet(sceneref",{"_index":1160,"title":{},"body":{"classes/SpaceScene.html":{}}}],["firing",{"_index":885,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["firingtimer",{"_index":792,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["first",{"_index":894,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["flag",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"index.html":{}}}],["flex",{"_index":118,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["followed",{"_index":978,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["font",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["fonts",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["fontsize",{"_index":852,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["form",{"_index":701,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["formsmodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["forwards",{"_index":48,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["frameheight",{"_index":811,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["framerate",{"_index":830,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["frames",{"_index":827,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["framewidth",{"_index":809,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["framewidth:128",{"_index":816,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["frontend",{"_index":1248,"title":{},"body":{"index.html":{}}}],["frontend/assets/title_different_fonts.ts",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["funtion",{"_index":1112,"title":{},"body":{"components/SpaceComponent.html":{}}}],["further",{"_index":1267,"title":{},"body":{"index.html":{}}}],["game",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["game'},{'name",{"_index":139,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["game.component.html",{"_index":553,"title":{},"body":{"components/GameComponent.html":{}}}],["game.component.sass",{"_index":552,"title":{},"body":{"components/GameComponent.html":{}}}],["game/game.component",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["gamecomponent",{"_index":138,"title":{"components/GameComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamecomponent.correctanswer",{"_index":573,"title":{},"body":{"components/GameComponent.html":{}}}],["gamecomponent.level",{"_index":571,"title":{},"body":{"components/GameComponent.html":{}}}],["gamecomponent.timer",{"_index":581,"title":{},"body":{"components/GameComponent.html":{}}}],["gameover",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["gameovermodal",{"_index":799,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["gameovertext",{"_index":800,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["gameservice",{"_index":413,"title":{"injectables/GameService.html":{}},"body":{"modules/AppModule.html":{},"injectables/GameService.html":{},"components/QuizComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamne",{"_index":1114,"title":{},"body":{"components/SpaceComponent.html":{}}}],["generated",{"_index":1250,"title":{},"body":{"index.html":{}}}],["geteventfromoption",{"_index":24,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/QuizComponent.html":{}}}],["geteventfromoption(valueemitted",{"_index":51,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/QuizComponent.html":{}}}],["getleaders",{"_index":650,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["getquiz",{"_index":617,"title":{},"body":{"injectables/GameService.html":{},"components/QuizComponent.html":{}}}],["getquiz(level",{"_index":622,"title":{},"body":{"injectables/GameService.html":{}}}],["getscores",{"_index":1173,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":297,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/QuizComponent.html":{}}}],["gettitletext",{"_index":444,"title":{},"body":{"classes/AppPage.html":{}}}],["given",{"_index":1071,"title":{},"body":{"components/QuizComponent.html":{}}}],["global",{"_index":938,"title":{},"body":{"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["go",{"_index":1269,"title":{},"body":{"index.html":{}}}],["grab",{"_index":893,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["grants",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":1274,"title":{},"body":{"modules.html":{}}}],["group",{"_index":702,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["grow",{"_index":1047,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["guess",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["guessed",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["guessing",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["h1",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["h2",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{}}}],["half",{"_index":1034,"title":{},"body":{"components/QuestionComponent.html":{}}}],["half).join",{"_index":1038,"title":{},"body":{"components/QuestionComponent.html":{}}}],["handle",{"_index":961,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["handleenemycollision",{"_index":1124,"title":{},"body":{"classes/SpaceScene.html":{}}}],["handleenemycollision(bullet",{"_index":980,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["handlegameover",{"_index":1125,"title":{},"body":{"classes/SpaceScene.html":{}}}],["handlegameover(didplayerwin",{"_index":1163,"title":{},"body":{"classes/SpaceScene.html":{}}}],["handleplayercollision",{"_index":999,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["handleplayercollision(player",{"_index":1166,"title":{},"body":{"classes/SpaceScene.html":{}}}],["handling",{"_index":909,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["hard",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["harder",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["hasn't",{"_index":930,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["headers",{"_index":1189,"title":{},"body":{"injectables/UserService.html":{}}}],["height",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/QuestionComponent.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":1268,"title":{},"body":{"index.html":{}}}],["helps",{"_index":589,"title":{},"body":{"components/GameComponent.html":{}}}],["hidde",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["hide",{"_index":977,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["hideoncomplete",{"_index":838,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["hit",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["hold",{"_index":868,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["holds",{"_index":735,"title":{},"body":{"components/OptionComponent.html":{}}}],["hover",{"_index":823,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["html",{"_index":132,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["http",{"_index":621,"title":{},"body":{"injectables/GameService.html":{},"components/QuizComponent.html":{},"injectables/UserService.html":{}}}],["http.open('head",{"_index":1088,"title":{},"body":{"components/QuizComponent.html":{}}}],["http.send",{"_index":1089,"title":{},"body":{"components/QuizComponent.html":{}}}],["http.status",{"_index":1090,"title":{},"body":{"components/QuizComponent.html":{}}}],["http://localhost:4200",{"_index":1259,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":619,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1183,"title":{},"body":{"injectables/UserService.html":{}}}],["httpoptions",{"_index":1188,"title":{},"body":{"injectables/UserService.html":{}}}],["https://app.swaggerhub.com/apis",{"_index":635,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["https://fontmeme.com/permalink/200502/0110e662d342513460c0b27db029f92d.png",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/03cd29494dc96b7c325287a47fc194c4.png",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/0548c6ac6e9e71476a6def5f848ed46a.png",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/0c2cf8e9e6f360c42c12b15622c95657.png",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/13510182228aaf8bfd0080b9b07aa847.png",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/25ea63f82bc378310bb4f73097eaa398.png",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/2b6543751702e1acdae3fea32ecf8787.png",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/2b747f4817c73b774deac3ea79982d0f.png",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/2ca5220b6be7929fd523c3d91e9648c5.png",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/3641c1af46d1215a823278b366c28fc3.png",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/41bdb4608e93f26053a725424d295e15.png",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/436d381ae30b32efebc53b88718b5cbf.png",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/45fd7e599d32e4cfdb58e9377010b576.png",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/513cd0cecbbfaa4a7c0c95a07e08e5e1.png",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/58432f1e3afbf5a3e8ed93b96d8ccecd.png",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/5f9fe2982c84efdab49ac9750e669df2.png",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/60316d1e125cc7a68459989fadcec0a7.png",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/61d59ef0a950e1e4a4fc0eba3140c782.png",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/666a2d5f6d813bd7d5b9abd04e2d24e5.png",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/8b02e5dd705dab160fa15443bc796bf0.png",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/91420d4541314a1e31b2d2cff5033c8f.png",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/9642e6bba3e4283aa02026d7bde77b61.png",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/9bd35ed7a3803b4672e44235cbe7e1c5.png",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/9c2ca934a98ec57c6890f3ecd1b68510.png",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/9e3f0501fc68019142d7af77efe0699d.png",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/a4354e21bfbf3e0505ca35f4e0f910cd.png",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/ac898a46eb9e0781db38bd2cccd34d5c.png",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/af8abeabf1d9740c4dc466a29ab666bb.png",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/b497ddc60697cc683e4d2351793e1bf6.png",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/c103175208bd4b37a973b3299a053117.png",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/c1b4689d5a203532e8c91e70574aa239.png",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/c229afcc0f0c1ed5a22fe741494be355.png",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/c63d389110d441c7a781f436e808026b.png",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/cdda963cf2ce109583f3e12cb468fe76.png",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/d5a4b59d652482242996e0d4cece7d7d.png",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/d97dbd2d8aee97d92b567b7626370f51.png",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/db10fddba18a6f6974628101313dd99e.png",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/dd2f8a5dfdb277ac2cc24ed69b21585a.png",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/ddf911905cdf2a2d890244a5cdd2ef9b.png",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/e0a48641192dd5da576842bfed0ae5ba.png",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/e1b3cee591331d2549177a7f74410989.png",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/f2ab02732835c99192b13d83d731ffd5.png",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/f81b906854b10639d2b3ce7088adc18a.png",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/f942bcee948945d316eaa6aa7c5ac164.png",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/f9873a948acd1311370868fdd30c32d9.png",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/fad440f388348a1215fdf8bc57f250f3.png",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/fc80be6eb65d38b20b64936f18b95d2c.png",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fontmeme.com/permalink/200502/fe2db9f7d19ad03280cbc1e34ad09359.png",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://phaser.io/phaser3",{"_index":782,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["identifier",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["if(!this.imageexists(el.poster",{"_index":1085,"title":{},"body":{"components/QuizComponent.html":{}}}],["if(this.correctanswer",{"_index":741,"title":{},"body":{"components/OptionComponent.html":{}}}],["if(this.description.length",{"_index":1032,"title":{},"body":{"components/QuestionComponent.html":{}}}],["if(this.timer",{"_index":606,"title":{},"body":{"components/GameComponent.html":{}}}],["if(tmp.length",{"_index":682,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["ii",{"_index":1027,"title":{},"body":{"components/QuestionComponent.html":{}}}],["image",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/QuizComponent.html":{}}}],["image_url",{"_index":1073,"title":{},"body":{"components/QuizComponent.html":{}}}],["imageexists",{"_index":1060,"title":{},"body":{"components/QuizComponent.html":{}}}],["imageexists(image_url",{"_index":1068,"title":{},"body":{"components/QuizComponent.html":{}}}],["imagename",{"_index":1154,"title":{},"body":{"classes/SpaceScene.html":{}}}],["img",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["increment",{"_index":993,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":669,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["information",{"_index":55,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":613,"title":{"injectables/GameService.html":{},"injectables/UserService.html":{}},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":614,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":83,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["inputs",{"_index":29,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["instance",{"_index":923,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["instructions",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["integer",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["interface",{"_index":250,"title":{"interfaces/Level.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":705,"title":{},"body":{"interfaces/Level.html":{}}}],["interval",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{}}}],["interval(10000",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["interval(50",{"_index":602,"title":{},"body":{"components/GameComponent.html":{}}}],["invader",{"_index":829,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["invaders",{"_index":869,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["invasion",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["invisible",{"_index":663,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["isenemybullet",{"_index":463,"title":{},"body":{"classes/Bullet.html":{}}}],["isgameover",{"_index":798,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["it's",{"_index":540,"title":{},"body":{"classes/Bullet.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["items",{"_index":124,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["iterate",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["json.stringify(scr",{"_index":1187,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":120,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["kaboom",{"_index":835,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["keeps",{"_index":584,"title":{},"body":{"components/GameComponent.html":{}}}],["key",{"_index":826,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["killed",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["label",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["larger",{"_index":1048,"title":{},"body":{"components/QuestionComponent.html":{}}}],["last",{"_index":913,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["lastalienbullettime",{"_index":795,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["lastfired",{"_index":934,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["lastplayerbullettime",{"_index":796,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["leader.scoreno",{"_index":696,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leader.user",{"_index":695,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"classes/Score.html":{}}}],["leaderboard'},{'name",{"_index":141,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["leaderboard.component.html",{"_index":646,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard.component.sass",{"_index":645,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaderboard/leaderboard.component",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["leaderboardcomponent",{"_index":140,"title":{"components/LeaderboardComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["leaderboardempty",{"_index":647,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["leaders",{"_index":648,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["left",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/QuestionComponent.html":{}}}],["left:phaser.input.keyboard.keycodes.a",{"_index":881,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["legend",{"_index":131,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"overview.html":{}}}],["length",{"_index":591,"title":{},"body":{"components/GameComponent.html":{}}}],["less",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["level",{"_index":162,"title":{"interfaces/Level.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Level.html":{},"components/QuizComponent.html":{},"coverage.html":{}}}],["leveldifficulty",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["levels",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["link",{"_index":93,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["list",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["live",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["lives",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["livingaliens",{"_index":794,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["loc",{"_index":677,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["loc.split",{"_index":680,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["long",{"_index":900,"title":{},"body":{"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["looking",{"_index":1028,"title":{},"body":{"components/QuestionComponent.html":{}}}],["lost",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["lvl.viewvalue",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":78,"title":{},"body":{"components/AnswerComponent.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["making",{"_index":631,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["many",{"_index":586,"title":{},"body":{"components/GameComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["margin",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{}}}],["match",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":153,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.atan",{"_index":532,"title":{},"body":{"classes/Bullet.html":{}}}],["math.cos",{"_index":535,"title":{},"body":{"classes/Bullet.html":{}}}],["math.floor(math.random",{"_index":107,"title":{},"body":{"components/AnswerComponent.html":{}}}],["math.floor(wordlist.length/2",{"_index":1035,"title":{},"body":{"components/QuestionComponent.html":{}}}],["math.sin",{"_index":534,"title":{},"body":{"classes/Bullet.html":{}}}],["max",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["maxsize",{"_index":878,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["mechanism",{"_index":886,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["medium",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["method",{"_index":75,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["microservice",{"_index":633,"title":{},"body":{"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"injectables/UserService.html":{}}}],["milliseconds",{"_index":542,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["min",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":1276,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":943,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["model/movie",{"_index":86,"title":{},"body":{"components/AnswerComponent.html":{},"components/OptionComponent.html":{}}}],["model/quiz",{"_index":1078,"title":{},"body":{"components/QuizComponent.html":{}}}],["model/score",{"_index":672,"title":{},"body":{"components/LeaderboardComponent.html":{},"injectables/UserService.html":{}}}],["module",{"_index":399,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":401,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":80,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"injectables/GameService.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"index.html":{}}}],["mouse",{"_index":963,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["movie",{"_index":43,"title":{"classes/Movie.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"coverage.html":{},"index.html":{}}}],["movie.code",{"_index":746,"title":{},"body":{"components/OptionComponent.html":{}}}],["movie.title",{"_index":745,"title":{},"body":{"components/OptionComponent.html":{}}}],["movies",{"_index":31,"title":{},"body":{"components/AnswerComponent.html":{},"classes/Quiz.html":{}}}],["much",{"_index":1181,"title":{},"body":{"injectables/UserService.html":{}}}],["name",{"_index":57,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["navigate",{"_index":1258,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":445,"title":{},"body":{"classes/AppPage.html":{}}}],["necessary",{"_index":764,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["need",{"_index":905,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["new",{"_index":94,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ng",{"_index":1255,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":25,"title":{},"body":{"components/AnswerComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["nosonar",{"_index":108,"title":{},"body":{"components/AnswerComponent.html":{}}}],["nowrap",{"_index":126,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{}}}],["null",{"_index":912,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["number",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["object",{"_index":708,"title":{},"body":{"classes/Movie.html":{},"components/OptionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"miscellaneous/variables.html":{}}}],["obs",{"_index":555,"title":{},"body":{"components/GameComponent.html":{}}}],["observ",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["observable",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{}}}],["onchanges",{"_index":13,"title":{},"body":{"components/AnswerComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["one",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/OptionComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["onsubmit",{"_index":651,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["option",{"_index":127,"title":{},"body":{"components/AnswerComponent.html":{},"components/OptionComponent.html":{}}}],["option'},{'name",{"_index":142,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["option.component.html",{"_index":720,"title":{},"body":{"components/OptionComponent.html":{}}}],["option.component.sass",{"_index":719,"title":{},"body":{"components/OptionComponent.html":{}}}],["option/option.component",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["optional",{"_index":58,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Movie.html":{},"components/PhaserComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["optioncomponent",{"_index":49,"title":{"components/OptionComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["order",{"_index":77,"title":{},"body":{"components/AnswerComponent.html":{}}}],["otherwise",{"_index":685,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["out",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":607,"title":{},"body":{"components/GameComponent.html":{}}}],["output",{"_index":84,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["outputs",{"_index":32,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["over",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["overview",{"_index":1275,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1228,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{}}}],["param",{"_index":638,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Movie.html":{},"components/PhaserComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["parent",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":90,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"classes/Movie.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["parts",{"_index":1022,"title":{},"body":{"components/QuestionComponent.html":{}}}],["passed",{"_index":1076,"title":{},"body":{"components/QuizComponent.html":{}}}],["path",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["paths",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["percent",{"_index":595,"title":{},"body":{"components/GameComponent.html":{}}}],["phaser",{"_index":491,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["phaser'},{'name",{"_index":144,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["phaser.auto",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phaser.component.html",{"_index":751,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.component.sass",{"_index":750,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.game",{"_index":766,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.game(this.config",{"_index":775,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.gameobjects.image",{"_index":488,"title":{},"body":{"classes/Bullet.html":{}}}],["phaser.gameobjects.image.call",{"_index":494,"title":{},"body":{"classes/Bullet.html":{}}}],["phaser.math.angle.between",{"_index":538,"title":{},"body":{"classes/Bullet.html":{}}}],["phaser.math.rnd.integerinrange",{"_index":927,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.scene",{"_index":783,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser.types.core.gameconfig",{"_index":762,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["phaser/phaser.component",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"components/SpaceComponent.html":{}}}],["phasercomponent",{"_index":143,"title":{"components/PhaserComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"overview.html":{}}}],["phasergame",{"_index":753,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["physics",{"_index":860,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":104,"title":{},"body":{"components/AnswerComponent.html":{}}}],["picture",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["pictures",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["pipe",{"_index":642,"title":{},"body":{"injectables/GameService.html":{}}}],["place",{"_index":985,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["play",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["player",{"_index":522,"title":{},"body":{"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{}}}],["player's",{"_index":853,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["player.active",{"_index":1002,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["player.x",{"_index":1003,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["player.y",{"_index":1004,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["playerbullet",{"_index":897,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["playerbullet.fire",{"_index":907,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["playerlives",{"_index":797,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["pointer",{"_index":967,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["pointerdown",{"_index":966,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["points",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["popcorn",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["position",{"_index":73,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["possible",{"_index":88,"title":{},"body":{"components/AnswerComponent.html":{}}}],["poster",{"_index":709,"title":{},"body":{"classes/Movie.html":{}}}],["postscore",{"_index":1174,"title":{},"body":{"injectables/UserService.html":{}}}],["postscore(scr",{"_index":1177,"title":{},"body":{"injectables/UserService.html":{}}}],["potential",{"_index":667,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{}}}],["preload",{"_index":801,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["preloaded",{"_index":493,"title":{},"body":{"classes/Bullet.html":{}}}],["processing",{"_index":891,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["prod",{"_index":1265,"title":{},"body":{"index.html":{}}}],["production",{"_index":1266,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1249,"title":{},"body":{"index.html":{}}}],["promise",{"_index":447,"title":{},"body":{"classes/AppPage.html":{}}}],["properly",{"_index":844,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["properties",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":449,"title":{},"body":{"classes/AppPage.html":{}}}],["provided",{"_index":45,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{},"components/QuestionComponent.html":{}}}],["providers",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["question",{"_index":1009,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["question'},{'name",{"_index":146,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["question.component.html",{"_index":1011,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.component.sass",{"_index":1010,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question/question.component",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["questioncomponent",{"_index":145,"title":{"components/QuestionComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questions",{"_index":572,"title":{},"body":{"components/GameComponent.html":{}}}],["quiz",{"_index":79,"title":{"classes/Quiz.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"index.html":{}}}],["quiz'},{'name",{"_index":147,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["quiz.component.html",{"_index":1059,"title":{},"body":{"components/QuizComponent.html":{}}}],["quiz.component.sass",{"_index":1058,"title":{},"body":{"components/QuizComponent.html":{}}}],["quiz/quiz.component",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["quizcomponent",{"_index":46,"title":{"components/QuizComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizdescription",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["quizzes",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{}}}],["ran",{"_index":761,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["random",{"_index":925,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["randomalien",{"_index":929,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["randomalien.lastfired",{"_index":932,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["randomaliennumber",{"_index":926,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["randomindex",{"_index":101,"title":{},"body":{"components/AnswerComponent.html":{}}}],["reach",{"_index":1182,"title":{},"body":{"injectables/UserService.html":{}}}],["reachable",{"_index":1072,"title":{},"body":{"components/QuizComponent.html":{}}}],["reached",{"_index":1099,"title":{},"body":{"classes/Score.html":{}}}],["read",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["readme",{"_index":1270,"title":{},"body":{"index.html":{}}}],["ready",{"_index":956,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["receive",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["received",{"_index":70,"title":{},"body":{"components/AnswerComponent.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"classes/Quiz.html":{},"classes/Score.html":{}}}],["receives",{"_index":54,"title":{},"body":{"components/AnswerComponent.html":{},"components/GameComponent.html":{}}}],["red",{"_index":748,"title":{},"body":{"components/OptionComponent.html":{}}}],["regular",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":609,"title":{},"body":{"components/GameComponent.html":{}}}],["relaxing",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["remain",{"_index":102,"title":{},"body":{"components/AnswerComponent.html":{}}}],["remaining",{"_index":105,"title":{},"body":{"components/AnswerComponent.html":{}}}],["remove",{"_index":544,"title":{},"body":{"classes/Bullet.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{}}}],["removelife",{"_index":1126,"title":{},"body":{"classes/SpaceScene.html":{}}}],["repeat",{"_index":832,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["representatin",{"_index":707,"title":{},"body":{"classes/Movie.html":{}}}],["representation",{"_index":87,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"classes/Score.html":{}}}],["represented",{"_index":726,"title":{},"body":{"components/OptionComponent.html":{}}}],["represents",{"_index":594,"title":{},"body":{"components/GameComponent.html":{}}}],["request",{"_index":624,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["reset",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"overview.html":{}}}],["response",{"_index":1080,"title":{},"body":{"components/QuizComponent.html":{}}}],["response).answers",{"_index":1084,"title":{},"body":{"components/QuizComponent.html":{}}}],["response).description.length",{"_index":1083,"title":{},"body":{"components/QuizComponent.html":{}}}],["responsible",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"interfaces/Level.html":{},"injectables/UserService.html":{}}}],["restartgame",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["result",{"_index":152,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":154,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":628,"title":{},"body":{"injectables/GameService.html":{}}}],["retry(3",{"_index":643,"title":{},"body":{"injectables/GameService.html":{}}}],["return",{"_index":113,"title":{},"body":{"components/AnswerComponent.html":{},"classes/AppPage.html":{},"injectables/GameService.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["right",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["right:phaser.input.keyboard.keycodes.d",{"_index":882,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["root",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/Level.html":{}}}],["root'},{'name",{"_index":137,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["rotation",{"_index":536,"title":{},"body":{"classes/Bullet.html":{}}}],["routermodule",{"_index":456,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":459,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":455,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1045,"title":{},"body":{"components/QuestionComponent.html":{}}}],["run",{"_index":1113,"title":{},"body":{"components/SpaceComponent.html":{},"index.html":{}}}],["running",{"_index":579,"title":{},"body":{"components/GameComponent.html":{}}}],["runs",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["rxjs",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":629,"title":{},"body":{"injectables/GameService.html":{}}}],["same",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["saved",{"_index":1101,"title":{},"body":{"classes/Score.html":{}}}],["scaled",{"_index":843,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["scene",{"_index":474,"title":{},"body":{"classes/Bullet.html":{}}}],["sceneref",{"_index":914,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.add.graphics",{"_index":946,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.add.text",{"_index":958,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.input.on",{"_index":965,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.physics.add.collider",{"_index":910,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.sys.canvas.height",{"_index":953,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.sys.canvas.width",{"_index":952,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sceneref.time.now",{"_index":902,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["score",{"_index":243,"title":{"classes/Score.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["scoreno",{"_index":1096,"title":{},"body":{"classes/Score.html":{}}}],["scoreprefix",{"_index":789,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["scores",{"_index":657,"title":{},"body":{"components/LeaderboardComponent.html":{},"injectables/UserService.html":{}}}],["scoretext",{"_index":790,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["scr",{"_index":1180,"title":{},"body":{"injectables/UserService.html":{}}}],["screen",{"_index":543,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["seconds",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["see",{"_index":634,"title":{},"body":{"injectables/GameService.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["select",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["selected",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["self",{"_index":130,"title":{},"body":{"components/AnswerComponent.html":{}}}],["sent",{"_index":1095,"title":{},"body":{"classes/Score.html":{}}}],["serve",{"_index":1256,"title":{},"body":{"index.html":{}}}],["server",{"_index":627,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["service",{"_index":630,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["services/game.service",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"components/QuizComponent.html":{}}}],["services/user.service",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"components/LeaderboardComponent.html":{}}}],["set",{"_index":509,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["setdifferentmovietitle",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["setgameover",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["setgameover(score",{"_index":757,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["setgameover(valueemitted",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/SpaceComponent.html":{}}}],["settime",{"_index":558,"title":{},"body":{"components/GameComponent.html":{}}}],["setup",{"_index":781,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["setvisible",{"_index":899,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["shadow",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{}}}],["shape",{"_index":950,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["ship",{"_index":864,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["shoot",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["shooter",{"_index":483,"title":{},"body":{"classes/Bullet.html":{}}}],["shooter's",{"_index":516,"title":{},"body":{"classes/Bullet.html":{}}}],["shooter.x",{"_index":518,"title":{},"body":{"classes/Bullet.html":{}}}],["shooter.y",{"_index":519,"title":{},"body":{"classes/Bullet.html":{}}}],["shooting",{"_index":523,"title":{},"body":{"classes/Bullet.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["shouldn't",{"_index":954,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["shuffle",{"_index":27,"title":{},"body":{"components/AnswerComponent.html":{}}}],["shuffle(array",{"_index":64,"title":{},"body":{"components/AnswerComponent.html":{}}}],["shufflemovies",{"_index":28,"title":{},"body":{"components/AnswerComponent.html":{}}}],["shuffles",{"_index":76,"title":{},"body":{"components/AnswerComponent.html":{}}}],["simulate",{"_index":578,"title":{},"body":{"components/GameComponent.html":{}}}],["size",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["solid",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["space",{"_index":149,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["space.component.html",{"_index":1106,"title":{},"body":{"components/SpaceComponent.html":{}}}],["space.component.sass",{"_index":1105,"title":{},"body":{"components/SpaceComponent.html":{}}}],["space/space.component",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponent.html":{}}}],["spacecomponent",{"_index":148,"title":{"components/SpaceComponent.html":{}},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{},"overview.html":{}}}],["spacescene",{"_index":773,"title":{"classes/SpaceScene.html":{}},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["span')).gettext",{"_index":452,"title":{},"body":{"classes/AppPage.html":{}}}],["speed",{"_index":464,"title":{},"body":{"classes/Bullet.html":{}}}],["split",{"_index":1025,"title":{},"body":{"components/QuestionComponent.html":{}}}],["splits",{"_index":1020,"title":{},"body":{"components/QuestionComponent.html":{}}}],["sprite",{"_index":841,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["src/.../config.ts",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../title_different_fonts.ts",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/answer/answer.component.ts",{"_index":10,"title":{},"body":{"components/AnswerComponent.html":{},"coverage.html":{}}}],["src/app/answer/answer.component.ts:13",{"_index":44,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:15",{"_index":40,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:17",{"_index":36,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:21",{"_index":63,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:25",{"_index":62,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:30",{"_index":69,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:35",{"_index":65,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/answer/answer.component.ts:55",{"_index":53,"title":{},"body":{"components/AnswerComponent.html":{}}}],["src/app/app",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"coverage.html":{}}}],["src/app/app.component.ts:104",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:90",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:98",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/game/game.component.ts",{"_index":551,"title":{},"body":{"components/GameComponent.html":{},"coverage.html":{}}}],["src/app/game/game.component.ts:13",{"_index":592,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:15",{"_index":585,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:17",{"_index":593,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:19",{"_index":588,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:21",{"_index":561,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:23",{"_index":562,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:25",{"_index":560,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:29",{"_index":574,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:38",{"_index":576,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:47",{"_index":565,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:56",{"_index":568,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:68",{"_index":575,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:73",{"_index":580,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts",{"_index":644,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:13",{"_index":665,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:15",{"_index":662,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:17",{"_index":655,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:19",{"_index":654,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:21",{"_index":666,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:23",{"_index":653,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:27",{"_index":659,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:34",{"_index":656,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/leaderboard/leaderboard.component.ts:51",{"_index":660,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["src/app/model/movie.ts",{"_index":706,"title":{},"body":{"classes/Movie.html":{},"coverage.html":{}}}],["src/app/model/movie.ts:4",{"_index":713,"title":{},"body":{"classes/Movie.html":{}}}],["src/app/model/movie.ts:6",{"_index":714,"title":{},"body":{"classes/Movie.html":{}}}],["src/app/model/movie.ts:8",{"_index":711,"title":{},"body":{"classes/Movie.html":{}}}],["src/app/model/quiz.ts",{"_index":1049,"title":{},"body":{"classes/Quiz.html":{},"coverage.html":{}}}],["src/app/model/quiz.ts:10",{"_index":1051,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/model/quiz.ts:6",{"_index":1055,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/model/quiz.ts:8",{"_index":1052,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/model/score.ts",{"_index":1094,"title":{},"body":{"classes/Score.html":{},"coverage.html":{}}}],["src/app/model/score.ts:4",{"_index":1100,"title":{},"body":{"classes/Score.html":{}}}],["src/app/model/score.ts:6",{"_index":1098,"title":{},"body":{"classes/Score.html":{}}}],["src/app/option/option.component.ts",{"_index":718,"title":{},"body":{"components/OptionComponent.html":{},"coverage.html":{}}}],["src/app/option/option.component.ts:13",{"_index":725,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:15",{"_index":724,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:17",{"_index":727,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:19",{"_index":723,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:23",{"_index":730,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:26",{"_index":729,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/option/option.component.ts:31",{"_index":731,"title":{},"body":{"components/OptionComponent.html":{}}}],["src/app/phaser/bullet.ts",{"_index":461,"title":{},"body":{"classes/Bullet.html":{},"coverage.html":{}}}],["src/app/phaser/bullet.ts:2",{"_index":477,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:3",{"_index":478,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:4",{"_index":475,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:40",{"_index":482,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:5",{"_index":476,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:6",{"_index":479,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:7",{"_index":473,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/bullet.ts:74",{"_index":486,"title":{},"body":{"classes/Bullet.html":{}}}],["src/app/phaser/config.ts",{"_index":1214,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/phaser/phaser.component.ts",{"_index":749,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"coverage.html":{}}}],["src/app/phaser/phaser.component.ts:15",{"_index":767,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:154",{"_index":1151,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:17",{"_index":763,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:173",{"_index":1153,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:181",{"_index":1161,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:19",{"_index":768,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:207",{"_index":1159,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:21",{"_index":754,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:245",{"_index":1155,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:28",{"_index":756,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:305",{"_index":1162,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:34",{"_index":758,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:340",{"_index":1167,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:366",{"_index":1169,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:374",{"_index":1157,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:393",{"_index":1164,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:40",{"_index":759,"title":{},"body":{"components/PhaserComponent.html":{}}}],["src/app/phaser/phaser.component.ts:426",{"_index":1170,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:432",{"_index":1171,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:47",{"_index":1143,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:48",{"_index":1127,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:49",{"_index":1128,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:50",{"_index":1129,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:51",{"_index":1131,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:52",{"_index":1134,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:53",{"_index":1133,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:54",{"_index":1148,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:55",{"_index":1145,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:56",{"_index":1146,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:57",{"_index":1147,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:58",{"_index":1141,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:59",{"_index":1132,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:60",{"_index":1135,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:61",{"_index":1149,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:62",{"_index":1142,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:63",{"_index":1139,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:64",{"_index":1140,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:65",{"_index":1144,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:66",{"_index":1138,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:67",{"_index":1136,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:68",{"_index":1137,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:69",{"_index":1130,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:71",{"_index":1168,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/phaser/phaser.component.ts:81",{"_index":1150,"title":{},"body":{"classes/SpaceScene.html":{}}}],["src/app/question/question.component.ts",{"_index":1008,"title":{},"body":{"components/QuestionComponent.html":{},"coverage.html":{}}}],["src/app/question/question.component.ts:12",{"_index":1016,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/question/question.component.ts:14",{"_index":1023,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/question/question.component.ts:16",{"_index":1015,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/question/question.component.ts:20",{"_index":1018,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/question/question.component.ts:23",{"_index":1017,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/question/question.component.ts:28",{"_index":1019,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/quiz/quiz.component.ts",{"_index":1057,"title":{},"body":{"components/QuizComponent.html":{},"coverage.html":{}}}],["src/app/quiz/quiz.component.ts:13",{"_index":1075,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:15",{"_index":1063,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:17",{"_index":1062,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:21",{"_index":1074,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:26",{"_index":1067,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:55",{"_index":1064,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/quiz/quiz.component.ts:60",{"_index":1069,"title":{},"body":{"components/QuizComponent.html":{}}}],["src/app/services/game.service.ts",{"_index":615,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/app/services/game.service.ts:13",{"_index":620,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:21",{"_index":623,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/user.service.ts",{"_index":1172,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:13",{"_index":1175,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:20",{"_index":1176,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:28",{"_index":1178,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/space/space.component.ts",{"_index":1104,"title":{},"body":{"components/SpaceComponent.html":{},"coverage.html":{}}}],["src/app/space/space.component.ts:12",{"_index":1108,"title":{},"body":{"components/SpaceComponent.html":{}}}],["src/app/space/space.component.ts:14",{"_index":1107,"title":{},"body":{"components/SpaceComponent.html":{}}}],["src/app/space/space.component.ts:18",{"_index":1109,"title":{},"body":{"components/SpaceComponent.html":{}}}],["src/app/space/space.component.ts:22",{"_index":1110,"title":{},"body":{"components/SpaceComponent.html":{}}}],["src/app/space/space.component.ts:27",{"_index":1111,"title":{},"body":{"components/SpaceComponent.html":{}}}],["src/assets/title_different_fonts.ts",{"_index":1223,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1224,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1226,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["starfield",{"_index":788,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["starfield's",{"_index":839,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["start",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["started",{"_index":1247,"title":{"index.html":{}},"body":{}}],["startedgame",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["startgame",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["starting",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/QuizComponent.html":{}}}],["state",{"_index":979,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["statements",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["statetext",{"_index":793,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["sticky",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["still",{"_index":918,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["stopgame",{"_index":559,"title":{},"body":{"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["stops",{"_index":760,"title":{},"body":{"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["store",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["stored",{"_index":1262,"title":{},"body":{"index.html":{}}}],["stressful",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"index.html":{}}}],["stressfulmoviequiz",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["string",{"_index":39,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"injectables/GameService.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"classes/Score.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{}}}],["style",{"_index":721,"title":{},"body":{"components/OptionComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["submit",{"_index":694,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["submitleader",{"_index":698,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["submits",{"_index":661,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["submitted",{"_index":649,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["subtracted",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["super(scene",{"_index":489,"title":{},"body":{"classes/Bullet.html":{}}}],["support",{"_index":1271,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":842,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["svg",{"_index":1272,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":109,"title":{},"body":{"components/AnswerComponent.html":{}}}],["switch",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["switching",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["table",{"_index":697,"title":{},"body":{"components/LeaderboardComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1227,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["taken",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["target",{"_index":481,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["target.x",{"_index":527,"title":{},"body":{"classes/Bullet.html":{}}}],["target.y",{"_index":530,"title":{},"body":{"classes/Bullet.html":{}}}],["tell",{"_index":490,"title":{},"body":{"classes/Bullet.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["temporaryvalue",{"_index":100,"title":{},"body":{"components/AnswerComponent.html":{}}}],["text",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["things",{"_index":520,"title":{},"body":{"classes/Bullet.html":{}}}],["this.add.group",{"_index":855,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.add.text",{"_index":850,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.add.tilesprite",{"_index":846,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.aliens",{"_index":870,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.aliens.clear",{"_index":974,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.aliens.countactive",{"_index":995,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.aliens.getchildren().filter",{"_index":921,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.anims.create",{"_index":825,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.anims.generateframenumbers",{"_index":828,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.answers",{"_index":1056,"title":{},"body":{"classes/Quiz.html":{}}}],["this.born",{"_index":501,"title":{},"body":{"classes/Bullet.html":{}}}],["this.bullets",{"_index":874,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.bullets.clear",{"_index":971,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.bullets.get().setactive",{"_index":898,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.childcomp.stopgame",{"_index":1118,"title":{},"body":{"components/SpaceComponent.html":{}}}],["this.clicked.emit(false",{"_index":744,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.clicked.emit(true",{"_index":743,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.clicked.emit(valueemitted",{"_index":114,"title":{},"body":{"components/AnswerComponent.html":{},"components/QuizComponent.html":{}}}],["this.code",{"_index":717,"title":{},"body":{"classes/Movie.html":{}}}],["this.config",{"_index":771,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.config.scene",{"_index":772,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.correctanswer",{"_index":599,"title":{},"body":{"components/GameComponent.html":{},"classes/Quiz.html":{}}}],["this.counter",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.counter+1)%this.titles.length",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.createaliens",{"_index":872,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.createbullets",{"_index":875,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.creategameovermodal",{"_index":888,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.createplayerlives",{"_index":858,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.cursors",{"_index":879,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.description",{"_index":1042,"title":{},"body":{"components/QuestionComponent.html":{},"classes/Quiz.html":{}}}],["this.description.split",{"_index":1031,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.description1",{"_index":1036,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.description2",{"_index":1039,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.direction",{"_index":503,"title":{},"body":{"classes/Bullet.html":{}}}],["this.enemybullets",{"_index":876,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.enemybullets.clear",{"_index":972,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.enemybullets.get().setactive",{"_index":916,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.explosions",{"_index":877,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.explosions.clear",{"_index":973,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.explosions.get().setactive",{"_index":984,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.fireenemybullet",{"_index":1007,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.fireplayerbullet",{"_index":887,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameover",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.gameover.emit(score",{"_index":777,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameover.emit(valueemitted",{"_index":1117,"title":{},"body":{"components/SpaceComponent.html":{}}}],["this.gameovermodal",{"_index":945,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovermodal.fillrect",{"_index":951,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovermodal.fillstyle",{"_index":947,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovermodal.visible",{"_index":955,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovertext",{"_index":957,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovertext.setorigin",{"_index":959,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameovertext.visible",{"_index":960,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.gameservice.getquiz(this.level).subscribe",{"_index":1082,"title":{},"body":{"components/QuizComponent.html":{}}}],["this.gameservice.url",{"_index":1081,"title":{},"body":{"components/QuizComponent.html":{}}}],["this.getleaders",{"_index":676,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.getquiz",{"_index":1079,"title":{},"body":{"components/QuizComponent.html":{}}}],["this.handleenemycollision",{"_index":911,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.handlegameover",{"_index":998,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.handleplayercollision",{"_index":937,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.http.get(this.url",{"_index":639,"title":{},"body":{"injectables/GameService.html":{},"injectables/UserService.html":{}}}],["this.http.post(this.url",{"_index":1191,"title":{},"body":{"injectables/UserService.html":{}}}],["this.input.keyboard.addkeys",{"_index":880,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.isenemybullet",{"_index":495,"title":{},"body":{"classes/Bullet.html":{}}}],["this.isgameover",{"_index":969,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.lastalienbullettime",{"_index":940,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.lastplayerbullettime",{"_index":903,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.leaderboardempty",{"_index":674,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.leaders",{"_index":689,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.leaders.length",{"_index":690,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.level",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.livingaliens",{"_index":920,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.livingaliens.length",{"_index":924,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.image('background",{"_index":820,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.image('bullet",{"_index":802,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.image('enemybullet",{"_index":804,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.image('ship",{"_index":812,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.image('starfield",{"_index":818,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.spritesheet('invader",{"_index":807,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.load.spritesheet('kaboom",{"_index":814,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.movie.code",{"_index":742,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.obs",{"_index":601,"title":{},"body":{"components/GameComponent.html":{}}}],["this.obs.subscribe",{"_index":603,"title":{},"body":{"components/GameComponent.html":{}}}],["this.observ",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.observ.subscribe",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.phasergame",{"_index":774,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.phasergame.destroy(true",{"_index":778,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.phasergame.scene.scenes[0].score",{"_index":779,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.physics.add.group",{"_index":871,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.physics.add.sprite",{"_index":862,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.player",{"_index":861,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.player.active",{"_index":892,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.player.setactive",{"_index":976,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.player.setcollideworldbounds",{"_index":867,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.player.setorigin",{"_index":865,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.playerlives",{"_index":854,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.playerlives.clear",{"_index":975,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.playerlives.countactive",{"_index":1006,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.poster",{"_index":715,"title":{},"body":{"classes/Movie.html":{}}}],["this.quiz",{"_index":1086,"title":{},"body":{"components/QuizComponent.html":{}}}],["this.removelife",{"_index":1005,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.rotation",{"_index":537,"title":{},"body":{"classes/Bullet.html":{}}}],["this.score",{"_index":598,"title":{},"body":{"components/GameComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.score.scoreno",{"_index":691,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.scoreno",{"_index":1103,"title":{},"body":{"classes/Score.html":{}}}],["this.scoreprefix",{"_index":851,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.scoretext",{"_index":849,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.scoretext.settext",{"_index":994,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.setactive",{"_index":549,"title":{},"body":{"classes/Bullet.html":{}}}],["this.setdifferentmovietitle",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.setgameover(this.score",{"_index":780,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.setposition",{"_index":517,"title":{},"body":{"classes/Bullet.html":{}}}],["this.setsize",{"_index":511,"title":{},"body":{"classes/Bullet.html":{}}}],["this.settime",{"_index":604,"title":{},"body":{"components/GameComponent.html":{}}}],["this.setvisible",{"_index":550,"title":{},"body":{"classes/Bullet.html":{}}}],["this.shuffle(this.movies",{"_index":96,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.shufflemovies",{"_index":95,"title":{},"body":{"components/AnswerComponent.html":{}}}],["this.speed",{"_index":498,"title":{},"body":{"classes/Bullet.html":{}}}],["this.starfield",{"_index":845,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.starfield.setscale",{"_index":848,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.startedgame",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.style",{"_index":740,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.submitted",{"_index":675,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.sys.canvas.width",{"_index":856,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["this.timer",{"_index":600,"title":{},"body":{"components/GameComponent.html":{}}}],["this.title",{"_index":716,"title":{},"body":{"classes/Movie.html":{}}}],["this.titles",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.titles[this.counter",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.titlesrc",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.totalscore",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["this.updatedescriptions",{"_index":1029,"title":{},"body":{"components/QuestionComponent.html":{}}}],["this.user",{"_index":1102,"title":{},"body":{"classes/Score.html":{}}}],["this.userservice.getscores().subscribe",{"_index":688,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.userservice.postscore(this.score).subscribe",{"_index":692,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.userservice.url",{"_index":687,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["this.welcome",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["this.x",{"_index":528,"title":{},"body":{"classes/Bullet.html":{}}}],["this.xspeed",{"_index":507,"title":{},"body":{"classes/Bullet.html":{}}}],["this.y",{"_index":531,"title":{},"body":{"classes/Bullet.html":{}}}],["this.yspeed",{"_index":508,"title":{},"body":{"classes/Bullet.html":{}}}],["those",{"_index":524,"title":{},"body":{"classes/Bullet.html":{}}}],["through",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["thus",{"_index":1024,"title":{},"body":{"components/QuestionComponent.html":{}}}],["tile",{"_index":840,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["time",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["timebar",{"_index":577,"title":{},"body":{"components/GameComponent.html":{}}}],["timer",{"_index":556,"title":{},"body":{"components/GameComponent.html":{}}}],["timerbar",{"_index":610,"title":{},"body":{"components/GameComponent.html":{}}}],["timerbar::before",{"_index":612,"title":{},"body":{"components/GameComponent.html":{}}}],["times",{"_index":587,"title":{},"body":{"components/GameComponent.html":{}}}],["title",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{}}}],["titles",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["titlesrc",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["tmp",{"_index":679,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["tmp.slice(0,2).join",{"_index":681,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["top",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["total",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["totalscore",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["track",{"_index":546,"title":{},"body":{"classes/Bullet.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["trailing",{"_index":684,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["transmitted",{"_index":668,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["traveling",{"_index":502,"title":{},"body":{"classes/Bullet.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["triggered",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["triggers",{"_index":732,"title":{},"body":{"components/OptionComponent.html":{}}}],["true",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/QuizComponent.html":{}}}],["trying",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["tslib",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1021,"title":{},"body":{"components/QuestionComponent.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"classes/Movie.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/Quiz.html":{},"components/QuizComponent.html":{},"classes/Score.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":1119,"title":{},"body":{"components/SpaceComponent.html":{}}}],["up",{"_index":884,"title":{},"body":{"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"classes/SpaceScene.html":{}}}],["update",{"_index":468,"title":{},"body":{"classes/Bullet.html":{},"components/GameComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["update(time",{"_index":484,"title":{},"body":{"classes/Bullet.html":{},"classes/SpaceScene.html":{}}}],["updatedescriptions",{"_index":1014,"title":{},"body":{"components/QuestionComponent.html":{}}}],["upload",{"_index":1179,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":616,"title":{},"body":{"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"classes/Movie.html":{},"components/QuizComponent.html":{},"injectables/UserService.html":{}}}],["url.slice(0",{"_index":683,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["use",{"_index":492,"title":{},"body":{"classes/Bullet.html":{},"index.html":{}}}],["used",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["user",{"_index":658,"title":{},"body":{"components/LeaderboardComponent.html":{},"classes/Score.html":{},"injectables/UserService.html":{}}}],["username",{"_index":693,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["users",{"_index":673,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["userservice",{"_index":414,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/LeaderboardComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uzh",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":901,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["validate",{"_index":722,"title":{},"body":{"components/OptionComponent.html":{}}}],["value",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["valueemitted",{"_index":59,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"interfaces/Level.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{}}}],["var",{"_index":97,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["variable",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"coverage.html":{}}}],["variables",{"_index":1277,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1252,"title":{},"body":{"index.html":{}}}],["very",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{},"index.html":{}}}],["view",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/LeaderboardComponent.html":{},"interfaces/Level.html":{}}}],["viewchild",{"_index":596,"title":{},"body":{"components/GameComponent.html":{},"components/SpaceComponent.html":{}}}],["viewchild(phasercomponent",{"_index":1115,"title":{},"body":{"components/SpaceComponent.html":{}}}],["viewchild(spacecomponent",{"_index":583,"title":{},"body":{"components/GameComponent.html":{}}}],["viewvalue",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["visible",{"_index":896,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["void",{"_index":61,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"classes/Bullet.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/PhaserComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["wanting",{"_index":962,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["weight",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["welcome",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Level.html":{}}}],["whether",{"_index":670,"title":{},"body":{"components/LeaderboardComponent.html":{}}}],["white",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{}}}],["width",{"_index":128,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/GameComponent.html":{},"components/LeaderboardComponent.html":{},"components/QuestionComponent.html":{},"miscellaneous/variables.html":{}}}],["window",{"_index":944,"title":{},"body":{"components/PhaserComponent.html":{},"components/SpaceComponent.html":{},"classes/SpaceScene.html":{}}}],["window.location.href",{"_index":678,"title":{},"body":{"components/LeaderboardComponent.html":{},"components/QuizComponent.html":{}}}],["window[\"angularlink",{"_index":776,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["winning",{"_index":997,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["wire",{"_index":883,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["wordlist",{"_index":1030,"title":{},"body":{"components/QuestionComponent.html":{}}}],["wordlist.length).join",{"_index":1041,"title":{},"body":{"components/QuestionComponent.html":{}}}],["wordlist.slice(0",{"_index":1037,"title":{},"body":{"components/QuestionComponent.html":{}}}],["wordlist.slice(half",{"_index":1040,"title":{},"body":{"components/QuestionComponent.html":{}}}],["wrap",{"_index":119,"title":{},"body":{"components/AnswerComponent.html":{},"components/AppComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizComponent.html":{}}}],["wrapper",{"_index":116,"title":{},"body":{"components/AnswerComponent.html":{},"components/LeaderboardComponent.html":{},"components/OptionComponent.html":{},"components/QuestionComponent.html":{}}}],["wrapper2",{"_index":125,"title":{},"body":{"components/AnswerComponent.html":{}}}],["wrong",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{},"components/OptionComponent.html":{}}}],["x",{"_index":470,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["xdifference",{"_index":526,"title":{},"body":{"classes/Bullet.html":{}}}],["xmlhttprequest",{"_index":1087,"title":{},"body":{"components/QuizComponent.html":{}}}],["xspeed",{"_index":465,"title":{},"body":{"classes/Bullet.html":{}}}],["y",{"_index":471,"title":{},"body":{"classes/Bullet.html":{},"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["ydifference",{"_index":529,"title":{},"body":{"classes/Bullet.html":{}}}],["you'll",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["you\\'ll",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["yspeed",{"_index":466,"title":{},"body":{"classes/Bullet.html":{}}}],["ze",{"_index":935,"title":{},"body":{"components/PhaserComponent.html":{},"classes/SpaceScene.html":{}}}],["zone.js",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AnswerComponent.html":{"url":"components/AnswerComponent.html","title":"component - AnswerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AnswerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/answer/answer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-answer\n            \n\n            \n                styleUrls\n                ./answer.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./answer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventFromOption\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                shuffle\n                            \n                            \n                                shuffleMovies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                correctAnswer\n                            \n                            \n                                movies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/answer/answer.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        correctAnswer\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:15\n                            \n                        \n                \n                    \n                        The code of the correct movie \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        movies\n                    \n                \n                \n                    \n                        Type :         Movie[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:13\n                            \n                        \n                \n                    \n                        Movies provided by the QuizComponent \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/answer/answer.component.ts:17\n                            \n                        \n                \n                    \n                        Forwards to the QuizComponent if the clicked OptionComponent contained the correct answer or not\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventFromOption\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventFromOption(valueEmitted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/answer/answer.component.ts:55\n                \n            \n\n\n            \n                \n                    Receives the information if the clicked OptionComponent was the correct answer or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/answer/answer.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/answer/answer.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffle\n                        \n                        \n                    \n                \n            \n            \n                \nshuffle(array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/answer/answer.component.ts:35\n                \n            \n\n\n            \n                \n                    Algorithm to shuffle the elements of an array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffleMovies\n                        \n                        \n                    \n                \n            \n            \n                \nshuffleMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/answer/answer.component.ts:30\n                \n            \n\n\n            \n                \n                    In the received movie array (AnswerComponent.movies), the correct movie is always at position 1. This method shuffles the array in order to make the quiz more challenging.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport {Movie} from '../model/movie';\n\n@Component({\n  selector: 'app-answer',\n  templateUrl: './answer.component.html',\n  styleUrls: ['./answer.component.sass']\n})\n/**Representation of the possible Answers to the Quiz Part */\nexport class AnswerComponent implements OnInit, OnChanges {\n\n  /**Movies provided by the QuizComponent */\n  @Input() movies: Movie[];\n  /**The code of the correct movie */\n  @Input() correctAnswer: string;\n  /**Forwards to the {@link QuizComponent} if the clicked OptionComponent contained the correct answer or not*/\n  @Output() clicked: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    this.shuffleMovies();\n  }\n\n  ngOnChanges(){\n    this.shuffleMovies();\n  }\n\n  /**In the received movie array ({@link AnswerComponent.movies}), the correct movie is always at position 1. This method shuffles the array in order to make the quiz more challenging.*/\n  shuffleMovies(){\n    this.shuffle(this.movies);\n  }\n\n  /**Algorithm to shuffle the elements of an array.*/\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex); // nosonar\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n\n  /**Receives the information if the clicked OptionComponent was the correct answer or not.*/\n  getEventFromOption(valueEmitted: boolean){\n    this.clicked.emit(valueEmitted);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./answer.component.sass\n                \n                div\n    .wrapper\n        display: flex\n        flex-wrap: wrap\n        justify-content: center\n        align-items: center\n    .wrapper2\n        display: flex\n        flex-wrap: nowrap\n        justify-content: center\n        align-items: center\n    .option\n        width: 50%\n        align-self: center\n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnswerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                counter\n                            \n                            \n                                gameover\n                            \n                            \n                                level\n                            \n                            \n                                levels\n                            \n                            \n                                observ\n                            \n                            \n                                startedGame\n                            \n                            \n                                title\n                            \n                            \n                                titles\n                            \n                            \n                                titlesrc\n                            \n                            \n                                totalScore\n                            \n                            \n                                welcome\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToStart\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                restartGame\n                            \n                            \n                                selected\n                            \n                            \n                                setDifferentMovieTitle\n                            \n                            \n                                setGameOver\n                            \n                            \n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:50\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backToStart\n                        \n                        \n                    \n                \n            \n            \n                \nbackToStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:98\n                \n            \n\n\n            \n                \n                    Switching from the ending view to the starting view.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restartGame\n                        \n                        \n                    \n                \n            \n            \n                \nrestartGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:90\n                \n            \n\n\n            \n                \n                    Switching from the ending view to the game view.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:104\n                \n            \n\n\n            \n                \n                    Assign the selected level of difficulty to AppComponent.level \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDifferentMovieTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetDifferentMovieTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:65\n                \n            \n\n\n            \n                \n                    Method responsible for switching the title pictures with different movie fonts.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOver(valueEmitted: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:81\n                \n            \n\n\n            \n                \n                    Switching from the game view to the ending view. Triggered when the game is over.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startGame\n                        \n                        \n                    \n                \n            \n            \n                \nstartGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:73\n                \n            \n\n\n            \n                \n                    Switching from the starting view to the game view.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            counter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                        Counter to iterate through AppComponent.titles\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameover\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        Flag to display or hidde ending view \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:43\n                            \n                        \n\n                \n                    \n                        Level of difficulty. Default = 1 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            levels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Level[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {value: 1, viewValue: 'Easy'},\n    {value: 2, viewValue: 'Medium'},\n    {value: 3, viewValue: 'Hard'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:46\n                            \n                        \n\n                \n                    \n                        Available Level of Difficulty in the dropdown list when starting the game \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observ\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n                \n                    \n                        Observable responsible to switch title image path every 10s\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startedGame\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n                \n                    \n                        Flag to display or hidde game view \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'The Very Stressful Movie Quiz'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n                \n                    \n                        Array of the different title picture paths used for AppComponent.titlesrc\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titlesrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n                \n                    \n                        Path to the title picture \"The Very Stressful Movie Quiz\" in different movie fonts \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n                \n                    \n                        Variable to store total score after game has finished \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            welcome\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                        Flag to display or hidde starting view \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { titles } from '../assets/title_different_fonts';\nimport { interval } from 'rxjs';\n\n/**\n * Interface for the Dropdown list to choose the Level of Difficulty\n */\nexport interface Level {\n  /**Actual value*/\n  value: number;\n  /**Value displayed in the dropdown list*/\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\n\n/** \n *Top Level Component\n */\nexport class AppComponent implements OnInit{\n  title = 'The Very Stressful Movie Quiz';\n  /**Flag to display or hidde starting view */\n  welcome = true;\n  /**Flag to display or hidde game view */\n  startedGame = false;\n  /**Flag to display or hidde ending view */\n  gameover = false;\n  /**Variable to store total score after game has finished */\n  totalScore = 0;\n  /**Path to the title picture \"The Very Stressful Movie Quiz\" in different movie fonts */\n  titlesrc: string;\n  /**Array of the different title picture paths used for {@link AppComponent.titlesrc}*/\n  titles: string[];\n  /**Counter to iterate through {@link AppComponent.titles}*/\n  counter = 0;\n  /** Observable responsible to switch title image path every 10s*/\n  observ;\n  /**Level of difficulty. Default = 1 */\n  level = 1;\n\n  /**Available Level of Difficulty in the dropdown list when starting the game */\n  levels: Level[] = [\n    {value: 1, viewValue: 'Easy'},\n    {value: 2, viewValue: 'Medium'},\n    {value: 3, viewValue: 'Hard'}\n  ]\n\n  constructor(){\n  }\n\n  ngOnInit(){\n    this.titles = titles;\n    this.setDifferentMovieTitle();\n    this.observ = interval(10000);\n    this.observ.subscribe(() => this.setDifferentMovieTitle());\n  }\n\n  /**\n   * Method responsible for switching the title pictures with different movie fonts.\n   */\n  setDifferentMovieTitle(){\n    this.titlesrc = this.titles[this.counter];\n    this.counter = (this.counter+1)%this.titles.length;\n  }\n\n  /**\n   * Switching from the starting view to the game view.\n   */\n  startGame(){\n    this.startedGame = true\n    this.welcome = false\n  }\n\n /**\n   * Switching from the game view to the ending view. Triggered when the game is over.\n   */\n  setGameOver(valueEmitted: integer){\n    this.gameover = true;\n    this.startedGame = false;\n    this.totalScore = valueEmitted;\n  }\n\n  /**\n   * Switching from the ending view to the game view.\n   */\n  restartGame(){\n    this.startedGame = true;\n    this.gameover = false;\n  }\n\n  /**\n   * Switching from the ending view to the starting view.\n   */\n  backToStart(){\n    this.welcome = true;\n    this.gameover = false;  \n  }\n\n  /**Assign the selected level of difficulty to {@link AppComponent.level} */\n  selected(){\n    this.level = +document.getElementsByTagName(\"select\")[0].value;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n  {{title}}\n\n\n  \n    \n    \n    \n  \n\n  \n    Welcome to the Very Stressful Movie Quiz!\n\n  Ever got bored during regular quizzes? Boy do I have a game for you! \n\n    Instructions\n     \n      \n        \n      \n      \n        Read the description on the bottom left and match it to the correct movie title.\n        \n        You get 20 seconds to play the quiz. Each correctly guessed movie grants you another few seconds. The harder the chosen level the less additional time.\n        \n        For each correct answer you'll get points and you are getting a bonus for guessing correctly consecutively. Guess wrong and 5 points are subtracted\n        \n        But a movie quiz is too relaxing. This is why you are trying to defend Earth from an Alien Invasion at the same time. \n        \n        For each enemy you shoot you'll receive +20 points and an additional 1000 points if all enemies were killed.\n        \n        You start with a total of 3 lives. For each hit you take from the enemy bullets, one live will be taken away. \n        \n        The game is finished if there are no more aliens left, if you lost all your lives or if the time runs out.\n        \n      \n    \n\n    \n      Start the game!\n      \n      \n        Level:\n        \n          {{lvl.viewValue}}\n        \n      \n    \n    \n    \n      \n    \n  \n\n  \n    \n  \n  \n    Your Total Score is {{totalScore}}\n    \n    \n      Try again\n      Back to Instructions  \n    \n\n    \n      \n    \n  \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.sass\n                \n                div.game\n    background-color: black\n    border: white 1px solid\n    margin: 0 auto\n    max-width: 95%\n    min-height: 80%\n    max-height: 90%\n    height: 100%\n    padding: 2%\n    border-radius: 25px\n    position: sticky\n    bottom: 10px\n\n.title\n    display: flex\n    justify-content: center\n    background-color: white\n    padding: 30px\n    margin-bottom: 100px\n    text-align: center\n    font-size: 50pt\n\n    h1 \n        margin-left: 100px\n        margin-right: 100px\n    .popcorn\n        width: 150px\n        height: auto\n\n.stressfulmoviequiz\n    width: 70%\n    margin: 5px 50px\n\n.starting\n    display: flex\n    flex-direction: column\n    justify-content: center\n    align-items: center\n    h1 \n        text-shadow: 0 0 5px white\n        font-size: 60pt\n\n    h2 \n        text-shadow: 0 0 5px white\n        font-size: 40pt\n\n    .quizdescription\n        font-size: 25pt\n        font-weight: bold\n        text-align: justify\n        background: white\n        padding: 20px\n    .instructions\n        display: flex\n        justify-content: center\n        align-items: center\n        width: 60%\n        margin: 20px 0\n\n        .text\n            width: 35%\n            font-size: 25pt\n            font-weight: bold\n            text-align: justify\n            background: white\n            padding: 20px\n        \n        img \n            width: 80%\n\n.gameover\n    display: flex\n    flex-direction: column\n    justify-content: center\n    align-items: center\n    \n    h1 \n        text-shadow: 0 0 5px white\n        font-size: 60pt\n    \n    h2 \n        text-shadow: 0 0 5px white\n        font-size: 40pt\n    \n    .buttons\n        display: flex\n        flex-direction: wrap\n        justify-content: center\n\n        button\n            margin: 10px 40px\n\n.leaderboard\n    width: 80%\n    display: flex\n    flex-direction: column\n    align-content: center\n    justify-content: center\n\n.startgame\n    display: flex\n    width: 40%\n    justify-content: space-between\n    margin: 50px 0 30px 0\n\n.leveldifficulty\n    display: flex\n    justify-content: space-between\n    align-items: center\n    width: 40%\n    font-size: 30pt\n    background-color: white\n    padding: 5px\n\n    label \n        width: 35%\n        margin-right: 40px\n    select\n        width: 60%\n        font: 400 20pt Arial\n        padding: 5px\n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}                      Welcome to the Very Stressful Movie Quiz!  Ever got bored during regular quizzes? Boy do I have a game for you!     Instructions                                       Read the description on the bottom left and match it to the correct movie title.                You get 20 seconds to play the quiz. Each correctly guessed movie grants you another few seconds. The harder the chosen level the less additional time.                For each correct answer you\\'ll get points and you are getting a bonus for guessing correctly consecutively. Guess wrong and 5 points are subtracted                But a movie quiz is too relaxing. This is why you are trying to defend Earth from an Alien Invasion at the same time.                 For each enemy you shoot you\\'ll receive +20 points and an additional 1000 points if all enemies were killed.                You start with a total of 3 lives. For each hit you take from the enemy bullets, one live will be taken away.                 The game is finished if there are no more aliens left, if you lost all your lives or if the time runs out.                            Start the game!                    Level:                  {{lvl.viewValue}}                                                    Your Total Score is {{totalScore}}              Try again      Back to Instructions                        '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAnswerComponent\n\nAnswerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnswerComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nLeaderboardComponent\n\nLeaderboardComponent\n\nAppModule -->\n\nLeaderboardComponent->AppModule\n\n\n\n\n\nOptionComponent\n\nOptionComponent\n\nAppModule -->\n\nOptionComponent->AppModule\n\n\n\n\n\nPhaserComponent\n\nPhaserComponent\n\nAppModule -->\n\nPhaserComponent->AppModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\nAppModule -->\n\nQuestionComponent->AppModule\n\n\n\n\n\nQuizComponent\n\nQuizComponent\n\nAppModule -->\n\nQuizComponent->AppModule\n\n\n\n\n\nSpaceComponent\n\nSpaceComponent\n\nAppModule -->\n\nSpaceComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGameService\n\nGameService\n\nAppModule -->\n\nGameService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AnswerComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            GameComponent\n                        \n                        \n                            LeaderboardComponent\n                        \n                        \n                            OptionComponent\n                        \n                        \n                            PhaserComponent\n                        \n                        \n                            QuestionComponent\n                        \n                        \n                            QuizComponent\n                        \n                        \n                            SpaceComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule }   from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SpaceComponent } from './space/space.component';\nimport { QuizComponent } from './quiz/quiz.component';\nimport { AnswerComponent } from './answer/answer.component';\nimport { QuestionComponent } from './question/question.component';\nimport { GameComponent } from './game/game.component';\nimport { OptionComponent } from './option/option.component';\nimport { GameService } from './services/game.service';\nimport { UserService} from './services/user.service';\nimport { PhaserComponent } from './phaser/phaser.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LeaderboardComponent } from './leaderboard/leaderboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SpaceComponent,\n    QuizComponent,\n    AnswerComponent,\n    QuestionComponent,\n    GameComponent,\n    OptionComponent,\n    PhaserComponent,\n    LeaderboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule\n  ],\n  providers: [GameService, UserService],\n  bootstrap: [AppComponent]\n  \n})\nexport class AppModule { \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bullet.html":{"url":"classes/Bullet.html","title":"class - Bullet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bullet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/phaser/Bullet.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                born\n                            \n                            \n                                direction\n                            \n                            \n                                isEnemyBullet\n                            \n                            \n                                speed\n                            \n                            \n                                xSpeed\n                            \n                            \n                                ySpeed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fire\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene, x, y, defaultKey)\n                    \n                \n                        \n                            \n                                Defined in src/app/phaser/Bullet.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultKey\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            born\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            direction\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnemyBullet\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            speed\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xSpeed\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ySpeed\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/Bullet.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fire\n                        \n                        \n                    \n                \n            \n            \n                \nfire(shooter, target)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/Bullet.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    shooter\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(time, delta)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/Bullet.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    delta\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Bullet extends Phaser.GameObjects.Image {\n    isEnemyBullet;\n    speed;\n    born;\n    direction;\n    xSpeed;\n    ySpeed;\n\n    constructor(scene, x, y, defaultKey){\n        super(scene, x, y, defaultKey);\n        // Tell Phaser to use our preloaded image.\n        Phaser.GameObjects.Image.call( this, scene, 0, 0, defaultKey );\n\n        // Is this a bullet for the enemy?\n        this.isEnemyBullet = ( defaultKey === 'enemyBullet' );\n\n        // This is our base speed.\n        this.speed = 0.1;\n\n        // This is the time when the bullet was \"born\" (fired).\n        this.born = 0;\n\n        // This is the direction the bullet is traveling.\n        this.direction = 0;\n\n        // This is the bullet's speed along the x-axis.\n        this.xSpeed = 0;\n\n        // This is the bullet's speed along the y-axis.\n        this.ySpeed = 0;\n\n        // Set the image size based on the type of bullet.\n        if ( this.isEnemyBullet ) {\n            this.setSize( 9, 9 );\n        } else {\n            this.setSize( 6, 36 );\n        }\n    }\n\n    fire(shooter, target){\n        // Set the starting x- and y-coordinates to the shooter's.\n        this.setPosition( shooter.x, shooter.y );\n\n        // Set things assuming that the player is shooting.\n        this.direction = 90;\n        this.xSpeed = 0;\n        this.ySpeed = -this.speed;\n        this.born = 0;\n\n        // But if an alien is shooting, reset those.\n        if ( this.isEnemyBullet ) {\n\n            // Calculate the direction.\n            var xDifference = target.x - this.x;\n            var yDifference = target.y - this.y;\n            this.direction = Math.atan( xDifference / yDifference );\n\n            // Calculate the x-axis speed against the direction.\n            this.xSpeed = this.speed * Math.sin( this.direction );\n\n            // Calculate the y-axis speed against the direction.\n            this.ySpeed = this.speed * Math.cos( this.direction );\n\n            // Calculate a rotation for an enemy bullet.\n            this.rotation = Phaser.Math.Angle.Between(\n                shooter.x,\n                shooter.y,\n                target.x,\n                target.y\n            );\n        }\n    }\n\n    update(time, delta){\n       // Set this bullet's x-coordinate.\n       this.x += this.xSpeed * delta;\n\n       // Set this bullet's y-coordinate.\n       this.y += this.ySpeed * delta;\n\n       // Update this bullet's born time.\n       this.born += delta;\n\n       // If it's more than 5,000 milliseconds, it's off the screen.\n       // Remove it from the game, so Phaser doesn't have to track it anymore.\n       if ( this.born > 5000 ) {\n           this.setActive( false );\n           this.setVisible( false );\n       } \n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponent.html":{"url":"components/GameComponent.html","title":"component - GameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/game.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game\n            \n\n            \n                styleUrls\n                ./game.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childcomp\n                            \n                            \n                                correctAnswer\n                            \n                            \n                                obs\n                            \n                            \n                                score\n                            \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTime\n                            \n                            \n                                getEventFromOption\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setGameOver\n                            \n                            \n                                setTime\n                            \n                            \n                                stopGame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameover\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/game/game.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :     integer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:21\n                            \n                        \n                \n                    \n                        Level of difficulty provided by the AppComponent.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        gameover\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:23\n                            \n                        \n                \n                    \n                        Forwards to the AppComponent when the game has ended.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTime\n                        \n                        \n                    \n                \n            \n            \n                \naddTime(delta: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:47\n                \n            \n\n\n            \n                \n                    This method is triggered when the player answered the quiz correctly. \nThe player then is awarded additional time.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delta\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventFromOption\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventFromOption(valueEmitted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:56\n                \n            \n\n\n            \n                \n                    Receives the information if the clicked OptionComponent was the correct answer or not.\nThe player receives points on a correct answer and 5 points are subtracted on a wrong answer.\nOn a correct answer, the amount of additional time depends on the level of difficulty (GameComponent.level and \nthe amount of points on the number of consecutively correct answered questions (GameComponent.correctAnswer).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOver(valueEmitted: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:68\n                \n            \n\n\n            \n                \n                    Triggered when the player lost in the shooting game part of the game (PhaserComponent).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTime\n                        \n                        \n                    \n                \n            \n            \n                \nsetTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:38\n                \n            \n\n\n            \n                \n                    Method to update timebar to simulate time running out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopGame\n                        \n                        \n                    \n                \n            \n            \n                \nstopGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:73\n                \n            \n\n\n            \n                \n                    Triggered when time runs out on the timebar (GameComponent.timer) \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childcomp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SpaceComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SpaceComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:25\n                            \n                        \n\n                \n                    \n                        Keeps track of SpaceComponent.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            correctAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     integer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:15\n                            \n                        \n\n                \n                    \n                        Keeps track of how many times the player answered correctly to the movie quiz.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:19\n                            \n                        \n\n                \n                    \n                        Observable which helps evaluating the current length of the timebar.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     integer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:13\n                            \n                        \n\n                \n                    \n                        Current score to the Movie Quiz part of the game. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     integer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/game/game.component.ts:17\n                            \n                        \n\n                \n                    \n                        Represents the length of the timebar in percent.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, ViewChild, Input } from '@angular/core';\nimport {Observable, interval} from 'rxjs';\nimport { SpaceComponent } from '../space/space.component';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.sass']\n})\n/**Represents the game and contains the quiz and shooting game.  */\nexport class GameComponent implements OnInit {\n  /**Current score to the Movie Quiz part of the game. */\n  score: integer;\n  /**Keeps track of how many times the player answered correctly to the movie quiz.*/\n  correctAnswer: integer;\n  /**Represents the length of the timebar in percent.*/\n  timer: integer;\n  /**Observable which helps evaluating the current length of the timebar.*/\n  obs: Observable;\n  /**Level of difficulty provided by the {@link AppComponent}.*/\n  @Input() level: integer;\n  /**Forwards to the {@link AppComponent} when the game has ended.*/\n  @Output() gameover: EventEmitter = new EventEmitter();\n  /**Keeps track of {@link SpaceComponent}.*/ \n  @ViewChild(SpaceComponent) childcomp: SpaceComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.score = 0;\n    this.correctAnswer = 1;\n    this.timer = 100;\n    this.obs = interval(50);\n    this.obs.subscribe(() => this.setTime())\n  }\n\n  /**Method to update timebar to simulate time running out.*/\n  setTime(){\n    this.timer = this.timer - 0.25;\n    if(this.timer \n    \n\n    \n        \n    \n        Score: {{score}}\n        \n        \n    \n    \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./game.component.sass\n                \n                div\n    display: flex\n    justify-content: center\n    padding: 10px\n    background-color: white\n\nh1 \n    margin-bottom: 20px\n    \n.outer\n    border: white 2px solid\n    \n.quiz\n    width: 50%\n    padding: 5px\n    flex-direction: column\n    position: relative\n\n.space\n    display: flex\n    justify-content: center\n    align-items: center\n\n.timerbar\n    display: flex\n    justify-content: flex-start\n    height: 20px\n    background-color: black\n    border-radius: 20px\n    margin: 20px 0px\n\n.timerbar::before\n    content: ''\n    background-color: white\n    border-radius: 20px\n    max-width: 100%\n    width: var(--width)\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Score: {{score}}                                    '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/game.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getQuiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/game.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuiz\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuiz(level: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:21\n                \n            \n\n\n            \n                \n                    Request a quiz data that should be displayed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Game difficulty that the player chose\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/game.service.ts:13\n                            \n                        \n\n                \n                    \n                        Base URL of the server \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { retry } from 'rxjs/operators';\n\n@Injectable()\n/** \n * Service responsible for making calls to the Quiz Microservice. For more information see https://app.swaggerhub.com/apis-docs/ltoedt/ASE/0.1 \n */\nexport class GameService {\n  /**\n   * Base URL of the server \n   */\n  url = \"\"\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Request a quiz data that should be displayed\n   * @param level Game difficulty that the player chose\n   */\n  getQuiz(level: integer){\n    return this.http.get(this.url + \":8080\" + \"/api/quizzes/quiz?level=\" + level)\n    .pipe(\n      retry(3)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeaderboardComponent.html":{"url":"components/LeaderboardComponent.html","title":"component - LeaderboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LeaderboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/leaderboard/leaderboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-leaderboard\n            \n\n            \n                styleUrls\n                ./leaderboard.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./leaderboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leaderboardEmpty\n                            \n                            \n                                leaders\n                            \n                            \n                                score\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLeaders\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameover\n                            \n                            \n                                totalScore\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/leaderboard/leaderboard.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        gameover\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:19\n                            \n                        \n                \n                    \n                        Flag if the leaderboard is displayed at the starting or ending view.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalScore\n                    \n                \n                \n                    \n                        Type :     integer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:17\n                            \n                        \n                \n                    \n                        Total score of a player after the game has finished.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLeaders\n                        \n                        \n                    \n                \n            \n            \n                \ngetLeaders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:34\n                \n            \n\n\n            \n                \n                    Get Top 100 scores from the User Microservice.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/leaderboard/leaderboard.component.ts:51\n                \n            \n\n\n            \n                \n                    Triggered when the player submits her score to the User Microservice.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leaderboardEmpty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:15\n                            \n                        \n\n                \n                    \n                        Flag to make leaderboard invisible in case there are no scores.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Score[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:13\n                            \n                        \n\n                \n                    \n                        List of leaders. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Score('', 0)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:21\n                            \n                        \n\n                \n                    \n                        Potential score transmitted to the User Microservice.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/leaderboard/leaderboard.component.ts:23\n                            \n                        \n\n                \n                    \n                        Flag to indicate whether the player has submitted her score at the end of the game.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport {UserService} from '../services/user.service';\nimport {Score} from '../model/score';\n\n@Component({\n  selector: 'app-leaderboard',\n  templateUrl: './leaderboard.component.html',\n  styleUrls: ['./leaderboard.component.sass']\n})\n/**Contains the top 100 users with their scores.*/\nexport class LeaderboardComponent implements OnInit {\n  /**List of leaders. */\n  leaders: Score[];\n  /**Flag to make leaderboard invisible in case there are no scores.*/\n  leaderboardEmpty: boolean;\n  /**Total score of a player after the game has finished.*/\n  @Input() totalScore: integer;\n  /** Flag if the leaderboard is displayed at the starting or ending view.*/\n  @Input() gameover: boolean;\n  /**Potential score transmitted to the User Microservice.*/\n  score = new Score('', 0);\n  /**Flag to indicate whether the player has submitted her score at the end of the game.*/\n  submitted: boolean;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.leaderboardEmpty = true;\n    this.submitted = false;\n    this.getLeaders();\n  }\n\n  /**Get Top 100 scores from the User Microservice.*/\n  getLeaders(){\n    var loc = window.location.href;\n    var tmp = loc.split(\":\");\n    var url = tmp.slice(0,2).join(\":\");\n    if(tmp.length == 2){\n      url = url.slice(0, -1); // remove trailing \"/\"; otherwise calls \".com/:8080/api\"\n    }\n    this.userService.url = url;\n    \n    this.userService.getScores().subscribe(\n      scores => {\n        this.leaders = scores as Score[];\n        this.leaderboardEmpty = this.leaders.length == 0;\n      })\n  }\n  \n  /**Triggered when the player submits her score to the User Microservice.*/\n  onSubmit(){\n    this.score.scoreNo = this.totalScore;\n    this.userService.postScore(this.score).subscribe(() => this.getLeaders());\n    this.submitted = true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Username: \n      \n    \n\n    Submit your Score\n  \n\nLeaderboard\n\n\n    \n      Leaderboard\n        \n          \n          User\n          Score\n        \n        \n            {{i + 1}}\n            {{leader.user}}\n            {{leader.scoreNo}}\n         \n    \n\n \n\n    \n\n    \n                \n                    ./leaderboard.component.sass\n                \n                .wrapper \n    display: flex\n    flex-direction: column\n    align-items: center\n    width: 100%\n\n.leaderboard\n    display: flex\n    text-align: justify\n    margin: 20px\n    width: 80%\n    background-color: white\n    border-radius: 20px\n    \n    table \n        width: 100%\n        padding: 20px\n        margin: 20px\n        font-size: 30pt\n        border: 5px solid black\n        border-radius: 20px\n\nh2 \n    text-shadow: 0 0 5px white\n    font-size: 40pt\n    text-align: center\n\n \n.submitLeader\n    width: 100%\n    display: flex\n    justify-content: center\n    align-items: center\n    margin: 70px 10px 10px 10px\n\n    .button\n        margin: 20px 0px 60px 0       \n\n.form-group\n    display: flex\n    width: 55%\n    justify-content: space-between\n    align-items: center\n    font-size: 30pt\n    background-color: white\n    padding: 5px\n    margin: 20px 30px 60px 0\n\n    input\n        width: 55%\n        background-color: #ffffffbd\n        font-size: 25pt\n        margin: 5px\n        padding: 5px\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Username:               Submit your Score  Leaderboard          Leaderboard                            User          Score                            {{i + 1}}            {{leader.user}}            {{leader.scoreNo}}              '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeaderboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Level.html":{"url":"interfaces/Level.html","title":"interface - Level","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Level\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the Dropdown list to choose the Level of Difficulty\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Actual value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Value displayed in the dropdown list\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { titles } from '../assets/title_different_fonts';\nimport { interval } from 'rxjs';\n\n/**\n * Interface for the Dropdown list to choose the Level of Difficulty\n */\nexport interface Level {\n  /**Actual value*/\n  value: number;\n  /**Value displayed in the dropdown list*/\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\n\n/** \n *Top Level Component\n */\nexport class AppComponent implements OnInit{\n  title = 'The Very Stressful Movie Quiz';\n  /**Flag to display or hidde starting view */\n  welcome = true;\n  /**Flag to display or hidde game view */\n  startedGame = false;\n  /**Flag to display or hidde ending view */\n  gameover = false;\n  /**Variable to store total score after game has finished */\n  totalScore = 0;\n  /**Path to the title picture \"The Very Stressful Movie Quiz\" in different movie fonts */\n  titlesrc: string;\n  /**Array of the different title picture paths used for {@link AppComponent.titlesrc}*/\n  titles: string[];\n  /**Counter to iterate through {@link AppComponent.titles}*/\n  counter = 0;\n  /** Observable responsible to switch title image path every 10s*/\n  observ;\n  /**Level of difficulty. Default = 1 */\n  level = 1;\n\n  /**Available Level of Difficulty in the dropdown list when starting the game */\n  levels: Level[] = [\n    {value: 1, viewValue: 'Easy'},\n    {value: 2, viewValue: 'Medium'},\n    {value: 3, viewValue: 'Hard'}\n  ]\n\n  constructor(){\n  }\n\n  ngOnInit(){\n    this.titles = titles;\n    this.setDifferentMovieTitle();\n    this.observ = interval(10000);\n    this.observ.subscribe(() => this.setDifferentMovieTitle());\n  }\n\n  /**\n   * Method responsible for switching the title pictures with different movie fonts.\n   */\n  setDifferentMovieTitle(){\n    this.titlesrc = this.titles[this.counter];\n    this.counter = (this.counter+1)%this.titles.length;\n  }\n\n  /**\n   * Switching from the starting view to the game view.\n   */\n  startGame(){\n    this.startedGame = true\n    this.welcome = false\n  }\n\n /**\n   * Switching from the game view to the ending view. Triggered when the game is over.\n   */\n  setGameOver(valueEmitted: integer){\n    this.gameover = true;\n    this.startedGame = false;\n    this.totalScore = valueEmitted;\n  }\n\n  /**\n   * Switching from the ending view to the game view.\n   */\n  restartGame(){\n    this.startedGame = true;\n    this.gameover = false;\n  }\n\n  /**\n   * Switching from the ending view to the starting view.\n   */\n  backToStart(){\n    this.welcome = true;\n    this.gameover = false;  \n  }\n\n  /**Assign the selected level of difficulty to {@link AppComponent.level} */\n  selected(){\n    this.level = +document.getElementsByTagName(\"select\")[0].value;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Movie.html":{"url":"classes/Movie.html","title":"class - Movie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Movie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/movie.ts\n        \n\n            \n                Description\n            \n            \n                Representatin of the movie object which is part of the received Quiz.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                poster\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(poster: string, title: string, code: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/movie.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        poster\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/movie.ts:8\n                            \n                        \n\n                \n                    \n                        Anser code of a movie \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poster\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/movie.ts:4\n                            \n                        \n\n                \n                    \n                        URL of a poster image for the movie \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/movie.ts:6\n                            \n                        \n\n                \n                    \n                        Title of a movie \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Movie{\n    /** URL of a poster image for the movie */\n    poster: string;\n    /** Title of a movie */\n    title: string;\n    /** Anser code of a movie */\n    code: string;\n    \n    constructor(poster: string, title: string, code: string){\n        this.poster = poster;\n        this.title = title;\n        this.code = code;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionComponent.html":{"url":"components/OptionComponent.html","title":"component - OptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/option/option.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-option\n            \n\n            \n                styleUrls\n                ./option.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                style\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                correctAnswer\n                            \n                            \n                                movie\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/option/option.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        correctAnswer\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/option/option.component.ts:15\n                            \n                        \n                \n                    \n                        The code of the correct movie. Received by the AnswerComponent.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        movie\n                    \n                \n                \n                    \n                        Type :         Movie\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/option/option.component.ts:13\n                            \n                        \n                \n                    \n                        Movie object which is represented by the OptionComponent. Received by the AnswerComponent.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/option/option.component.ts:17\n                            \n                        \n                \n                    \n                        Forwards to the AnswerQuizComponent when it was clicked with the information if it's the correct answer or not.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/option/option.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/option/option.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/option/option.component.ts:31\n                \n            \n\n\n            \n                \n                    This method triggers when the component is clicked and evaluates if it contains the correct answer to the movie quiz or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"wrapper\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/option/option.component.ts:19\n                            \n                        \n\n                \n                    \n                        This attribute holds the applied css style class.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport {Movie} from '../model/movie';\n\n@Component({\n  selector: 'app-option',\n  templateUrl: './option.component.html',\n  styleUrls: ['./option.component.sass']\n})\n/**One potential Answer to the Movie Quiz. ChildComponent of the AnswerQuiz.*/\nexport class OptionComponent implements OnInit, OnChanges {\n\n  /**Movie object which is represented by the OptionComponent. Received by the {@link AnswerComponent}.*/\n  @Input() movie: Movie;\n  /**The code of the correct movie. Received by the {@link AnswerComponent}.*/\n  @Input() correctAnswer: string;\n  /**Forwards to the {@link AnswerQuizComponent} when it was clicked with the information if it's the correct answer or not.*/\n  @Output() clicked: EventEmitter = new EventEmitter();\n  /**This attribute holds the applied css style class.*/\n  style = \"wrapper\";\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(){\n    this.style = \"wrapper\";\n  }\n\n  /**This method triggers when the component is clicked and evaluates if it contains the correct answer to the movie quiz or not.*/\n  validate(){\n    if(this.correctAnswer == this.movie.code){\n      this.style = \"wrapper correct\";\n      this.clicked.emit(true);\n    }else{\n      this.style = \"wrapper wrong\";\n      this.clicked.emit(false);\n    }    \n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        Title: {{movie.title}}\n    \n    \n        Code: {{movie.code}}\n    \n\n\n    \n\n    \n                \n                    ./option.component.sass\n                \n                div \n    align-items: center\n    justify-content: center\n    \n.wrapper\n    display: flex\n    flex-wrap: wrap\n    flex-direction: column\n.code\n    font-weight: bold\n\n.correct\n    border: #00ec0c 5px solid\n    background-color: #00ec0c\n\n.wrong\n    border: red 5px solid\n    background-color: red   \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Title: {{movie.title}}                Code: {{movie.code}}    '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhaserComponent.html":{"url":"components/PhaserComponent.html","title":"component - PhaserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhaserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/phaser/phaser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-phaser\n            \n\n            \n                styleUrls\n                ./phaser.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./phaser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                phaserGame\n                            \n                            \n                                score\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setGameOver\n                            \n                            \n                                stopGame\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameOver\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/phaser/phaser.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        gameOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:21\n                            \n                        \n                \n                    \n                        Emits to the SpaceComponent when the player finished or lost the shooting game.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOver(score: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:34\n                \n            \n\n\n            \n                \n                    Remove the shooting game when the player finished or lost the game.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopGame\n                        \n                        \n                    \n                \n            \n            \n                \nstopGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:40\n                \n            \n\n\n            \n                \n                    This method stops the shooting game. This method is triggered when time on the quiz part of the game ran out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Phaser.Types.Core.GameConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:17\n                            \n                        \n\n                \n                    \n                        Necessary configuration of the game.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phaserGame\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Phaser.Game\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:15\n                            \n                        \n\n                \n                    \n                        The shooting game\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     integer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:19\n                            \n                        \n\n                \n                    \n                        Score achieved by the player in the shooting game.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport * as Phaser from \"phaser\";\nimport {CONFIG} from './CONFIG';\nimport {Bullet} from './Bullet';\n\n\n@Component({\n  selector: 'app-phaser',\n  templateUrl: './phaser.component.html',\n  styleUrls: ['./phaser.component.sass']\n})\n/**This componenet contains the actual shooting game.*/\nexport class PhaserComponent implements OnInit {\n  /**The shooting game*/\n  phaserGame: Phaser.Game;\n  /**Necessary configuration of the game.*/\n  config: Phaser.Types.Core.GameConfig;\n  /**Score achieved by the player in the shooting game.*/\n  score: integer;\n  /**Emits to the {@link SpaceComponent} when the player finished or lost the shooting game.*/\n  @Output() gameOver: EventEmitter = new EventEmitter();\n\n  constructor() {\n    this.config = CONFIG;\n    this.config.scene = [SpaceScene];\n   }\n\n  ngOnInit(): void {\n    this.phaserGame = new Phaser.Game(this.config);\n    window[\"angularLink\"] = this;\n  }\n\n  /**Remove the shooting game when the player finished or lost the game.*/\n  setGameOver(score: integer){\n    this.gameOver.emit(score);\n    this.phaserGame.destroy(true, false);\n  }\n\n  /**This method stops the shooting game. This method is triggered when time on the quiz part of the game ran out.*/\n  stopGame(){\n    this.score = this.phaserGame.scene.scenes[0].score;\n    this.setGameOver(this.score);\n  }\n}\n/**The setup for the shooting game. For more information see https://phaser.io/phaser3*/\nclass SpaceScene extends Phaser.Scene{\n  player;\n  aliens;\n  bullets;\n  bulletTime = 0;\n  cursors;\n  fireButton;\n  explosions;\n  starfield;\n  score = 0;\n  scorePrefix = 'SCORE: ';\n  scoreText;\n  lives;\n  enemyBullets;\n  firingTimer = 0;\n  stateText;\n  livingAliens = [];\n  lastAlienBulletTime = 0;\n  lastPlayerBulletTime = 0;\n  playerLives;\n  isGameOver = false;\n  gameOverModal;\n  gameOverText;\n  config;\n\n  preload(){\n    this.load.image('bullet', '../assets/invaders/bullet.png');\n    this.load.image('enemyBullet', 'assets/invaders/enemy-bullet.png');\n    this.load.spritesheet('invader', 'assets/invaders/invader32x32x4.png', {frameWidth: 32, frameHeight: 32});\n    this.load.image('ship', 'assets/invaders/player.png');\n    this.load.spritesheet('kaboom', 'assets/invaders/explode.png', {frameWidth:128, frameHeight: 128});\n    this.load.image('starfield', 'assets/invaders/starfield.png');\n    this.load.image('background', 'assets/invaders/background2.png');\n  }\n\n  create(){\n    // Setup our aliens' \"hover\" animation.\n    this.anims.create({\n      key: 'hover',\n      frames: this.anims.generateFrameNumbers( 'invader', {\n          start: 0,\n          end: 9\n      }),\n      frameRate: 10,\n      repeat: -1\n  });\n\n  // Setup our explosion animation.\n  this.anims.create({\n      key: 'explode',\n      frames: this.anims.generateFrameNumbers( 'kaboom', {\n          start: 0,\n          end: 15\n      }),\n      frameRate: 16,\n      repeat: 0,\n      hideOnComplete: true\n  });\n\n  // Set starfield's value to be a tile sprite, and make sure it's scaled properly.\n  this.starfield = this.add.tileSprite( 0, 0, 2048, 2048, 'starfield' );\n  this.starfield.setScale( 1 );\n\n  // Setup the score text.\n  this.scoreText = this.add.text( 10, 15, this.scorePrefix + this.score, {'fontSize': '25px'} );\n\n  // Setup the player's lives.\n  this.playerLives = this.add.group();\n  this.add.text(\n      this.sys.canvas.width - 210,    // From the right.\n      15,                             // From the top.\n      'LIVES:',\n      {'fontSize': '25px'}\n  );\n  this.createPlayerLives( this );\n\n  // Add the player as a sprite to the game physics!\n  this.player = this.physics.add.sprite( 400, 500, 'ship' );\n  this.player.setOrigin( 0.5, 0 );\n  this.player.setCollideWorldBounds( true );\n\n  // Create a group to hold our invaders.\n  this.aliens = this.physics.add.group();\n  this.createAliens();\n\n  // Create the player and alien bullet collections.\n  this.bullets = this.createBullets( 'bullet', this );\n  this.enemyBullets = this.createBullets( 'enemyBullet', this );\n\n  // Create some explosions!\n  this.explosions = this.add.group({\n      defaultKey: 'kaboom',\n      maxSize: 100\n  });\n\n  this.cursors = this.input.keyboard.addKeys({\n    left:Phaser.Input.Keyboard.KeyCodes.A,\n    right:Phaser.Input.Keyboard.KeyCodes.D\n  });\n\n  // Wire up the player's firing mechanism.\n  this.firePlayerBullet( this );\n\n  // Setup the game over screen.\n  this.createGameOverModal( this );\n  \n}\n\ncreateAliens () {\n\n  for (var y = 0; y  {\n\n    // If the player died, no processing!\n    if ( this.player.active === false ) {\n        return;\n    }\n\n    // Grab the first bullet in the group, activate it, and make it visible.\n    var playerBullet = this.bullets.get().setActive( true ).setVisible( true );\n\n    // As long as we have a valid bullet, fire it.\n    if ( playerBullet && sceneRef.time.now - this.lastPlayerBulletTime > 1000 ) {\n\n        // We don't need a target, since we don't need to calculate angles.\n        playerBullet.fire( this.player ); \n\n        // Setup collision handling.\n        sceneRef.physics.add.collider( this.aliens, playerBullet, this.handleEnemyCollision, null, this );\n\n        // Update the player last fired time.\n        this.lastPlayerBulletTime = sceneRef.time.now;\n    }\n}, sceneRef );\n}\n\nfireEnemyBullet( player, time, sceneRef ) {\n\n  // Grab the first bullet in the group, activate it, and make it visible.\n  var enemyBullet = this.enemyBullets.get().setActive( true ).setVisible( true );\n\n  // Find out how many alien invaders are still \"alive,\" and track them.\n  this.livingAliens = this.aliens.getChildren().filter( alien => alien.active === true );\n\n  // If we have an instance of enemyBullet, AND there are aliens still alive.\n  if ( enemyBullet && this.livingAliens.length > 0 ) {\n\n      // Get a random number between 0 and the number of aliens alive.\n      var randomAlienNumber = Phaser.Math.RND.integerInRange(\n          0,\n          this.livingAliens.length - 1\n      );\n\n      // Get the alien from the collection with that number.\n      var randomAlien = this.livingAliens[ randomAlienNumber ];\n\n      // If this alien hasn't fired in the last 4,000 milliseconds...\n      if ( time - randomAlien.lastFired > 4000 ) {\n\n          // Set the lastFired, so the alien doesn't fire again for a while.\n          randomAlien.lastFired = time;\n\n          // FIRE ZE BULLET!\n          enemyBullet.fire( randomAlien, player );\n\n          // Setup collision handling.\n          sceneRef.physics.add.collider( player, enemyBullet, this.handlePlayerCollision, null, this );\n\n          // Update the global last fired time, and add 2,000 milliseconds.\n          this.lastAlienBulletTime = time + 2000;\n      }\n  }\n}\n\ncreateGameOverModal(sceneRef){\n  // Create a \"modal\" window.\n  this.gameOverModal = sceneRef.add.graphics();\n\n  // Set its background color.\n  this.gameOverModal.fillStyle( 0x303030, 0.8 );\n\n  // Set its shape, x- and y-coordinates, and size.\n  this.gameOverModal.fillRect(\n      0,\n      0,\n      sceneRef.sys.canvas.width,\n      sceneRef.sys.canvas.height\n  );\n\n  // It shouldn't be visible... yet.\n  this.gameOverModal.visible = false;\n\n  // Get our game over text ready.\n  this.gameOverText = sceneRef.add.text(\n      sceneRef.sys.canvas.width / 2,\n      sceneRef.sys.canvas.height / 2,\n      ' ',\n      {\n          align: 'center'\n      }\n  );\n  this.gameOverText.setOrigin( 0.5, 0.5 );\n\n  // It shouldn't be visible... yet.\n  this.gameOverText.visible = false;\n\n  // Handle the player wanting to start over on mouse click.\n  sceneRef.input.on( 'pointerdown', ( pointer ) => {\n\n      // Only on a Game Over condition.\n      if ( this.isGameOver ) {\n\n          // Reset everything.\n          this.bullets.clear( true, true );\n          this.enemyBullets.clear( true, true );\n          this.explosions.clear( true, true );\n          this.aliens.clear( true, true );\n          this.playerLives.clear( true, true );\n\n          // Create again.\n          this.createAliens();\n          this.createPlayerLives( sceneRef );\n          this.player.setActive( true ).setVisible( true );\n\n          // Hide the text, followed by the modal.\n          this.gameOverText.visible = false;\n          this.gameOverModal.visible = false;            \n\n          // Reset the game over state.\n          this.isGameOver = false;\n      }\n  }, sceneRef );\n}\n\nhandleEnemyCollision(bullet, alien){\n  if ( bullet.active === true && alien.active === true ) {\n\n      // Deactivate the bullet, and take it off the screen.\n      bullet.setActive( false ).setVisible( false );\n\n      // Get the first explosion, and activate it.\n      var explosion = this.explosions.get().setActive( true );\n\n      // Place the explosion on the screen, and play the animation.\n      explosion.setOrigin( 0.5, 0.5 );\n      explosion.x = alien.x;\n      explosion.y = alien.y;\n      explosion.play( 'explode' );\n\n    // Deactivate and remove the alien from the screen.\n    alien.setActive( false ).setVisible( false );\n\n    // Increment the score.\n    this.score += 20;\n    this.scoreText.setText( this.scorePrefix + this.score );\n\n    // Game Over condition: has the player killed all the alien invaders?\n    if ( this.aliens.countActive() === 0 ) {\n\n        // Award a bonus for winning.\n        this.score += 1000;\n        this.scoreText.setText( this.scorePrefix + this.score );\n\n        // Handle Game Over.\n        this.handleGameOver( true );\n    }\n  }\n}\n\nhandlePlayerCollision( player, bullet ) {\n\n  // If both the player and bullet are active...\n  if ( player.active === true && bullet.active === true ) {\n\n      // Deactivate the bullet, and take it off the screen.\n      bullet.setActive( false ).setVisible( false );\n\n      // Get the first explosion, and activate it.\n      var explosion = this.explosions.get().setActive( true );\n\n      // Place the explosion on the screen, and play the animation.\n      explosion.setOrigin( 0.5, 0.5 );\n      explosion.x = player.x;\n      explosion.y = player.y;\n      explosion.play( 'explode' );\n\n      this.removeLife();\n\n      // Game Over condition: has the player lost all their lives?\n      if ( this.playerLives.countActive()  this.lastAlienBulletTime && !this.isGameOver ) {\n      this.fireEnemyBullet( this.player, time, this );\n    }\n}\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./phaser.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhaserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionComponent.html":{"url":"components/QuestionComponent.html","title":"component - QuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/question/question.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                styleUrls\n                ./question.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description1\n                            \n                            \n                                description2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateDescriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/question/question.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/question/question.component.ts:12\n                            \n                        \n                \n                    \n                        Movie description provided by the GameComponent.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/question/question.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/question/question.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDescriptions\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/question/question.component.ts:28\n                \n            \n\n\n            \n                \n                    This method splits up the description into two parts if it's too long.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question/question.component.ts:14\n                            \n                        \n\n                \n                    \n                        Description might be too long and thus is split up into two columns. This attribute contains part I.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/question/question.component.ts:16\n                            \n                        \n\n                \n                    \n                        Description might be too long and thus is split up into two columns. This attribute contains part II.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.sass']\n})\n/**Representation of the Description of the movie we are looking for in the {@link AnswerComponent}.*/\nexport class QuestionComponent implements OnInit, OnChanges {\n\n  /**Movie description provided by the {@link GameComponent}.*/\n  @Input() description: string;\n  /**Description might be too long and thus is split up into two columns. This attribute contains part I.*/\n  description1: string;\n  /**Description might be too long and thus is split up into two columns. This attribute contains part II.*/\n  description2: string;\n  \n  constructor() { }\n\n  ngOnInit() {\n    this.updateDescriptions() }\n\n  ngOnChanges(){\n    this.updateDescriptions()\n  }\n\n  /**This method splits up the description into two parts if it's too long.*/\n  updateDescriptions(){\n    var wordlist = this.description.split(\" \");\n    if(this.description.length > 450){\n      var half = Math.floor(wordlist.length/2);\n      this.description1 = wordlist.slice(0, half).join(\" \");\n      this.description2 = wordlist.slice(half, wordlist.length).join(\" \");  \n    }else{\n      this.description1 = this.description;\n      this.description2 = \"\";\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Description\n    \n  \n    {{description1}}\n    {{description2}}\n    \n\n\n    \n\n    \n                \n                    ./question.component.sass\n                \n                div\n    margin: 0px 15px\n\n.wrapper\n    display: flex\n    flex-wrap: wrap\n    justify-content: center\n    align-items: center\n\nh2 \n    font-weight: bold\n    padding-left: 10px\n    margin-bottom: 8px\n    width: 100%\n.row\n    display: flex\n    flex-wrap: nowrap\n    justify-content: center\n    align-items: flex-start\n    margin: 0px\n    width: 100%\n    height: 350px\n    \n.column\n    flex-grow: 1 \n    text-align: justify\n    font-size: larger\n    padding: 10px\n    margin: 0px 0px 15px 0px\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Description          {{description1}}    {{description2}}    '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/quiz.ts\n        \n\n            \n                Description\n            \n            \n                Representation of the quiz object received by the Quiz Microservice.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answers\n                            \n                            \n                                correctAnswer\n                            \n                            \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(description: string, movies: Movie[], correctAnswer: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/quiz.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        movies\n                                                  \n                                                        \n                                                                        Movie[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        correctAnswer\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Movie[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/quiz.ts:8\n                            \n                        \n\n                \n                    \n                        All movies that were chosen to be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            correctAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/quiz.ts:10\n                            \n                        \n\n                \n                    \n                        Answer code of the movie that is being described \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/quiz.ts:6\n                            \n                        \n\n                \n                    \n                        Description of correct movie \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Movie} from './movie'\n\n/**Representation of the quiz object received by the Quiz Microservice.*/\nexport class Quiz{\n    /** Description of correct movie */\n    description: string;\n    /** All movies that were chosen to be displayed */\n    answers: Movie[];\n    /** Answer code of the movie that is being described */\n    correctAnswer: string;\n    \n    constructor(description: string, movies: Movie[], correctAnswer: string){\n        this.description = description;\n        this.answers = movies;\n        this.correctAnswer = correctAnswer;\n    }\n }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizComponent.html":{"url":"components/QuizComponent.html","title":"component - QuizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz/quiz.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz\n            \n\n            \n                styleUrls\n                ./quiz.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./quiz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                quiz\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventFromOption\n                            \n                            \n                                getQuiz\n                            \n                            \n                                imageExists\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz/quiz.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :     integer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz/quiz.component.ts:17\n                            \n                        \n                \n                    \n                        Level of difficulty chosen by the player when starting the game.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz/quiz.component.ts:15\n                            \n                        \n                \n                    \n                        Forwards to the GameComponent if the correct movie was chosen or not.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventFromOption\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventFromOption(valueEmitted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz/quiz.component.ts:55\n                \n            \n\n\n            \n                \n                    This method is triggered when the player chooses (clicks) an answer for the question.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuiz\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz/quiz.component.ts:26\n                \n            \n\n\n            \n                \n                    Getting the quiz object from the Quiz Microservice.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            imageExists\n                        \n                        \n                    \n                \n            \n            \n                \nimageExists(image_url)\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz/quiz.component.ts:60\n                \n            \n\n\n            \n                \n                    Check if a given image url is reachable or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image_url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz/quiz.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quiz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Quiz\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quiz/quiz.component.ts:13\n                            \n                        \n\n                \n                    \n                        The quiz object which will be passed to the child components.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { GameService } from '../services/game.service';\nimport { Quiz } from '../model/quiz';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.sass']\n})\n/**This component contains the Movie Quiz part of the game.*/\nexport class QuizComponent implements OnInit {\n  /**The quiz object which will be passed to the child components.*/\n  quiz: Quiz;\n  /**Forwards to the {@link GameComponent} if the correct movie was chosen or not.*/\n  @Output() clicked: EventEmitter = new EventEmitter();\n  /**Level of difficulty chosen by the player when starting the game.*/\n  @Input() level: integer;\n\n  constructor(private gameService: GameService) { }\n\n  ngOnInit() {\n    this.getQuiz();\n  }\n\n  /**Getting the quiz object from the Quiz Microservice.*/\n  getQuiz(){\n    var response;\n\n    var loc = window.location.href;\n    var tmp = loc.split(\":\");\n    var url = tmp.slice(0,2).join(\":\");\n    if(tmp.length == 2){\n      url = url.slice(0, -1); // remove trailing \"/\"; otherwise calls \".com/:8080/api\"\n    }\n    this.gameService.url = url;\n\n    this.gameService.getQuiz(this.level).subscribe(\n      quiz => {\n        response =  quiz;\n        if(( response).description.length  response).answers){\n          if(!this.imageExists(el.poster)){\n            return this.getQuiz();\n          }\n        }\n\n        this.quiz = response;\n      });\n  }\n\n  /**This method is triggered when the player chooses (clicks) an answer for the question.*/\n  getEventFromOption(valueEmitted: boolean){\n    this.clicked.emit(valueEmitted);\n  }\n\n  /**Check if a given image url is reachable or not.*/\n  imageExists(image_url){\n\n    var http = new XMLHttpRequest();\n\n    http.open('HEAD', image_url, false);\n    \n    try{\n      http.send();\n      return http.status == 200;\n    }\n    catch{\n      return false;\n    }\n}\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./quiz.component.sass\n                \n                div.wrapper\n    display: flex\n    flex-wrap: wrap\n\n.answer\n    flex-grow: 2\n\n.question\n    flex-grow: 1\n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Score.html":{"url":"classes/Score.html","title":"class - Score","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Score\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/score.ts\n        \n\n            \n                Description\n            \n            \n                Representation of the score object received and sent to the User Microservice.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scoreNo\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: string, scoreNo: integer)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/score.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scoreNo\n                                                  \n                                                        \n                                                                    integer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreNo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     integer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/score.ts:6\n                            \n                        \n\n                \n                    \n                        Score amount that player reached \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/score.ts:4\n                            \n                        \n\n                \n                    \n                        User name that should get saved in the leaderboard \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Score{\n    /** User name that should get saved in the leaderboard */\n    user: string;\n    /** Score amount that player reached */\n    scoreNo: integer;\n    \n    constructor(user: string, scoreNo: integer){\n        this.user = user;\n        this.scoreNo = scoreNo;\n    }\n }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpaceComponent.html":{"url":"components/SpaceComponent.html","title":"component - SpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/space/space.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-space\n            \n\n            \n                styleUrls\n                ./space.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./space.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childcomp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setGameOver\n                            \n                            \n                                stopGame\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameOver\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/space/space.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        gameOver\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/space/space.component.ts:12\n                            \n                        \n                \n                    \n                        Forwards to the GameComponent when the shooting game has finished.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/space/space.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOver(valueEmitted: integer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/space/space.component.ts:22\n                \n            \n\n\n            \n                \n                    Triggered when the shooting game is over.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    valueEmitted\n                                    \n                                            integer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopGame\n                        \n                        \n                    \n                \n            \n            \n                \nstopGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/space/space.component.ts:27\n                \n            \n\n\n            \n                \n                    Stops the shooting game. This funtion is triggered when time has run out on the quiz part of the gamne (QuizComponent).\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childcomp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PhaserComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(PhaserComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/space/space.component.ts:14\n                            \n                        \n\n                \n                    \n                        ChildComponent containing the actual shooting game (PhaserComponent).\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport {PhaserComponent} from '../phaser/phaser.component';\n\n@Component({\n  selector: 'app-space',\n  templateUrl: './space.component.html',\n  styleUrls: ['./space.component.sass']\n})\n/**Contains the Shooting game part.*/\nexport class SpaceComponent implements OnInit {\n  /**Forwards to the {@link GameComponent} when the shooting game has finished.*/\n  @Output() gameOver: EventEmitter = new EventEmitter();\n  /**ChildComponent containing the actual shooting game ({@link PhaserComponent}).*/\n  @ViewChild(PhaserComponent) childcomp: PhaserComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  /**Triggered when the shooting game is over.*/\n  setGameOver(valueEmitted: integer){\n    this.gameOver.emit(valueEmitted);\n  }\n\n  /**Stops the shooting game. This funtion is triggered when time has run out on the quiz part of the gamne ({@link QuizComponent}).*/\n  stopGame(){\n    this.childcomp.stopGame();\n  }\n}\n\n    \n\n    \n          \n  \n    if (global === undefined) {\n      var global = window;\n    }\n  \n    \n      \n    \n\n\n\n    \n\n    \n                \n                    ./space.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        if (global === undefined) {      var global = window;    }                '\n    var COMPONENTS = [{'name': 'AnswerComponent', 'selector': 'app-answer'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LeaderboardComponent', 'selector': 'app-leaderboard'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PhaserComponent', 'selector': 'app-phaser'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'SpaceComponent', 'selector': 'app-space'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   "},"classes/SpaceScene.html":{"url":"classes/SpaceScene.html","title":"class - SpaceScene","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpaceScene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/phaser/phaser.component.ts\n        \n\n            \n                Description\n            \n            \n                The setup for the shooting game. For more information see https://phaser.io/phaser3\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aliens\n                            \n                            \n                                bullets\n                            \n                            \n                                bulletTime\n                            \n                            \n                                config\n                            \n                            \n                                cursors\n                            \n                            \n                                enemyBullets\n                            \n                            \n                                explosions\n                            \n                            \n                                fireButton\n                            \n                            \n                                firingTimer\n                            \n                            \n                                gameOverModal\n                            \n                            \n                                gameOverText\n                            \n                            \n                                isGameOver\n                            \n                            \n                                lastAlienBulletTime\n                            \n                            \n                                lastPlayerBulletTime\n                            \n                            \n                                lives\n                            \n                            \n                                livingAliens\n                            \n                            \n                                player\n                            \n                            \n                                playerLives\n                            \n                            \n                                score\n                            \n                            \n                                scorePrefix\n                            \n                            \n                                scoreText\n                            \n                            \n                                starfield\n                            \n                            \n                                stateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createAliens\n                            \n                            \n                                createBullets\n                            \n                            \n                                createGameOverModal\n                            \n                            \n                                createPlayerLives\n                            \n                            \n                                fireEnemyBullet\n                            \n                            \n                                firePlayerBullet\n                            \n                            \n                                handleEnemyCollision\n                            \n                            \n                                handleGameOver\n                            \n                            \n                                handlePlayerCollision\n                            \n                            \n                                preload\n                            \n                            \n                                removeLife\n                            \n                            \n                                setGameOver\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aliens\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bullets\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bulletTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cursors\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enemyBullets\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            explosions\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fireButton\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firingTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameOverModal\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameOverText\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isGameOver\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastAlienBulletTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastPlayerBulletTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lives\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            livingAliens\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            player\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playerLives\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scorePrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SCORE: '\n                        \n                    \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scoreText\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            starfield\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stateText\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/phaser/phaser.component.ts:61\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAliens\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAliens()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBullets\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBullets(imageName, sceneRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sceneRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGameOverModal\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGameOverModal(sceneRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:245\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sceneRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPlayerLives\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePlayerLives(sceneRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:374\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sceneRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fireEnemyBullet\n                        \n                        \n                    \n                \n            \n            \n                \nfireEnemyBullet(player, time, sceneRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sceneRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            firePlayerBullet\n                        \n                        \n                    \n                \n            \n            \n                \nfirePlayerBullet(sceneRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sceneRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleEnemyCollision\n                        \n                        \n                    \n                \n            \n            \n                \nhandleEnemyCollision(bullet, alien)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bullet\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    alien\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleGameOver(didPlayerWin)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:393\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    didPlayerWin\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handlePlayerCollision\n                        \n                        \n                    \n                \n            \n            \n                \nhandlePlayerCollision(player, bullet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:340\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bullet\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preload\n                        \n                        \n                    \n                \n            \n            \n                \npreload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeLife\n                        \n                        \n                    \n                \n            \n            \n                \nremoveLife()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:366\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOver\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:426\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(time)\n                \n            \n\n\n            \n                \n                    Defined in src/app/phaser/phaser.component.ts:432\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport * as Phaser from \"phaser\";\nimport {CONFIG} from './CONFIG';\nimport {Bullet} from './Bullet';\n\n\n@Component({\n  selector: 'app-phaser',\n  templateUrl: './phaser.component.html',\n  styleUrls: ['./phaser.component.sass']\n})\n/**This componenet contains the actual shooting game.*/\nexport class PhaserComponent implements OnInit {\n  /**The shooting game*/\n  phaserGame: Phaser.Game;\n  /**Necessary configuration of the game.*/\n  config: Phaser.Types.Core.GameConfig;\n  /**Score achieved by the player in the shooting game.*/\n  score: integer;\n  /**Emits to the {@link SpaceComponent} when the player finished or lost the shooting game.*/\n  @Output() gameOver: EventEmitter = new EventEmitter();\n\n  constructor() {\n    this.config = CONFIG;\n    this.config.scene = [SpaceScene];\n   }\n\n  ngOnInit(): void {\n    this.phaserGame = new Phaser.Game(this.config);\n    window[\"angularLink\"] = this;\n  }\n\n  /**Remove the shooting game when the player finished or lost the game.*/\n  setGameOver(score: integer){\n    this.gameOver.emit(score);\n    this.phaserGame.destroy(true, false);\n  }\n\n  /**This method stops the shooting game. This method is triggered when time on the quiz part of the game ran out.*/\n  stopGame(){\n    this.score = this.phaserGame.scene.scenes[0].score;\n    this.setGameOver(this.score);\n  }\n}\n/**The setup for the shooting game. For more information see https://phaser.io/phaser3*/\nclass SpaceScene extends Phaser.Scene{\n  player;\n  aliens;\n  bullets;\n  bulletTime = 0;\n  cursors;\n  fireButton;\n  explosions;\n  starfield;\n  score = 0;\n  scorePrefix = 'SCORE: ';\n  scoreText;\n  lives;\n  enemyBullets;\n  firingTimer = 0;\n  stateText;\n  livingAliens = [];\n  lastAlienBulletTime = 0;\n  lastPlayerBulletTime = 0;\n  playerLives;\n  isGameOver = false;\n  gameOverModal;\n  gameOverText;\n  config;\n\n  preload(){\n    this.load.image('bullet', '../assets/invaders/bullet.png');\n    this.load.image('enemyBullet', 'assets/invaders/enemy-bullet.png');\n    this.load.spritesheet('invader', 'assets/invaders/invader32x32x4.png', {frameWidth: 32, frameHeight: 32});\n    this.load.image('ship', 'assets/invaders/player.png');\n    this.load.spritesheet('kaboom', 'assets/invaders/explode.png', {frameWidth:128, frameHeight: 128});\n    this.load.image('starfield', 'assets/invaders/starfield.png');\n    this.load.image('background', 'assets/invaders/background2.png');\n  }\n\n  create(){\n    // Setup our aliens' \"hover\" animation.\n    this.anims.create({\n      key: 'hover',\n      frames: this.anims.generateFrameNumbers( 'invader', {\n          start: 0,\n          end: 9\n      }),\n      frameRate: 10,\n      repeat: -1\n  });\n\n  // Setup our explosion animation.\n  this.anims.create({\n      key: 'explode',\n      frames: this.anims.generateFrameNumbers( 'kaboom', {\n          start: 0,\n          end: 15\n      }),\n      frameRate: 16,\n      repeat: 0,\n      hideOnComplete: true\n  });\n\n  // Set starfield's value to be a tile sprite, and make sure it's scaled properly.\n  this.starfield = this.add.tileSprite( 0, 0, 2048, 2048, 'starfield' );\n  this.starfield.setScale( 1 );\n\n  // Setup the score text.\n  this.scoreText = this.add.text( 10, 15, this.scorePrefix + this.score, {'fontSize': '25px'} );\n\n  // Setup the player's lives.\n  this.playerLives = this.add.group();\n  this.add.text(\n      this.sys.canvas.width - 210,    // From the right.\n      15,                             // From the top.\n      'LIVES:',\n      {'fontSize': '25px'}\n  );\n  this.createPlayerLives( this );\n\n  // Add the player as a sprite to the game physics!\n  this.player = this.physics.add.sprite( 400, 500, 'ship' );\n  this.player.setOrigin( 0.5, 0 );\n  this.player.setCollideWorldBounds( true );\n\n  // Create a group to hold our invaders.\n  this.aliens = this.physics.add.group();\n  this.createAliens();\n\n  // Create the player and alien bullet collections.\n  this.bullets = this.createBullets( 'bullet', this );\n  this.enemyBullets = this.createBullets( 'enemyBullet', this );\n\n  // Create some explosions!\n  this.explosions = this.add.group({\n      defaultKey: 'kaboom',\n      maxSize: 100\n  });\n\n  this.cursors = this.input.keyboard.addKeys({\n    left:Phaser.Input.Keyboard.KeyCodes.A,\n    right:Phaser.Input.Keyboard.KeyCodes.D\n  });\n\n  // Wire up the player's firing mechanism.\n  this.firePlayerBullet( this );\n\n  // Setup the game over screen.\n  this.createGameOverModal( this );\n  \n}\n\ncreateAliens () {\n\n  for (var y = 0; y  {\n\n    // If the player died, no processing!\n    if ( this.player.active === false ) {\n        return;\n    }\n\n    // Grab the first bullet in the group, activate it, and make it visible.\n    var playerBullet = this.bullets.get().setActive( true ).setVisible( true );\n\n    // As long as we have a valid bullet, fire it.\n    if ( playerBullet && sceneRef.time.now - this.lastPlayerBulletTime > 1000 ) {\n\n        // We don't need a target, since we don't need to calculate angles.\n        playerBullet.fire( this.player ); \n\n        // Setup collision handling.\n        sceneRef.physics.add.collider( this.aliens, playerBullet, this.handleEnemyCollision, null, this );\n\n        // Update the player last fired time.\n        this.lastPlayerBulletTime = sceneRef.time.now;\n    }\n}, sceneRef );\n}\n\nfireEnemyBullet( player, time, sceneRef ) {\n\n  // Grab the first bullet in the group, activate it, and make it visible.\n  var enemyBullet = this.enemyBullets.get().setActive( true ).setVisible( true );\n\n  // Find out how many alien invaders are still \"alive,\" and track them.\n  this.livingAliens = this.aliens.getChildren().filter( alien => alien.active === true );\n\n  // If we have an instance of enemyBullet, AND there are aliens still alive.\n  if ( enemyBullet && this.livingAliens.length > 0 ) {\n\n      // Get a random number between 0 and the number of aliens alive.\n      var randomAlienNumber = Phaser.Math.RND.integerInRange(\n          0,\n          this.livingAliens.length - 1\n      );\n\n      // Get the alien from the collection with that number.\n      var randomAlien = this.livingAliens[ randomAlienNumber ];\n\n      // If this alien hasn't fired in the last 4,000 milliseconds...\n      if ( time - randomAlien.lastFired > 4000 ) {\n\n          // Set the lastFired, so the alien doesn't fire again for a while.\n          randomAlien.lastFired = time;\n\n          // FIRE ZE BULLET!\n          enemyBullet.fire( randomAlien, player );\n\n          // Setup collision handling.\n          sceneRef.physics.add.collider( player, enemyBullet, this.handlePlayerCollision, null, this );\n\n          // Update the global last fired time, and add 2,000 milliseconds.\n          this.lastAlienBulletTime = time + 2000;\n      }\n  }\n}\n\ncreateGameOverModal(sceneRef){\n  // Create a \"modal\" window.\n  this.gameOverModal = sceneRef.add.graphics();\n\n  // Set its background color.\n  this.gameOverModal.fillStyle( 0x303030, 0.8 );\n\n  // Set its shape, x- and y-coordinates, and size.\n  this.gameOverModal.fillRect(\n      0,\n      0,\n      sceneRef.sys.canvas.width,\n      sceneRef.sys.canvas.height\n  );\n\n  // It shouldn't be visible... yet.\n  this.gameOverModal.visible = false;\n\n  // Get our game over text ready.\n  this.gameOverText = sceneRef.add.text(\n      sceneRef.sys.canvas.width / 2,\n      sceneRef.sys.canvas.height / 2,\n      ' ',\n      {\n          align: 'center'\n      }\n  );\n  this.gameOverText.setOrigin( 0.5, 0.5 );\n\n  // It shouldn't be visible... yet.\n  this.gameOverText.visible = false;\n\n  // Handle the player wanting to start over on mouse click.\n  sceneRef.input.on( 'pointerdown', ( pointer ) => {\n\n      // Only on a Game Over condition.\n      if ( this.isGameOver ) {\n\n          // Reset everything.\n          this.bullets.clear( true, true );\n          this.enemyBullets.clear( true, true );\n          this.explosions.clear( true, true );\n          this.aliens.clear( true, true );\n          this.playerLives.clear( true, true );\n\n          // Create again.\n          this.createAliens();\n          this.createPlayerLives( sceneRef );\n          this.player.setActive( true ).setVisible( true );\n\n          // Hide the text, followed by the modal.\n          this.gameOverText.visible = false;\n          this.gameOverModal.visible = false;            \n\n          // Reset the game over state.\n          this.isGameOver = false;\n      }\n  }, sceneRef );\n}\n\nhandleEnemyCollision(bullet, alien){\n  if ( bullet.active === true && alien.active === true ) {\n\n      // Deactivate the bullet, and take it off the screen.\n      bullet.setActive( false ).setVisible( false );\n\n      // Get the first explosion, and activate it.\n      var explosion = this.explosions.get().setActive( true );\n\n      // Place the explosion on the screen, and play the animation.\n      explosion.setOrigin( 0.5, 0.5 );\n      explosion.x = alien.x;\n      explosion.y = alien.y;\n      explosion.play( 'explode' );\n\n    // Deactivate and remove the alien from the screen.\n    alien.setActive( false ).setVisible( false );\n\n    // Increment the score.\n    this.score += 20;\n    this.scoreText.setText( this.scorePrefix + this.score );\n\n    // Game Over condition: has the player killed all the alien invaders?\n    if ( this.aliens.countActive() === 0 ) {\n\n        // Award a bonus for winning.\n        this.score += 1000;\n        this.scoreText.setText( this.scorePrefix + this.score );\n\n        // Handle Game Over.\n        this.handleGameOver( true );\n    }\n  }\n}\n\nhandlePlayerCollision( player, bullet ) {\n\n  // If both the player and bullet are active...\n  if ( player.active === true && bullet.active === true ) {\n\n      // Deactivate the bullet, and take it off the screen.\n      bullet.setActive( false ).setVisible( false );\n\n      // Get the first explosion, and activate it.\n      var explosion = this.explosions.get().setActive( true );\n\n      // Place the explosion on the screen, and play the animation.\n      explosion.setOrigin( 0.5, 0.5 );\n      explosion.x = player.x;\n      explosion.y = player.y;\n      explosion.play( 'explode' );\n\n      this.removeLife();\n\n      // Game Over condition: has the player lost all their lives?\n      if ( this.playerLives.countActive()  this.lastAlienBulletTime && !this.isGameOver ) {\n      this.fireEnemyBullet( this.player, time, this );\n    }\n}\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScores\n                            \n                            \n                                postScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScores\n                        \n                        \n                    \n                \n            \n            \n                \ngetScores()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:20\n                \n            \n\n\n            \n                \n                    Request scores from the Score service\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postScore\n                        \n                        \n                    \n                \n            \n            \n                \npostScore(scr: Score)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:28\n                \n            \n\n\n            \n                \n                    Upload score of the current game.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scr\n                                    \n                                                Score\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        How much score did the user reach \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:13\n                            \n                        \n\n                \n                    \n                        Base URL of the server \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Score } from '../model/score';\n\n@Injectable()\n/**\n * Service responsible for making calls to the User Microservice. For more information see https://app.swaggerhub.com/apis-docs/ltoedt/ASE/0.1\n */\nexport class UserService {\n  /**\n   * Base URL of the server \n   */\n  url = \"\"\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Request scores from the Score service\n   */\n  getScores(){\n    return this.http.get(this.url + \":8081\" + \"/api/scores\");\n  }\n\n  /**\n   * Upload score of the current game.\n   * @param scr How much score did the user reach \n   */\n  postScore(scr: Score){\n    const bodyString = JSON.stringify(scr);\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post(this.url + \":8081\" + \"/api/scores/score\", bodyString, httpOptions);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                dist/org-uzh-ase-frontend/assets/title_different_fonts.ts\n            \n            variable\n            titles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/answer/answer.component.ts\n            \n            component\n            AnswerComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                80 %\n                (16/20)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            interface\n            Level\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/game/game.component.ts\n            \n            component\n            GameComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/leaderboard/leaderboard.component.ts\n            \n            component\n            LeaderboardComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/model/movie.ts\n            \n            class\n            Movie\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/model/quiz.ts\n            \n            class\n            Quiz\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/model/score.ts\n            \n            class\n            Score\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/option/option.component.ts\n            \n            component\n            OptionComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/phaser/Bullet.ts\n            \n            class\n            Bullet\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/phaser/CONFIG.ts\n            \n            variable\n            CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/phaser/phaser.component.ts\n            \n            component\n            PhaserComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/phaser/phaser.component.ts\n            \n            class\n            SpaceScene\n            \n                2 %\n                (1/38)\n            \n        \n        \n            \n                \n                src/app/question/question.component.ts\n            \n            component\n            QuestionComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/quiz/quiz.component.ts\n            \n            component\n            QuizComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/services/game.service.ts\n            \n            injectable\n            GameService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/space/space.component.ts\n            \n            component\n            SpaceComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/assets/title_different_fonts.ts\n            \n            variable\n            titles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/schematics : ^9.1.1\n        \n            @angular/animations : ^9.1.4\n        \n            @angular/cdk : ^9.2.2\n        \n            @angular/common : ~9.1.2\n        \n            @angular/compiler : ~9.1.2\n        \n            @angular/core : ~9.1.2\n        \n            @angular/forms : ~9.1.2\n        \n            @angular/material : ^9.2.2\n        \n            @angular/platform-browser : ~9.1.2\n        \n            @angular/platform-browser-dynamic : ~9.1.2\n        \n            @angular/router : ~9.1.2\n        \n            phaser : ^3.22.0\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nThe Very Stressful Movie Quiz - Frontend\nThis project was generated with Angular CLI version 9.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. \nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAnswerComponent\n\nAnswerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnswerComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nLeaderboardComponent\n\nLeaderboardComponent\n\nAppModule -->\n\nLeaderboardComponent->AppModule\n\n\n\n\n\nOptionComponent\n\nOptionComponent\n\nAppModule -->\n\nOptionComponent->AppModule\n\n\n\n\n\nPhaserComponent\n\nPhaserComponent\n\nAppModule -->\n\nPhaserComponent->AppModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\nAppModule -->\n\nQuestionComponent->AppModule\n\n\n\n\n\nQuizComponent\n\nQuizComponent\n\nAppModule -->\n\nQuizComponent->AppModule\n\n\n\n\n\nSpaceComponent\n\nSpaceComponent\n\nAppModule -->\n\nSpaceComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGameService\n\nGameService\n\nAppModule -->\n\nGameService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONFIG   (src/.../CONFIG.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            titles   (src/.../title_different_fonts.ts)\n                        \n                        \n                            titles   (dist/.../title_different_fonts.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/phaser/CONFIG.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: Phaser.AUTO,\n    height: 600,\n    width: 800,\n    backgroundColor: '#222222',\n    parent: 'phaser-game',\n    physics: {\n      default: 'arcade'\n    }\n  }\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/assets/title_different_fonts.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            titles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    \"https://fontmeme.com/permalink/200502/f942bcee948945d316eaa6aa7c5ac164.png\",\n    \"https://fontmeme.com/permalink/200502/9642e6bba3e4283aa02026d7bde77b61.png\",\n    \"https://fontmeme.com/permalink/200502/436d381ae30b32efebc53b88718b5cbf.png\",\n    \"https://fontmeme.com/permalink/200502/9bd35ed7a3803b4672e44235cbe7e1c5.png\",\n\"https://fontmeme.com/permalink/200502/f2ab02732835c99192b13d83d731ffd5.png\",\n\"https://fontmeme.com/permalink/200502/a4354e21bfbf3e0505ca35f4e0f910cd.png\",\n\"https://fontmeme.com/permalink/200502/91420d4541314a1e31b2d2cff5033c8f.png\",\n\"https://fontmeme.com/permalink/200502/8b02e5dd705dab160fa15443bc796bf0.png\",\n\"https://fontmeme.com/permalink/200502/8b02e5dd705dab160fa15443bc796bf0.png\",\n\"https://fontmeme.com/permalink/200502/f9873a948acd1311370868fdd30c32d9.png\",\n\"https://fontmeme.com/permalink/200502/13510182228aaf8bfd0080b9b07aa847.png\",\n\"https://fontmeme.com/permalink/200502/0548c6ac6e9e71476a6def5f848ed46a.png\",\n\"https://fontmeme.com/permalink/200502/e0a48641192dd5da576842bfed0ae5ba.png\",\n\"https://fontmeme.com/permalink/200502/5f9fe2982c84efdab49ac9750e669df2.png\",\n\"https://fontmeme.com/permalink/200502/61d59ef0a950e1e4a4fc0eba3140c782.png\",\n\"https://fontmeme.com/permalink/200502/e1b3cee591331d2549177a7f74410989.png\",\n\"https://fontmeme.com/permalink/200502/fc80be6eb65d38b20b64936f18b95d2c.png\",\n\"https://fontmeme.com/permalink/200502/2b6543751702e1acdae3fea32ecf8787.png\",\n\"https://fontmeme.com/permalink/200502/c103175208bd4b37a973b3299a053117.png\",\n\"https://fontmeme.com/permalink/200502/c63d389110d441c7a781f436e808026b.png\",\n\"https://fontmeme.com/permalink/200502/db10fddba18a6f6974628101313dd99e.png\",\n\"https://fontmeme.com/permalink/200502/41bdb4608e93f26053a725424d295e15.png\",\n\"https://fontmeme.com/permalink/200502/c229afcc0f0c1ed5a22fe741494be355.png\",\n\"https://fontmeme.com/permalink/200502/fe2db9f7d19ad03280cbc1e34ad09359.png\",\n\"https://fontmeme.com/permalink/200502/03cd29494dc96b7c325287a47fc194c4.png\",\n\"https://fontmeme.com/permalink/200502/513cd0cecbbfaa4a7c0c95a07e08e5e1.png\",\n\"https://fontmeme.com/permalink/200502/b497ddc60697cc683e4d2351793e1bf6.png\",\n\"https://fontmeme.com/permalink/200502/9e3f0501fc68019142d7af77efe0699d.png\",\n\"https://fontmeme.com/permalink/200502/d97dbd2d8aee97d92b567b7626370f51.png\",\n\"https://fontmeme.com/permalink/200502/25ea63f82bc378310bb4f73097eaa398.png\",\n\"https://fontmeme.com/permalink/200502/58432f1e3afbf5a3e8ed93b96d8ccecd.png\",\n\"https://fontmeme.com/permalink/200502/f81b906854b10639d2b3ce7088adc18a.png\",\n\"https://fontmeme.com/permalink/200502/cdda963cf2ce109583f3e12cb468fe76.png\",\n\"https://fontmeme.com/permalink/200502/666a2d5f6d813bd7d5b9abd04e2d24e5.png\",\n\"https://fontmeme.com/permalink/200502/fad440f388348a1215fdf8bc57f250f3.png\",\n\"https://fontmeme.com/permalink/200502/45fd7e599d32e4cfdb58e9377010b576.png\",\n\"https://fontmeme.com/permalink/200502/dd2f8a5dfdb277ac2cc24ed69b21585a.png\",\n\"https://fontmeme.com/permalink/200502/d5a4b59d652482242996e0d4cece7d7d.png\",\n\"https://fontmeme.com/permalink/200502/3641c1af46d1215a823278b366c28fc3.png\",\n\"https://fontmeme.com/permalink/200502/60316d1e125cc7a68459989fadcec0a7.png\",\n\"https://fontmeme.com/permalink/200502/af8abeabf1d9740c4dc466a29ab666bb.png\",\n\"https://fontmeme.com/permalink/200502/c1b4689d5a203532e8c91e70574aa239.png\",\n\"https://fontmeme.com/permalink/200502/ac898a46eb9e0781db38bd2cccd34d5c.png\",\n\"https://fontmeme.com/permalink/200502/9c2ca934a98ec57c6890f3ecd1b68510.png\",\n\"https://fontmeme.com/permalink/200502/2b747f4817c73b774deac3ea79982d0f.png\",\n\"https://fontmeme.com/permalink/200502/2ca5220b6be7929fd523c3d91e9648c5.png\",\n\"https://fontmeme.com/permalink/200502/2ca5220b6be7929fd523c3d91e9648c5.png\",\n\"https://fontmeme.com/permalink/200502/ddf911905cdf2a2d890244a5cdd2ef9b.png\",\n\"https://fontmeme.com/permalink/200502/0110e662d342513460c0b27db029f92d.png\",\n\"https://fontmeme.com/permalink/200502/0c2cf8e9e6f360c42c12b15622c95657.png\"\n]\n                        \n                    \n\n\n            \n        \n\n    dist/org-uzh-ase-frontend/assets/title_different_fonts.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            titles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    \"https://fontmeme.com/permalink/200502/f942bcee948945d316eaa6aa7c5ac164.png\",\n    \"https://fontmeme.com/permalink/200502/9642e6bba3e4283aa02026d7bde77b61.png\",\n    \"https://fontmeme.com/permalink/200502/436d381ae30b32efebc53b88718b5cbf.png\",\n    \"https://fontmeme.com/permalink/200502/9bd35ed7a3803b4672e44235cbe7e1c5.png\",\n\"https://fontmeme.com/permalink/200502/f2ab02732835c99192b13d83d731ffd5.png\",\n\"https://fontmeme.com/permalink/200502/a4354e21bfbf3e0505ca35f4e0f910cd.png\",\n\"https://fontmeme.com/permalink/200502/91420d4541314a1e31b2d2cff5033c8f.png\",\n\"https://fontmeme.com/permalink/200502/8b02e5dd705dab160fa15443bc796bf0.png\",\n\"https://fontmeme.com/permalink/200502/8b02e5dd705dab160fa15443bc796bf0.png\",\n\"https://fontmeme.com/permalink/200502/f9873a948acd1311370868fdd30c32d9.png\",\n\"https://fontmeme.com/permalink/200502/13510182228aaf8bfd0080b9b07aa847.png\",\n\"https://fontmeme.com/permalink/200502/0548c6ac6e9e71476a6def5f848ed46a.png\",\n\"https://fontmeme.com/permalink/200502/e0a48641192dd5da576842bfed0ae5ba.png\",\n\"https://fontmeme.com/permalink/200502/5f9fe2982c84efdab49ac9750e669df2.png\",\n\"https://fontmeme.com/permalink/200502/61d59ef0a950e1e4a4fc0eba3140c782.png\",\n\"https://fontmeme.com/permalink/200502/e1b3cee591331d2549177a7f74410989.png\",\n\"https://fontmeme.com/permalink/200502/fc80be6eb65d38b20b64936f18b95d2c.png\",\n\"https://fontmeme.com/permalink/200502/2b6543751702e1acdae3fea32ecf8787.png\",\n\"https://fontmeme.com/permalink/200502/c103175208bd4b37a973b3299a053117.png\",\n\"https://fontmeme.com/permalink/200502/c63d389110d441c7a781f436e808026b.png\",\n\"https://fontmeme.com/permalink/200502/db10fddba18a6f6974628101313dd99e.png\",\n\"https://fontmeme.com/permalink/200502/41bdb4608e93f26053a725424d295e15.png\",\n\"https://fontmeme.com/permalink/200502/c229afcc0f0c1ed5a22fe741494be355.png\",\n\"https://fontmeme.com/permalink/200502/fe2db9f7d19ad03280cbc1e34ad09359.png\",\n\"https://fontmeme.com/permalink/200502/03cd29494dc96b7c325287a47fc194c4.png\",\n\"https://fontmeme.com/permalink/200502/513cd0cecbbfaa4a7c0c95a07e08e5e1.png\",\n\"https://fontmeme.com/permalink/200502/b497ddc60697cc683e4d2351793e1bf6.png\",\n\"https://fontmeme.com/permalink/200502/9e3f0501fc68019142d7af77efe0699d.png\",\n\"https://fontmeme.com/permalink/200502/d97dbd2d8aee97d92b567b7626370f51.png\",\n\"https://fontmeme.com/permalink/200502/25ea63f82bc378310bb4f73097eaa398.png\",\n\"https://fontmeme.com/permalink/200502/58432f1e3afbf5a3e8ed93b96d8ccecd.png\",\n\"https://fontmeme.com/permalink/200502/f81b906854b10639d2b3ce7088adc18a.png\",\n\"https://fontmeme.com/permalink/200502/cdda963cf2ce109583f3e12cb468fe76.png\",\n\"https://fontmeme.com/permalink/200502/666a2d5f6d813bd7d5b9abd04e2d24e5.png\",\n\"https://fontmeme.com/permalink/200502/fad440f388348a1215fdf8bc57f250f3.png\",\n\"https://fontmeme.com/permalink/200502/45fd7e599d32e4cfdb58e9377010b576.png\",\n\"https://fontmeme.com/permalink/200502/dd2f8a5dfdb277ac2cc24ed69b21585a.png\",\n\"https://fontmeme.com/permalink/200502/d5a4b59d652482242996e0d4cece7d7d.png\",\n\"https://fontmeme.com/permalink/200502/3641c1af46d1215a823278b366c28fc3.png\",\n\"https://fontmeme.com/permalink/200502/60316d1e125cc7a68459989fadcec0a7.png\",\n\"https://fontmeme.com/permalink/200502/af8abeabf1d9740c4dc466a29ab666bb.png\",\n\"https://fontmeme.com/permalink/200502/c1b4689d5a203532e8c91e70574aa239.png\",\n\"https://fontmeme.com/permalink/200502/ac898a46eb9e0781db38bd2cccd34d5c.png\",\n\"https://fontmeme.com/permalink/200502/9c2ca934a98ec57c6890f3ecd1b68510.png\",\n\"https://fontmeme.com/permalink/200502/2b747f4817c73b774deac3ea79982d0f.png\",\n\"https://fontmeme.com/permalink/200502/2ca5220b6be7929fd523c3d91e9648c5.png\",\n\"https://fontmeme.com/permalink/200502/2ca5220b6be7929fd523c3d91e9648c5.png\",\n\"https://fontmeme.com/permalink/200502/ddf911905cdf2a2d890244a5cdd2ef9b.png\",\n\"https://fontmeme.com/permalink/200502/0110e662d342513460c0b27db029f92d.png\",\n\"https://fontmeme.com/permalink/200502/0c2cf8e9e6f360c42c12b15622c95657.png\"\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
